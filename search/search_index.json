{"config":{"lang":["hu"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"T\u00e1rgy ismertet\u0151","text":"<p>A t\u00e1rgyk\u00f6vetelm\u00e9nyeket l\u00e1sd a hivatalos tant\u00e1rgyi adatlapon.</p> <p>A laborok sorrendj\u00e9t \u00e9s a bead\u00e1sok hat\u00e1ridej\u00e9t Moodle-ben tal\u00e1lod.</p> <p>Jav\u00edt\u00e1s az anyagban</p> <p>A t\u00e1rgy hallgat\u00f3inak az anyagban t\u00f6rt\u00e9n\u0151 jav\u00edt\u00e1s\u00e9rt, kieg\u00e9sz\u00edt\u00e9s\u00e9rt plusz pontot adunk! Ha hib\u00e1t tal\u00e1lsz, vagy kieg\u00e9sz\u00edten\u00e9d/pontos\u00edtan\u00e1d a feladatle\u00edr\u00e1sokat, nyiss egy pull request-et! A repository linkj\u00e9t a jobb fels\u0151 sarokban tal\u00e1lod.</p> <p>A jav\u00edt\u00e1s menet\u00e9r\u0151l \u00e9s form\u00e1j\u00e1r\u00f3l b\u0151vebben a \"Hozz\u00e1j\u00e1rul\u00e1s az anyaghoz\" dokumentumban olvashatsz b\u0151vebben.</p> <p>Felhaszn\u00e1l\u00e1si felt\u00e9telek</p> <p>Az itt tal\u00e1lhat\u00f3 oktat\u00e1si seg\u00e9danyagok a BMEVIAUBXAV080 - Halad\u00f3 Android fejleszt\u00e9s t\u00e1rgy hallgat\u00f3inak k\u00e9sz\u00fcltek. Az anyagok oly m\u00f3d\u00fa felhaszn\u00e1l\u00e1sa, amely a t\u00e1rgy oktat\u00e1s\u00e1hoz nem szorosan kapcsol\u00f3dik, csak a szerz\u0151(k) \u00e9s a forr\u00e1s megjel\u00f6l\u00e9s\u00e9vel t\u00f6rt\u00e9nhet.</p> <p>Az anyagok a t\u00e1rgy keret\u00e9ben oktatott kontextusban \u00e9rtelmezhet\u0151ek. Az anyagok\u00e9rt egy\u00e9b felhaszn\u00e1l\u00e1s eset\u00e9n a szerz\u0151(k) felel\u0151ss\u00e9get nem v\u00e1llalnak.</p>"},{"location":"#altalanos-tudnivalok","title":"\u00c1ltal\u00e1nos tudnival\u00f3k","text":""},{"location":"#laborok-megoldasainak-beadasa","title":"Laborok megold\u00e1sainak bead\u00e1sa","text":"<p>A laborok megold\u00e1s\u00e1t egy szem\u00e9lyre sz\u00f3l\u00f3 git repository-ban kell beadni. Ennek pontos folyamat\u00e1t l\u00e1sd itt. K\u00e9r\u00fcnk, hogy alaposan olvasd v\u00e9gig a le\u00edr\u00e1st!</p> <p>FONTOS</p> <p>A laborok elk\u00e9sz\u00edt\u00e9se \u00e9s bead\u00e1sa sor\u00e1n az itt le\u00edrtak szerint kell elj\u00e1rnod. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck.</p> <p>A bead\u00e1s sor\u00e1n a munkafolyamati hib\u00e1k\u00e9rt (pl. nem megfelel\u0151 emberhez hozz\u00e1rendel\u00e9se, hozz\u00e1rendel\u00e9s elfelejt\u00e9se) pontot vonunk le.</p>"},{"location":"#laborok-ertekelese","title":"Laborok \u00e9rt\u00e9kel\u00e9se","text":"<p>Minden labort k\u00fcl\u00f6n jeggyel \u00e9rt\u00e9kel\u00fcnk. A teljes\u00edt\u00e9s felt\u00e9tele a hat\u00e1rid\u0151ig t\u00f6rt\u00e9n\u0151 bead\u00e1s. A jegy (1-5 sk\u00e1l\u00e1n) a labor feladatokon megszerezhet\u0151 5 pont alapj\u00e1n t\u00f6rt\u00e9nik. A feladatok bead\u00e1s\u00e1hoz minden esetben a GitHub platformot haszn\u00e1ljuk. </p> <p>A feladatok ki\u00e9rt\u00e9kel\u00e9se egyes laborok eset\u00e9n r\u00e9szben automatikusan t\u00f6rt\u00e9nik. A futtathat\u00f3 k\u00f3dokat val\u00f3ban le fogjuk futtatni, ez\u00e9rt minden esetben fontos a feladatle\u00edr\u00e1sok pontos k\u00f6vet\u00e9se (kiindul\u00f3 k\u00f3d v\u00e1z haszn\u00e1lata, csak a megengedett f\u00e1jlok v\u00e1ltoztat\u00e1sa, stb.)!</p> <p>A ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9r\u0151l a GitHub-on kapsz sz\u00f6veges visszajelz\u00e9st (l\u00e1sd itt). Ha enn\u00e9l t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t.</p>"},{"location":"#kepernyokepek","title":"K\u00e9perny\u0151k\u00e9pek","text":"<p>A laborok k\u00e9rik, hogy k\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet a megold\u00e1s egy-egy r\u00e9sz\u00e9r\u0151l. Ez k\u00fcl\u00f6n\u00f6sen akkor fontos, ha a feladatot otthon k\u00e9sz\u00edted el, mert ezzel bizony\u00edtod, hogy a megold\u00e1sod saj\u00e1t magad k\u00e9sz\u00edtetted. A k\u00e9perny\u0151k\u00e9pek elv\u00e1rt tartalm\u00e1t a feladat minden esetben pontosan megnevezi. A k\u00e9perny\u0151k\u00e9p k\u00e9sz\u00fclhet a teljes desktopr\u00f3l is, de lehet csak a k\u00e9rt alkalmaz\u00e1sr\u00f3l k\u00e9sz\u00edteni.</p> <p>A k\u00e9perny\u0151k\u00e9peket a megold\u00e1s r\u00e9szek\u00e9nt kell beadni, \u00edgy felker\u00fclnek a git repository tartalm\u00e1val egy\u00fctt. Mivel a repository priv\u00e1t, azt az oktat\u00f3kon k\u00edv\u00fcl m\u00e1s nem l\u00e1tja. Amennyiben olyan tartalom ker\u00fcl a k\u00e9perny\u0151k\u00e9pre, amit nem szeretn\u00e9l felt\u00f6lteni, kitakarhatod a k\u00e9pr\u0151l.</p>"},{"location":"#elvarasaink-a-munkaval-kapcsolatban","title":"Elv\u00e1r\u00e1saink a munk\u00e1val kapcsolatban","text":"<p>Hova kell felt\u00f6lteni a megold\u00e1st? Fentebb megtal\u00e1lod a le\u00edr\u00e1st.</p> <p>Egy\u00e9ni munka? Otthoni munka? Mivel a laborokra jegyet kapsz, elv\u00e1r\u00e1s, hogy mindenki saj\u00e1t megold\u00e1st k\u00e9sz\u00edtsen el \u00e9s adjon be. Ez nem z\u00e1rja ki az egym\u00e1snak ny\u00fajtott seg\u00edts\u00e9get. Kiz\u00e1rja viszont m\u00e1s megold\u00e1s\u00e1nak lem\u00e1sol\u00e1s\u00e1t. Ez\u00e9rt k\u00e9rj\u00fck a k\u00e9perny\u0151k\u00e9peket, mert \u00edgy a munka folyamat\u00e1val bizony\u00edtod a megold\u00e1s saj\u00e1t elk\u00e9sz\u00edt\u00e9s\u00e9t.</p> <p>M\u00e1s munk\u00e1j\u00e1nak lem\u00e1sol\u00e1sa: A BME etikai k\u00f3dexe \u00e9s a TVSZ szab\u00e1lyozza. Komolyan vessz\u00fck.</p> <p>Egy apr\u00f3 el\u00edr\u00e1s miatt nem m\u0171k\u00f6d\u00f6tt a k\u00f3dom, \u00e9s nem \u00e9rt\u00e9kelt\u00e9tek. A laborok sor\u00e1n m\u0171k\u00f6d\u0151 programot, k\u00f3dot, k\u00f3dr\u00e9szletet kell k\u00e9sz\u00edteni. Az\u00e9rt sz\u00e1m\u00edt\u00f3g\u00e9p laborban vagy otthon k\u00e9sz\u00edtj\u00fck a feladatot, mert \u00edgy tudod magad ellen\u0151rizni. Minimum elv\u00e1r\u00e1s, hogy a beadott k\u00f3d leforduljon, lefusson. Ha a viselked\u00e9s nem teljesen helyes, azt \u00e9rt\u00e9kelj\u00fck. De ha egy\u00e1ltal\u00e1n nem m\u0171k\u00f6dik, nem \u00e9rt\u00e9kelj\u00fck a megold\u00e1st.</p> <p>Az\u00e9rt \u00edgy tesz\u00fcnk, mert m\u00e9rn\u00f6kk\u00e9nt a feladatod a probl\u00e9m\u00e1k megold\u00e1sa lesz, \u00e9s nem csak egy k\u00eds\u00e9rlet a megold\u00e1sra. Mit gondolsz, ha a munkahelyeden a f\u0151n\u00f6k\u00f6dnek \u00e1tadsz egy nem fordul\u00f3 k\u00f3dot, mit fog tenni?</p> <p>Ha otthonr\u00f3l k\u00e9sz\u00edtem el a megold\u00e1st, hogyan kapok seg\u00edts\u00e9get? Ak\u00e1r otthonr\u00f3l dolgozol, ak\u00e1r egyetemi laborban, egy laborvezet\u0151h\u00f6z tartozol. \u0150 felel nem csak a kontakt\u00f3ra megtart\u00e1s\u00e1\u00e9rt, hanem az\u00e9rt is, hogy a f\u00e9l\u00e9v k\u00f6zben a feladatok bead\u00e1sa \u00e9s ellen\u0151rz\u00e9se rendben t\u00f6rt\u00e9njen.</p> <p>Nem seg\u00edt a laborvezet\u0151. Mi\u00e9rt? Dehogynem seg\u00edt. Viszont ha egyb\u0151l megmondan\u00e1 a megold\u00e1st, csak azt tanuln\u00e1d meg, hogy legk\u00f6zelebb is meg kell k\u00e9rdezni. Pr\u00f3b\u00e1ld magad megoldani, mutass alternat\u00edv\u00e1kat, k\u00e9rdezz konkr\u00e9tan. Mutasd meg, hogy professzion\u00e1lis a hozz\u00e1\u00e1ll\u00e1sod.</p> <p>Akkor mit k\u00e9rdezhetek meg a laborvezet\u0151t\u0151l? R\u00f6viden: https://stackoverflow.com/help/how-to-ask. Hosszabban: Ha valamivel elakadsz, \u00e9rtsd meg a probl\u00e9m\u00e1t. A probl\u00e9ma nem az, hogy \"nem m\u0171k\u00f6dik\" vagy \"nem tudom, hogyan csin\u00e1ljam\". Akkor tudsz j\u00f3l k\u00e9rdezni, ha m\u00e1r k\u00f6r\u00fclj\u00e1rtad a probl\u00e9m\u00e1t, \u00e9s azt is meg tudod mutatni, mivel pr\u00f3b\u00e1lkozt\u00e1l m\u00e1r.</p> <p>Sz\u00f3val Google \u00e9s StackOverflow a megold\u00e1s? Nem. Minden tud\u00e1s, amire sz\u00fcks\u00e9ged van, m\u00e1r el\u0151fordult egyetemi tanulm\u00e1nyaid sor\u00e1n. A Google j\u00f3, a StackOverflow m\u00e9g jobb.... De! A v\u00e1laszt is meg kell \u00e9rteni. Lehet, hogy a megtal\u00e1lt v\u00e1lasz megold\u00e1s, csak \u00e9pp nem a te probl\u00e9m\u00e1dra.</p> <p>Sok a hat\u00e1rid\u0151, meg az el\u0151\u00edr\u00e1s. Ez n\u00e9z\u0151pont k\u00e9rd\u00e9se. A m\u00e9rn\u00f6k nem csak programozni tud, hanem meghat\u00e1rozott keretek k\u00f6z\u00f6tt dolgozni. Mert a vil\u00e1g bonyolult, \u00e9s a bonyolults\u00e1got szab\u00e1lyokkal lehet kord\u00e1ban tartani. Ha id\u0151d engedi, \u00e9rdemes megn\u00e9zni, mit mond Robert C. Martin (Bob Martin, \"Uncle Bob\") arr\u00f3l, honnan sz\u00e1rmazik a szoftverfejleszt\u0151i szakmai: https://www.youtube.com/watch?v=ecIWPzGEbFc</p>"},{"location":"hf/","title":"H\u00e1zi feladat inform\u00e1ci\u00f3k","text":"<p>TODO</p>"},{"location":"laborok/news/","title":"Labor 2 - News","text":"<p>A m\u00e1sodik laborban egy k\u00f6z\u00f6ss\u00e9gi h\u00edrport\u00e1lt k\u00e9sz\u00edt\u00fcnk az architektur\u00e1lis k\u00e9rd\u00e9sekre koncentr\u00e1lva. A h\u00edrport\u00e1l egy kiadott backenddel kommunik\u00e1l. A backendhez b\u00e1rki szabadon bek\u00fcldhet r\u00f6vid h\u00edreket, amelyeket az alkalmaz\u00e1s megjelen\u00edt. Fontos, hogy az alkalmaz\u00e1st az architektur\u00e1ra vonatkoz\u00f3 best practice-ek szerint k\u00e9sz\u00edts\u00fck el, illetve hogy az alkalmaz\u00e1s k\u00e9pes legyen offline m\u0171k\u00f6d\u00e9sre is. Az alkalmaz\u00e1s k\u00f3dmin\u0151s\u00e9ge az architektur\u00e1lis szempontokon t\u00fal is fontos, ez\u00e9rt ktlint plugint is enged\u00e9lyezni fogunk, illetve konfigur\u00e1lunk tesztlefedetts\u00e9gi riportokat is.</p> <p>A feladat sor\u00e1n az al\u00e1bbi technol\u00f3gi\u00e1kkal fogunk tal\u00e1lkozni:</p> <ul> <li>Modern App Architecture</li> <li>ViewModel</li> <li>Dependency Injection</li> <li>OpenAPI</li> <li>Ktlint</li> <li>Room</li> </ul> <p>Az alkalmaz\u00e1sban mind\u00f6ssze k\u00e9t l\u00e9nyeges fel\u00fclet lesz. A f\u0151k\u00e9perny\u0151n a legut\u00f3bbi h\u00edrek l\u00e1that\u00f3ak bek\u00fcld\u00e9s\u00fck szerint cs\u00f6kken\u0151 sorrendben. Minden h\u00edrhez megjelenik a c\u00edme, sz\u00f6vege, a bek\u00fcld\u0151 neve \u00e9s a bek\u00fcld\u00e9s ideje. A k\u00e9perny\u0151t r\u00f6vid id\u0151k\u00f6z\u00f6nk\u00e9nt automatikusan friss\u00fcl. A k\u00e9perny\u0151n lev\u0151 floating action buttonra kattintva pedig egy m\u00e1sik k\u00e9perny\u0151 jelenik meg, ahol \u00fajabb h\u00edrt k\u00fcldhet\u00fcnk be.</p> <p>TODO</p> <p> </p>"},{"location":"laborok/news/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1sa folyamat\u00e1t.</p>"},{"location":"laborok/news/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol>"},{"location":"laborok/news/#projekt-megnyitasa","title":"Projekt megnyit\u00e1sa","text":"<p>Az alkalmaz\u00e1s v\u00e1za m\u00e1r adott a <code>News</code> k\u00f6nyvt\u00e1rban. Nyissuk meg a k\u00f6nyvt\u00e1rat az Android Studi\u00f3val.</p>"},{"location":"laborok/news/#elso-feladat-az-alkalmazas-attekintese-a-backend-inditasa","title":"Els\u0151 feladat: az alkalmaz\u00e1s \u00e1ttekint\u00e9se, a backend ind\u00edt\u00e1sa","text":"<p>Tekints\u00fck \u00e1t az alkalmaz\u00e1s k\u00f3dj\u00e1t! Az alkalmaz\u00e1s eleve a Modern App Architecture elvek szerint k\u00e9sz\u00fclt, de m\u00e9g hi\u00e1nyoznak bizonyos funkci\u00f3i, p\u00e9ld\u00e1ul nem t\u00e1volr\u00f3l k\u00e9ri el a h\u00edreket, hanem be\u00e9getett list\u00e1t tartalmaz. Ahhoz, hogy a t\u00e9nyleges h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3t megval\u00f3s\u00edtsuk, el\u0151sz\u00f6r el kell ind\u00edtanunk a backendet. A backend a feladat repository-j\u00e1ban, a <code>news-backend</code> k\u00f6nyvt\u00e1rban tal\u00e1lhat\u00f3, \u00e9s t\u00f6bbf\u00e9lek\u00e9ppen ind\u00edthat\u00f3. Ha Docker n\u00e9lk\u00fcl ind\u00edtjuk, akkor JDK 17 vagy \u00fajabb sz\u00fcks\u00e9ges hozz\u00e1. A backend egy gradle projekt, \u00e9s gradle wrappert is tartalmaz, \u00edgy a k\u00f6nyvt\u00e1rban parancssorral k\u00f6nnyen ind\u00edthat\u00f3. Windowson:</p> <p><code>.\\gradlew.bat bootRun</code></p> <p>Linuxon \u00e9s Macen:</p> <p><code>./gradlew bootRun</code></p> <p>Vagy ha ismer\u0151s sz\u00e1munkra a Docker, akkor a projekt gy\u00f6ker\u00e9ben elhelyezett <code>Dockerfile</code> seg\u00edts\u00e9g\u00e9vel k\u00e9sz\u00edthet\u00fcnk egy image-et, amit futtatva elindul a backend. Ha \u00edgy ind\u00edtod, \u00fcgyelj r\u00e1, hogy a 8080-as bels\u0151 portot mappeld a hosztg\u00e9p 8080-as portj\u00e1ra!</p> <p>V\u00e9gezet\u00fcl egy harmadik lehet\u0151s\u00e9g, hogy ha ismer\u0151s sz\u00e1munkra a Java (Kotlin) alap\u00fa backendfejleszt\u00e9s, akkor a projektet egy fejleszt\u0151k\u00f6rnyezetben (IntelliJ, Eclipse, VS Code) megnyitva is futtathatjuk a projektet.</p> <p>A backend mindenk\u00e9pp a 8080-as porton indul, \u00e9s gener\u00e1l\u00f3dik hozz\u00e1 egy OpenAPI le\u00edr\u00e1s is, valamint elindul a Swagger UI grafikus megjelen\u00edt\u0151, ahol a v\u00e9gpontokat egy \u00e1ttekinthet\u0151 grafikus fel\u00fcleten is megn\u00e9zheted. Ezt itt \u00e9red el: http://localhost:8080/swagger-ui/index.html</p> <p>A szabv\u00e1nyos OpenAPI le\u00edr\u00e1s v\u00e9gpontja pedig: http://localhost:8080/v3/api-docs</p> <p>Vizsg\u00e1ljuk meg az OpenAPI le\u00edr\u00e1st! A backendben k\u00e9t v\u00e9gpont van, egyik a h\u00edrek list\u00e1z\u00e1s\u00e1ra szolg\u00e1l, \u00e9s itt opcion\u00e1lisan megadhat\u00f3 egy id\u0151 is, hogy mely id\u0151pontt\u00f3l szeretn\u00e9nk list\u00e1zni az \u00faj h\u00edreket. A m\u00e1sik v\u00e9gpont \u00faj h\u00edr felvitel\u00e9re szolg\u00e1l. A Swagger UI-ban ki is pr\u00f3b\u00e1latod a v\u00e9gpontokat.</p> <p>Vigy\u00e9l fel egy h\u00edrt, amelynek Te vagy a szerz\u0151je, majd list\u00e1zd a h\u00edreket!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet (f1.png) r\u00f3la, hogy fut a backend, \u00e9s visszaadta a h\u00edrek list\u00e1j\u00e1t, benne az \u00e1ltalad felvett h\u00edrrel!</p> <p>Fontos: a backend csak a fut\u00e1s\u00e1nak ideje alatt \u0151rzi meg a felvitt h\u00edreket, ha \u00fajraind\u00edtod, akkor a kor\u00e1bban elmentett h\u00edrek elvesznek.</p>"},{"location":"laborok/news/#masodik-feladat-openapi-alapu-kodgeneralas","title":"M\u00e1sodik feladat: OpenAPI alap\u00fa k\u00f3dgener\u00e1l\u00e1s","text":"<p>Az els\u0151 l\u00e9p\u00e9s abba az ir\u00e1nyba, hogy k\u00e9pesek legy\u00fcnk a backenddel kommunik\u00e1lni az, hogy elk\u00e9sz\u00edtj\u00fck a kliensk\u00f3dot a backend megh\u00edv\u00e1s\u00e1hoz. Ezt megtehetj\u00fck b\u00e1rmelyik n\u00e9pszer\u0171 k\u00f6nyvt\u00e1r seg\u00edts\u00e9g\u00e9vel (pl. Retrofit), de most ki fogjuk haszn\u00e1lni, hogy a backendhez el\u00e9rhet\u0151 egy OpenAPI specifik\u00e1ci\u00f3.</p> <p>El\u0151sz\u00f6r t\u00f6lts\u00fck le backend \u00e1ltal gener\u00e1lt OpenAPI le\u00edr\u00e1st. Ennek elhelyez\u00e9s\u00e9re nincs konvencion\u00e1lisan elfogadott k\u00f6nyvt\u00e1r, most k\u00e9sz\u00edts\u00fcnk neki egy <code>src/main/openapi</code> k\u00f6nyvt\u00e1rat! Viszont mivel ez nem konvencion\u00e1lisan haszn\u00e1lt k\u00f6nyvt\u00e1r, ez\u00e9rt az Android Studi\u00f3ban \u00e1t kell v\u00e1ltanunk <code>Android</code> n\u00e9zetr\u0151l <code>Project files</code> n\u00e9zetre, hogy l\u00e1ssuk a val\u00f3s k\u00f6nyvt\u00e1rakat. Hozzunk l\u00e9tre itt egy f\u00e1jlt <code>api.json</code> n\u00e9ven, \u00e9s tegy\u00fck be ebbe az API-le\u00edr\u00e1st! Fontos, hogy a hosztg\u00e9p\u00fcnket az Android emul\u00e1torb\u00f3l a <code>10.0.2.2</code> IP-c\u00edmen \u00e9rhetj\u00fck el, ez\u00e9rt m\u00f3dos\u00edtsuk az API-le\u00edr\u00e1s <code>servers</code> szekci\u00f3j\u00e1t:</p> <pre><code>\"servers\": [\n{\n\"url\": \"http://10.0.2.2:8080\",\n\"description\": \"Generated server url\"\n}\n],\n</code></pre> <p>Mivel az alkalmaz\u00e1sunk Internetet is fog haszn\u00e1lni, vegy\u00fck fel a Manifest-f\u00e1jlba a megfelel\u0151 enged\u00e9lyt:</p> <pre><code>&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;\n</code></pre> <p>A k\u00f6vetkez\u0151 l\u00e9p\u00e9s, hogy az OpenAPI plugint fel kell venn\u00fcnk a projektbe. A projektszint\u0171 <code>build.gradle.kts</code> f\u00e1jlba vegy\u00fck fel el\u0151sz\u00f6r, de itt m\u00e9g ne alkalmazzuk:</p> <pre><code>id(\"org.openapi.generator\") version \"7.8.0\" apply false\n</code></pre> <p>Majd a modulszint\u0171 <code>build.gradle.kts</code> f\u00e1jlban alkalmazzuk is:</p> <pre><code>id(\"org.openapi.generator\")\n</code></pre> <p>Majd szint\u00e9n ebbe a f\u00e1jlba vegy\u00fck fel a gener\u00e1tor konfigur\u00e1ci\u00f3j\u00e1t is:</p> <pre><code>openApiGenerate {\ngeneratorName.set(\"kotlin\")\ninputSpec.set(\"${projectDir.path}/src/main/openapi/api.json\")\noutputDir.set(\"${layout.buildDirectory.asFile.orNull}/generated/openapi\")\napiPackage.set(\"hu.bme.aut.news.api\")\nmodelPackage.set(\"hu.bme.aut.news.model\")\nadditionalProperties.set(\nmapOf(\nPair(\"serializationLibrary\", \"kotlinx_serialization\"),\nPair(\"library\", \"jvm-retrofit2\"),\nPair(\"useCoroutines\", \"true\")\n)\n)\ntypeMappings.set(\nmapOf(\nPair(\"string+date-time\", \"LocalDateTime\")\n)\n)\n}\n</code></pre> <p>L\u00e1that\u00f3 a fenti konfigur\u00e1ci\u00f3b\u00f3l, hogy az API-le\u00edr\u00e1s \u00fatvonal\u00e1t, a kimenet k\u00f6nyvt\u00e1r\u00e1t \u00e9s package-neveit \u00e1ll\u00edtjuk be, valamint n\u00e9h\u00e1ny egy\u00e9b param\u00e9terrel azt adjuk meg, hogy a gener\u00e1lt k\u00f3d milyen k\u00f6nyvt\u00e1rakat haszn\u00e1ljon. V\u00e9g\u00fcl az OpenAPI t\u00edpusok Java-t\u00edpusra lek\u00e9pz\u00e9s\u00e9nek konfigur\u00e1l\u00e1sa t\u00f6rt\u00e9nik. Alap\u00e9rtelmezetten az OpenAPI szerinti d\u00e1tumot \u00e9s id\u0151t jel\u00f6l\u0151 sztringek <code>OffsetDateTime</code> t\u00edpusra k\u00e9pez\u0151dn\u00e9nek le, de ezzel k\u00f6r\u00fclm\u00e9nyesebb lenne dolgoznunk.</p> <p>Ezzel m\u00e1r a megfelel\u0151 taszkot h\u00edvva gener\u00e1lni tudjuk a kliensk\u00f3dot, viszont mivel az alkalmaz\u00e1sunk k\u00e9zzel \u00edrt k\u00f3dja a gener\u00e1lt k\u00f3dra fog \u00e9p\u00fclni, ez\u00e9rt fontos, hogy a buildel\u00e9s sor\u00e1n a k\u00f3dgener\u00e1l\u00e1s is mindenk\u00e9pp lefusson. Ehhez az al\u00e1bbi f\u00fcgg\u0151s\u00e9get kell konfigur\u00e1lnunk a taszkok k\u00f6zt, ezt m\u00e9g az <code>android</code> szekci\u00f3n k\u00edv\u00fclre tegy\u00fck:</p> <pre><code>tasks.withType&lt;KotlinCompile&gt;().configureEach {\ndependsOn(\"openApiGenerate\")\n}\n</code></pre> <p>M\u00e9g arra is sz\u00fcks\u00e9g\u00fcnk van, hogy az <code>src/main/java</code> k\u00f6nyvt\u00e1rban lev\u0151 k\u00e9zzel \u00edrt forr\u00e1sk\u00f3d f\u00fcgg\u0151s\u00e9gk\u00e9nt megtal\u00e1lja a gener\u00e1lt k\u00f3dot. Ehhez az <code>android</code> blokkba m\u00e9g vegy\u00fck fel az al\u00e1bbit:</p> <pre><code>android {\nkotlin.sourceSets[\"main\"].kotlin.srcDir(\"${layout.buildDirectory.asFile.orNull}/generated/openapi/src/main/kotlin\")\n}\n</code></pre> <p>Futtassuk most le a buildet! Nem fog teljes m\u00e9rt\u00e9kben lefutni, de a gener\u00e1l\u00e1s megt\u00f6rt\u00e9nik. A gener\u00e1lt k\u00f3dok az Android n\u00e9zetben a projekt strukt\u00far\u00e1ban meg is jelennek a <code>kotlin</code> mappa alatt. N\u00e9zz\u00fck meg a gener\u00e1l\u00e1shoz megadott k\u00f6nyvt\u00e1rat, \u00e9s vizsg\u00e1ljuk meg a gener\u00e1lt k\u00f3dot! A ford\u00edt\u00e1si hiba oka, hogy a gener\u00e1lt k\u00f3dnak is vannak f\u00fcgg\u0151s\u00e9gei, konkr\u00e9tan a fenti konfigur\u00e1ci\u00f3t megn\u00e9zve l\u00e1thatjuk, hogy a Retrofit 2 \u00e9s a Kotlin serialization k\u00f6nyvt\u00e1rakat konfigur\u00e1ltuk be, hogy a gener\u00e1lt k\u00f3d ezekre \u00e9p\u00fclj\u00f6n. Ez\u00e9rt vegy\u00fck fel a modulszint\u0171 <code>build.gradle.kts</code> f\u00e1jlunkba ezeket a f\u00fcgg\u0151s\u00e9geket \u00e9s n\u00e9h\u00e1ny ezekhez kapcsol\u00f3d\u00f3t, amelyeket a gener\u00e1lt k\u00f3d szint\u00e9n haszn\u00e1l:</p> <pre><code>// Networking\nimplementation(\"com.squareup.okhttp3:logging-interceptor:4.12.0\")\nimplementation(\"com.squareup.retrofit2:retrofit:2.11.0\")\nimplementation(\"com.squareup.retrofit2:converter-scalars:2.11.0\")\nimplementation(\"com.squareup.retrofit2:converter-kotlinx-serialization:2.11.0\")\nimplementation(\"org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3\")\n</code></pre> <p>Viszont a Kotlin serialization haszn\u00e1lat\u00e1hoz egy gradle pluginra is sz\u00fcks\u00e9g\u00fcnk van, ezt el\u0151bb a projektszint\u0171 <code>build.gradle.kts</code> f\u00e1jlba vessz\u00fck fel:</p> <pre><code>id(\"org.jetbrains.kotlin.plugin.serialization\") version \"2.0.20\" apply false\n</code></pre> <p>Majd a modulszint\u0171be:</p> <pre><code>id(\"org.jetbrains.kotlin.plugin.serialization\")\n</code></pre> <p>\u00cdgy a buildnek m\u00e1r sikeresnek kell lennie. Most pedig integr\u00e1lnunk kell ezt a k\u00f3dot az alkalmaz\u00e1sunkba. Ehhez k\u00e9t f\u0151 l\u00e9p\u00e9st fogunk elv\u00e9gezni:</p> <ul> <li>K\u00e9sz\u00edt\u00fcnk egy <code>NewsNetworkDataSource</code> komponenst, amelynek feladata, hogy elfedje az adatforr\u00e1sunk implement\u00e1ci\u00f3s   r\u00e9szleteit a h\u00edv\u00f3ja el\u0151l, \u00e9s a h\u00edv\u00f3 fel\u00e9 m\u00e1r ne k\u00f6zvet\u00edtsen backend-specifikus, Retrofit-specifikus stb.   r\u00e9szleteket. Ez\u00e9rt ebben a komponensben a gener\u00e1lt adatmodellt, amelybe a backend v\u00e1lasza mappel\u0151dik, \u00e1t fogjuk   konvert\u00e1lni a <code>NewsEntity</code> t\u00edpusra. M\u00e1sr\u00e9szt, a <code>DataSource</code> komponensek konvencion\u00e1lisan r\u00e9szei a Modern App   Architecture-nek, ez\u00e9rt ez az \u00fajabb absztrakci\u00f3 v\u00e9gs\u0151 soron \u00e1tl\u00e1that\u00f3bb\u00e1 teszi az alkalmaz\u00e1sunkat.</li> <li>Ezen k\u00edv\u00fcl m\u00f3dos\u00edtanunk sz\u00fcks\u00e9ges a <code>NewsRepository</code> komponenst, hogy imm\u00e1r ezt az adatforr\u00e1st haszn\u00e1lja.</li> </ul> <p>Most a <code>data.datsource</code> package-ben l\u00e9trehozzuk az adatforr\u00e1st:</p> <pre><code>package hu.bme.aut.android.news.data.datasource\n\nimport hu.bme.aut.android.news.data.entities.NewsEntity\nimport hu.bme.aut.news.api.NewsControllerApi\nimport hu.bme.aut.news.model.NewsEntry\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.flow\nimport kotlinx.datetime.toKotlinLocalDateTime\nimport org.openapitools.client.infrastructure.ApiClient\n\nclass NewsRemoteDataSource {\nprivate val refreshIntervalMs: Long = 5000\nprivate val newsClient = ApiClient().createService(NewsControllerApi::class.java)\n\nval latestNews: Flow&lt;List&lt;NewsEntity&gt;&gt; = flow {\nwhile (true) {\nval latestNews = newsClient.getAll()\n.body()\n.orEmpty()\n.map {\nit.toNewsEntity()\n}\nemit(latestNews)\ndelay(refreshIntervalMs)\n}\n}\n}\n\nfun NewsEntry.toNewsEntity() = NewsEntity(\ntitle = title!!,\nauthor = author!!,\ncreatedAt = createdAt?.toKotlinLocalDateTime()!!,\ndescription = body!!\n)\n</code></pre> <p>Most m\u00f3dos\u00edtjuk a <code>NewsRepositoryImpl</code> oszt\u00e1lyt. Ebben a l\u00e9p\u00e9sben csak a lek\u00e9rdez\u00e9st implement\u00e1ljuk, ez\u00e9rt egyel\u0151re a h\u00edr bek\u00fcld\u00e9se m\u0171k\u00f6d\u00e9sk\u00e9ptelen marad:</p> <pre><code>package hu.bme.aut.android.news.data.datasource\n\nimport hu.bme.aut.android.news.data.entities.NewsEntity\nimport kotlinx.coroutines.flow.Flow\n\nclass NewsRepositoryImpl(\nprivate val newsRemoteDataSource: NewsRemoteDataSource\n) : NewsRepository {\noverride fun getAllNews(): Flow&lt;List&lt;NewsEntity&gt;&gt; = newsRemoteDataSource.latestNews\n\noverride suspend fun createNews(newsItem: NewsEntity) {\n}\n}\n</code></pre> <p>V\u00e9g\u00fcl a fentiek m\u0171k\u00f6d\u00e9s\u00e9hez a <code>RepositoryModule</code> friss\u00edt\u00e9se is sz\u00fcks\u00e9ges:</p> <pre><code>package hu.bme.aut.android.news.data.di\n\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.components.SingletonComponent\nimport hu.bme.aut.android.news.data.datasource.NewsRemoteDataSource\nimport hu.bme.aut.android.news.data.datasource.NewsRepository\nimport hu.bme.aut.android.news.data.datasource.NewsRepositoryImpl\nimport javax.inject.Singleton\n\n@Module\n@InstallIn(SingletonComponent::class)\nobject RepositoryModule {\n\n@Provides\n@Singleton\nfun provideNewsRepository(newsRemoteDataSource: NewsRemoteDataSource): NewsRepository =\nNewsRepositoryImpl(newsRemoteDataSource)\n\n@Provides\n@Singleton\nfun provideNewsRemoteDataSource(): NewsRemoteDataSource = NewsRemoteDataSource()\n}\n</code></pre> <p>Ha most elind\u00edtjuk az alkalmaz\u00e1st, amiatt kapunk hiba\u00fczenetet, mert a backenddel SSL n\u00e9lk\u00fcli HTTP kommunik\u00e1ci\u00f3val akarunk kommunik\u00e1lni. Alapb\u00f3l ez - biztons\u00e1gi indokokb\u00f3l - tilos, viszont egyszer\u0171 m\u00f3don nem tudunk hiteles SSL tan\u00fas\u00edtv\u00e1nyt szerezni, r\u00e1ad\u00e1sul a hosztg\u00e9p\u00fcnknek nincs is felt\u00e9tlen dom\u00e9nneve. Ez\u00e9rt a Manifestben az <code>application</code> elemen elhelyezve az al\u00e1bbi attrib\u00fatumot, kikapcsoljuk ezt a v\u00e9delmet:</p> <pre><code>&lt;application\nandroid:usesCleartextTraffic=\"true\"\n...\n</code></pre> <p>\u00cdgy m\u00e1r m\u0171k\u00f6dnie kell a h\u00edrek let\u00f6lt\u00e9s\u00e9nek. Most a fentiek alapj\u00e1n val\u00f3s\u00edtsd meg \u00f6n\u00e1ll\u00f3an a h\u00edrek bek\u00fcld\u00e9s\u00e9t!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet (f2.png) a kapcsol\u00f3d\u00f3 k\u00f3dr\u00e9szletr\u0151l, benne kommentk\u00e9nt a Neptun-k\u00f3doddal, mellette a fut\u00f3 alkalmaz\u00e1ssal, ahol l\u00e1tszik egy \u00e1ltalad felvitt h\u00edr.</p>"},{"location":"laborok/news/#harmadik-feladat-kodminoseg-javitasa","title":"Harmadik feladat: K\u00f3dmin\u0151s\u00e9g jav\u00edt\u00e1sa","text":"<p>Ebben a feladatban most felvessz\u00fck a projektbe a <code>ktlint</code> plugint, hogy a k\u00f3dol\u00e1si konvenci\u00f3k betart\u00e1s\u00e1val egys\u00e9ges st\u00edlust, jobb k\u00f3dmin\u0151s\u00e9get \u00e9rj\u00fcnk el.</p> <p>Ehhez el\u0151sz\u00f6r vegy\u00fck fel a projektszint\u0171 <code>build.gradle.kts</code> f\u00e1jlunkba a plugint, de itt m\u00e9g ne alkalmazzuk:</p> <pre><code>id(\"org.jlleitschuh.gradle.ktlint\") version \"12.1.1\" apply false\n</code></pre> <p>Majd alkalmazzuk a modulszint\u0171 <code>build.gradle.kts</code> f\u00e1jlban:</p> <pre><code>id(\"org.jlleitschuh.gradle.ktlint\")\n</code></pre> <p>Szint\u00e9n ebbe a f\u00e1jlba vegy\u00fck fel a <code>ktlint</code> alapvet\u0151 konfigur\u00e1ci\u00f3s be\u00e1ll\u00edt\u00e1sait:</p> <pre><code>ktlint {\nandroid.set(true)\nignoreFailures.set(true)\nreporters {\nreporter(ReporterType.PLAIN)\nreporter(ReporterType.HTML)\n}\n}\n</code></pre> <p>Most szinkroniz\u00e1ljuk a projektet, \u00e9s futassuk le a gradle seg\u00edts\u00e9g\u00e9vel a <code>ktlintCheck</code> taszkot! Figyelj\u00fck meg a kimenetet!</p> <p>Szerencs\u00e9re a hi\u00e1nyoss\u00e1gok jelent\u0151s r\u00e9sz\u00e9t automatiz\u00e1ltan is jav\u00edthatjuk a <code>ktlintFormat</code> taszk futtat\u00e1s\u00e1val. Pr\u00f3b\u00e1ljuk ki ezt is! Figyelj\u00fck meg, mely hib\u00e1k azok, amelyeket nem tud automatikusan jav\u00edtani a plugin.</p> <p>Tegy\u00fck fel, hogy nem akarjuk ellen\u0151rizni, hogy ne lehessenek wildcard importok, mert nem tal\u00e1ljuk hasznosnak ezt a szab\u00e1lyt. Konfigur\u00e1ld \u00e1t a <code>ktlint</code> plugint \u00fagy, hogy ne alkalmazza ezt a szab\u00e1lyt! Keresd meg ennek m\u00f3dj\u00e1t a <code>ktlint</code> dokument\u00e1ci\u00f3j\u00e1ban: https://pinterest.github.io/ktlint/latest/</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet (f3.png) a linter \u00e1ltal kiadott hibalist\u00e1b\u00f3l, mellette a kapcsol\u00f3d\u00f3 gradle konfigur\u00e1ci\u00f3 k\u00f3dj\u00e1val, benne kommentk\u00e9nt a Neptun-k\u00f3doddal!</p>"},{"location":"laborok/news/#negyedik-feladat-offline-mukodes","title":"Negyedik feladat: Offline m\u0171k\u00f6d\u00e9s","text":"<p>Az alkalmaz\u00e1sunk m\u00e9g mindig csak akkor k\u00e9pes m\u0171k\u00f6dni, ha a t\u00e1voli backend \u00e9ppen fut \u00e9s el\u00e9rhet\u0151. A feladat most annak biztos\u00edt\u00e1sa, hogy a kor\u00e1bban m\u00e1r let\u00f6lt\u00f6tt h\u00edrek lok\u00e1lisan is elment\u0151djenek, \u00e9s az alkalmaz\u00e1s offline is haszn\u00e1lhat\u00f3 legyen. Gondold \u00e1t, hogyan lehetne ezt megoldani tiszta architekt\u00far\u00e1val, majd k\u00e9sz\u00edtsd el a megold\u00e1st.</p> Seg\u00edts\u00e9g <ul> <li>Az adatr\u00e9tegbeli <code>NewsEntity</code> oszt\u00e1ly legyen entit\u00e1s \u00e9s k\u00e9sz\u00edtsd el hozz\u00e1 a Room alap\u00fa perzisztenci\u00e1t!</li> <li>M\u00f3dos\u00edtsd a <code>NewsRepository</code>-t! Amikor \u00faj let\u00f6lt\u00e9sre \u00e9rkezik h\u00edv\u00e1s, akkor n\u00e9zze meg, hogy el\u00e9rhet\u0151-e a h\u00e1l\u00f3zat,     \u00e9s ha igen, akkor a h\u00e1l\u00f3zatr\u00f3l t\u00f6ltse le a h\u00edreket!</li> <li>Ha nem el\u00e9rhet\u0151 a h\u00e1l\u00f3zat, akkor egyszer\u0171en Roomb\u00f3l adja vissza a kor\u00e1bban m\u00e1r lementett adatokat.</li> <li>A m\u0171k\u00f6d\u00e9st k\u00f6nnyen tesztelheted, ha az emul\u00e1toron lekapcsolod a wifi \u00e9s a mobilnet el\u00e9r\u00e9st.</li> <li>Amikor az alkalmaz\u00e1s offline m\u0171k\u00f6dik, a h\u00edrek list\u00e1j\u00e1nak tetej\u00e9n jelenjen meg egy t\u00e1j\u00e9koztat\u00f3 sz\u00f6veg, hogy     nem a legfrissebb \u00e1llapotot l\u00e1tjuk!</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet (f4.png) a kapcsol\u00f3d\u00f3 k\u00f3dr\u00e9szletr\u0151l, benne kommentk\u00e9nt a Neptun-k\u00f3doddal, mellette a fut\u00f3 alkalmaz\u00e1ssal, ahol l\u00e1tszik a t\u00e1j\u00e9koztat\u00f3 sz\u00f6veg, hogy h\u00e1l\u00f3zat h\u00edj\u00e1n a t\u00e1rolt h\u00edreket l\u00e1tjuk.</p>"},{"location":"laborok/news/#otodik-feladat-savszelesseg-optimalizacio","title":"\u00d6t\u00f6dik feladat: S\u00e1vsz\u00e9less\u00e9g optimaliz\u00e1ci\u00f3","text":"<p>Mobilon fontos takar\u00e9koskodni a s\u00e1vsz\u00e9less\u00e9ggel, hiszen a mobilnetes el\u0151fizet\u00e9sek tipikusan nem korl\u00e1tlanok, valamint egy indokolatlan let\u00f6lt\u00e9s az egy\u00e9bk\u00e9nt kritikusabb h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3t (pl. fontos \u00e9rtes\u00edt\u00e9sek) is lass\u00edthatja. M\u00f3dos\u00edtsd \u00fagy az alkalmaz\u00e1st - ha nem eleve \u00edgy k\u00e9sz\u00edtetted - hogy amikor h\u00e1l\u00f3zatr\u00f3l t\u00f6lti le a h\u00edreket, akkor csak a lok\u00e1lisan legut\u00f3bb elmentett h\u00edr ut\u00e1niakat t\u00f6ltse le! A backend t\u00e1mogatja ezt a m\u0171k\u00f6d\u00e9st.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet (f5.png) a kapcsol\u00f3d\u00f3 k\u00f3dr\u00e9szletr\u0151l, ahol l\u00e1tszik a logika, ami meghat\u00e1rozza a backendnek k\u00fcldend\u0151 <code>after</code> param\u00e9tert, benne kommentk\u00e9nt a Neptun-k\u00f3doddal.</p>"},{"location":"laborok/snake/","title":"Labor 1 - Snake Game","text":"<p>Az els\u0151 labor folyam\u00e1n egy \u00f6sszetettebb alkalmaz\u00e1st, j\u00e1t\u00e9kot fogunk megcsin\u00e1lni. Ez a j\u00e1t\u00e9k a Snake j\u00e1t\u00e9k egy v\u00e1ltozata lesz. A j\u00e1t\u00e9k l\u00e9nyege, hogy egy fix m\u00e9ret\u0171 p\u00e1ly\u00e1n egy k\u00edgy\u00f3t kell ir\u00e1ny\u00edtani, \u00e9s min\u00e9l t\u00f6bb pontot \u00f6sszeszedni. Ezt az alm\u00e1k felv\u00e9tel\u00e9vel tudjuk el\u00e9rni. Minden egyes alma felv\u00e9tele egy egys\u00e9ggel fogja n\u00f6velni a k\u00edgy\u00f3 hossz\u00e1t. A szok\u00e1sos m\u0171k\u00f6d\u00e9st\u0151l kicsit elt\u00e9r\u0151 lesz a mi alkalmaz\u00e1sunk, itt 3 neh\u00e9zs\u00e9g k\u00f6z\u00fcl lehet majd v\u00e1lasztani (Easy, Normal, Hard), amelynek k\u00f6sz\u00f6nhet\u0151en fix sebess\u00e9g\u0171 lesz a k\u00edgy\u00f3 gyorsas\u00e1ga.</p> <p>A feladat sor\u00e1n az al\u00e1bbi technol\u00f3gi\u00e1kkal fogunk tal\u00e1lkozni:</p> <ul> <li>ViewModel</li> <li>Dependency Injection</li> <li>DataStore</li> <li>Sensor</li> <li>NavHost</li> </ul> <p> </p> <p>A j\u00e1t\u00e9knak k\u00e9t fajta ir\u00e1ny\u00edt\u00e1si lehet\u0151s\u00e9ge lesz. Az egyik a nyilakkal lesz elv\u00e9gezhet\u0151, a m\u00e1sik pedig a telefon d\u00f6nt\u00f6get\u00e9s\u00e9vel. Ezt a Sensor oszt\u00e1llyal fogjuk megval\u00f3s\u00edtani.</p>"},{"location":"laborok/snake/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1sa folyamat\u00e1t.</p>"},{"location":"laborok/snake/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol> <p>Android, Java, Kotlin</p> <p>Az Android hagyom\u00e1nyosan Java nyelven volt fejleszthet\u0151, azonban az ut\u00f3bbi \u00e9vekben a Google \u00e1t\u00e1llt a Kotlin nyelvre. Ez egy sokkal modernebb nyelv, mint a Java, sok olyan nyelvi elemet ad, amit k\u00e9nyelmes haszn\u00e1lni, valamint \u00faj nyelvi szab\u00e1lyokat, amikkel p\u00e9ld\u00e1ul elker\u00fclhet\u0151ek a Java nyelven gyakori <code>NullPointerException</code> jelleg\u0171 hib\u00e1k.</p> <p>M\u00e1sr\u00e9szr\u0151l viszont a nyelv sok mindenben t\u00e9r el a hagyom\u00e1nyosan C jelleg\u0171 szintaktik\u00e1t k\u00f6vet\u0151 nyelvekt\u0151l, amit majd l\u00e1tni is fogunk. A labor el\u0151tt \u00e9rdemes megismerkedni a nyelvvel, egyr\u00e9szt a fent l\u00e1that\u00f3 linken, m\u00e1sr\u00e9szt ezt az \u00f6sszefoglal\u00f3 cikket \u00e1tolvasva.</p>"},{"location":"laborok/snake/#projekt-letrehozasa","title":"Projekt l\u00e9trehoz\u00e1sa","text":"<p>Hozzunk l\u00e9tre egy Snake nev\u0171 projektet az Android Studioban:</p> <ol> <li>Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get.</li> <li>A projekt neve legyen <code>Snake</code>, a kezd\u0151package <code>hu.bme.aut.android.snake</code>, a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl a Snake mappa.</li> <li>Nyelvnek v\u00e1lasszuk a Kotlint-t.</li> <li>A minimum API szint legyen API24: Android 7.0.</li> <li>A Build configuration language Kotlin DSL legyen.</li> </ol> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 Snake k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p> <p>FILE PATH</p> <p>A repository el\u00e9r\u00e9si helye ne tartalmazzon \u00e9kezeteket, illetve speci\u00e1lis karaktereket, mert az AndroidStudio ezekre \u00e9rz\u00e9keny, \u00edgy nem fog a k\u00f3d lefordulni. \u00c9rdemes a C:\\ meghajt\u00f3 gy\u00f6ker\u00e9ben dolgozni.</p>"},{"location":"laborok/snake/#eroforrasok-letoltese","title":"Er\u0151forr\u00e1sok let\u00f6lt\u00e9se","text":"<p>T\u00f6lts\u00fck le az egyedi fontFamily-t, valamint a sz\u00fcks\u00e9ges k\u00e9peket, majd helyezz\u00fck el \u0151ket a res mapp\u00e1ban a k\u00f6vetkez\u0151 szerint.</p> <ol> <li>A let\u00f6lt\u00f6tt .TTF filet tegy\u00fck a res/font mapp\u00e1ba. Ehhez hozzunk l\u00e9tre egy \u00faj packaget a res mapp\u00e1n bel\u00fcl font n\u00e9ven.</li> <li>A let\u00f6lt\u00f6tt .ZIP file tartalm\u00e1t pedig helyezz\u00fck el az ennek megfelel\u0151 mipmap-... mapp\u00e1kba.</li> </ol> <p>Miut\u00e1n ezekkel megvagyunk vegy\u00fck fel a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9geket a <code>libs.versions.toml</code> illetve a <code>build.gradle.kts</code> fileba.</p> <p><code>libs.versions.toml</code></p> <pre><code>[versions]\nnavigationComposeVersion = \"2.7.7\"\nroomRuntime = \"2.6.1\"\ndatastorePreferences = \"1.1.1\"\nlifecycleRuntimeComposeAndroid = \"2.8.3\"\nlifecycleRuntimeKtxVersion = \"2.4.0\"\nandroidxLifecycleRuntimeKtx = \"2.8.4\"\nlifecycleLivedataKtx = \"2.8.4\"\nruntimeLivedata = \"1.6.8\"\nhiltNavigationCompose = \"1.2.0\"\nhiltAndroid = \"2.51.1\"\n# Other versions\n</code></pre> <pre><code>[libraries]\nnavigation-compose = { module = \"androidx.navigation:navigation-compose\", version.ref = \"navigationComposeVersion\" }\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"roomRuntime\" }\nandroidx-room-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"roomRuntime\" }\nandroidx-datastore-preferences = { module = \"androidx.datastore:datastore-preferences\", version.ref = \"datastorePreferences\" }\nandroidx-lifecycle-runtime-compose-android = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-compose-android\", version.ref = \"lifecycleRuntimeComposeAndroid\" }\nandroidx-lifecycle-runtime-ktx-v240 = { module = \"androidx.lifecycle:lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtxVersion\" }\nandroidx-lifecycle-viewmodel-compose = { module = \"androidx.lifecycle:lifecycle-viewmodel-compose\", version.ref = \"lifecycleRuntimeKtx\" }\nandroidx-lifecycle-runtime-ktx-v284 = { module = \"androidx.lifecycle:lifecycle-runtime-ktx\", version.ref = \"androidxLifecycleRuntimeKtx\" }\nandroidx-lifecycle-livedata-ktx = { module = \"androidx.lifecycle:lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\nandroidx-lifecycle-viewmodel-ktx = { module = \"androidx.lifecycle:lifecycle-viewmodel-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\nandroidx-runtime-livedata = { group = \"androidx.compose.runtime\", name = \"runtime-livedata\", version.ref = \"runtimeLivedata\" }\nandroidx-hilt-navigation-compose = { module = \"androidx.hilt:hilt-navigation-compose\", version.ref = \"hiltNavigationCompose\" }\nhilt-android = { module = \"com.google.dagger:hilt-android\", version.ref = \"hiltAndroid\" }\nhilt-compiler = { module = \"com.google.dagger:hilt-compiler\", version.ref = \"hiltAndroid\" }\nandroidx-room-compiler = { module = \"androidx.room:room-compiler\", version.ref = \"roomRuntime\" }\n\n\n# Other libs\n</code></pre> <p><code>build.gradles.kts</code> <pre><code>dependencies {\n    // Hilt for DI\n    implementation(libs.hilt.android)\n    kapt(libs.hilt.compiler)\n    implementation(libs.androidx.hilt.navigation.compose)\n\n    // LiveData and ViewModel\n    implementation(libs.androidx.runtime.livedata)\n    implementation (libs.androidx.lifecycle.viewmodel.ktx)\n    implementation(libs.androidx.lifecycle.livedata.ktx)\n    implementation( libs.androidx.lifecycle.runtime.ktx.v284)\n    implementation(libs.androidx.lifecycle.viewmodel.compose)\n    implementation(libs.androidx.lifecycle.runtime.ktx.v240)\n    implementation(libs.androidx.lifecycle.runtime.compose.android)\n\n    // DataStore for preferences\n    implementation (libs.androidx.datastore.preferences)\n\n    //Room for database\n    implementation(libs.androidx.room.runtime)\n    implementation(libs.androidx.room.ktx)\n    kapt(libs.androidx.room.compiler)\n\n    //Navigation, lifecycle\n    implementation(libs.navigation.compose)\n\n    // ... Other dependencies\n}\n</code></pre> <code>build.gradle.kts</code> <pre><code>plugins{\n//...\nid(\"com.google.dagger.hilt.android\")\nkotlin(\"kapt\") version \"1.9.0\"\n}\nandroid {\n//...\ncompileSdk = 34\ndefaultConfig{\n//...\nminSdk = 24\ntargetSdk = 34\n//...\n}\n//...\ncomposeOptions {\nkotlinCompilerExtensionVersion = \"1.5.1\"\n}\n//...\n}\n</code></pre></p> <p>Majd a Top-Level <code>build.gradle.kts</code> filet nyissuk meg \u00e9s adjuk hozz\u00e1 a HILT-et illetve a KAPT-ot.</p> <p><code>build.gradle.kts (Snake)</code> <pre><code>plugins {\n    //...\n    kotlin(\"kapt\") version \"1.9.0\" apply false\n    id(\"com.google.dagger.hilt.android\") version \"2.51.1\" apply false\n}\n</code></pre></p> <p>Hogy ha mindennel megvagyunk Sync-elj\u00fck le a projektet \u00e9s v\u00e1rjuk meg m\u00edg leg\u00f6lt az \u00f6sszes sz\u00fcks\u00e9ges k\u00f6nyvt\u00e1r.</p>"},{"location":"laborok/snake/#navigacio-a-kepernyok-kozott-25-pont","title":"Navig\u00e1ci\u00f3 a k\u00e9perny\u0151k k\u00f6z\u00f6tt (2.5 pont)","text":"<p>Els\u0151k\u00e9nt hozzuk l\u00e9tre a sz\u00fcks\u00e9ges k\u00e9perny\u0151ket. M\u00e9g csak demok\u00e9nt lesznek meg, egy teszt sz\u00f6veggel, majd a tov\u00e1bbi feladatok sor\u00e1n kieg\u00e9sz\u00edtj\u00fck a t\u00e9nyleges k\u00e9perny\u0151vel. Ahhoz hogy a k\u00e9perny\u0151k k\u00f6z\u00f6tt navig\u00e1lni tudjuk sz\u00fcks\u00e9g\u00fcnk van a NavHost-ra amiben defini\u00e1ljuk az egyes kijelz\u0151kre mutat\u00f3 utat. Ehhez hozzunk l\u00e9tre egy \u00faj Packaget <code>model</code> n\u00e9ven majd ebben egy <code>navigation</code> n\u00e9ven egy \u00fajabb packaget. Ezen bel\u00fcl fogunk els\u0151 sorban dolgozni. Itt hozzunk l\u00e9tre egy <code>NavGraph</code> nev\u00fc Kotlin Filet. </p> <p>Az alkalmaz\u00e1sban 6 k\u00e9perny\u0151nk lesz, ezek:</p> <ul> <li>F\u0151k\u00e9perny\u0151 (MainScreen)</li> <li>Eredm\u00e9nyek k\u00e9perny\u0151 (HighScoresScreen)</li> <li>Be\u00e1ll\u00edt\u00e1sok k\u00e9perny\u0151 (SettingsScreen)</li> <li>J\u00e1t\u00e9k be\u00e1ll\u00edt\u00e1s k\u00e9perny\u0151 (StartGameScreen)</li> <li>J\u00e1t\u00e9k k\u00e9perny\u0151 (GameScreen)</li> <li>MainNavScreen (TopBar-os screen)</li> </ul> <p>Az utols\u00f3 Screen ig\u00e9ny szerint v\u00e1ltoztathat\u00f3, itt most csak a TopBar miatt fogjuk ezt haszn\u00e1lni. A k\u00e9perny\u0151k fel\u00e9p\u00edt\u00e9se ezen bel\u00fcl fog v\u00e1ltozni. A MainNavScreen-en bel\u00fcl lesz egy Scaffold aminek a seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtunk egy TopAppBar-t. A Content-je pedig egy NavHost-t Graphot fog tartalmazni, aminek a seg\u00edts\u00e9g\u00e9vel fogunk v\u00e1ltani az oldalak k\u00f6z\u00f6tt.</p> <p>A TopBar megval\u00f3s\u00edt\u00e1s\u00e1t az al\u00e1bbiak alapj\u00e1n szeretn\u00e9nk megval\u00f3s\u00edtani:</p> <ul> <li>A F\u0151k\u00e9perny\u0151n legyen ki\u00edrva hogy \"Snake\" \u00e9s semmi m\u00e1s.</li> <li>Be\u00e1ll\u00edt\u00e1s k\u00e9perny\u0151n legyen egy kis ikon amivel vissza lehet l\u00e9pni a f\u0151k\u00e9perny\u0151re, valamint legyen title-nek be\u00e1ll\u00edtva hogy \"Settings\"</li> <li>HighScores k\u00e9perny\u0151n hasonl\u00f3an a be\u00e1ll\u00edt\u00e1s k\u00e9perny\u0151h\u00f6z, legyen egy ikon amivel vissza lehet l\u00e9pni a f\u0151k\u00e9perny\u0151re, legyen a title \"HighScores\", illetve egy kuka ikon amivel lehet majd k\u00e9s\u0151bb t\u00f6r\u00f6lni az adatb\u00e1zist.</li> <li>StartGameScreen-en hasonl\u00f3an legyen egy vissza gomb, illetve title-nek \"Game Settings\" legyen be\u00e1ll\u00edtva.</li> <li>A GameScreen-en a felirat legyen egy \u00fcres string, ilyenkor a TopAppBar kikapcsolt \u00e1llapotba fog ker\u00fclni.</li> </ul> <p>Els\u0151 sorban hozzunk l\u00e9tre egy \u00faj Package-t <code>main</code> n\u00e9ven a <code>model</code> packageba, majd ebben egy <code>MainViewModel</code> nev\u0171 Kotlin Filet. Erre az\u00e9rt lesz sz\u00fcks\u00e9g, hogy a TopBar felirat\u00e1t, dinamikussan tudjuk majd kezelni, illetve az ikon m\u0171k\u00f6d\u00e9s\u00e9t is. Ebben a f\u00e1jlban helyezz\u00fck el az al\u00e1bbi k\u00f3dot:</p> <pre><code>class MainViewModel : ViewModel() {\nprivate val _title = MutableLiveData(\"Main Menu\")\nval title: LiveData&lt;String&gt; = _title\n\nprivate val _navigate = MutableLiveData&lt;() -&gt; Unit&gt;()\nval navigate: LiveData&lt;() -&gt; Unit&gt; = _navigate\n\nprivate val _showBackArrow = MutableLiveData(false)\nval showBackArrow: LiveData&lt;Boolean&gt; = _showBackArrow\n\nfun updateTitle(newTitle: String, showBackArrow: Boolean) {\n_title.value = newTitle\n_showBackArrow.value = showBackArrow\n}\n\nfun setNavigationLambda(lambda: () -&gt; Unit) {\n_navigate.value = lambda\n}\n}\n</code></pre> <p>H\u00e1rom v\u00e1ltoz\u00f3nk lesz, ezek k\u00f6z\u00fcl az egyik egy Lambda. Ez a navig\u00e1l\u00e1s\u00e9rt fog felelni k\u00e9s\u0151bb, illetve van kett\u0151 f\u00fcggv\u00e9ny\u00fcnk aminek a seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtjuk a priv\u00e1t v\u00e1ltoz\u00f3k \u00e9rt\u00e9k\u00e9t.</p> <p>Ezut\u00e1n hozzunk l\u00e9tre <code>screen</code> n\u00e9ven egy \u00faj Packaget a gy\u00f6k\u00e9rmapp\u00e1ban (<code>hu.bme.aut...</code>), majd ebben t\u00f6bb \u00faj Kotlin Filet az al\u00e1bbi nevekkel: <code>GameScreen</code>, <code>HighScoresScreen</code>, <code>MainNavScreen</code>, <code>MainScreen</code>, <code>SettingsScreen</code>, <code>StartGameScreen</code>. Ezek lesznek az alkalmaz\u00e1s k\u00e9perny\u0151i, kezdetben m\u00e9g csak Demo-ra lesz \u00e1ll\u00edtva, \u00e9s a k\u00e9s\u0151bbiekben fogjuk megval\u00f3s\u00edtani a t\u00e9nyleges kin\u00e9zet\u00fcket.</p> <p>Folytat\u00e1sk\u00e9nt kezdj\u00fck el a <code>MainNavScreen</code> meg\u00edr\u00e1s\u00e1t, ugyanis ez fog felelni az\u00e9rt, hogy a <code>NavHost</code> Graphot tartalmazza.</p> <p>Ennek egy Scaffoldb\u00f3l kell \u00e1llnia ami dinamikusan fogja kezelni a TopBar-t a k\u00e9perny\u0151t\u0151l f\u00fcgg\u0151en. Ehhez kor\u00e1bban m\u00e1r l\u00e9trehoztuk a viewModell\u00fcnket, ennek a seg\u00edts\u00e9g\u00e9vel fogjuk megval\u00f3s\u00edtani ezt a m\u0171k\u00f6d\u00e9st.</p> <p>Miel\u0151tt elkezden\u00e9nk a Scaffold-ot, val\u00f3s\u00edtsuk meg a NavGraph-ot a <code>NavGraph.kt</code> file-ban.</p> <p><pre><code>@Composable\nfun NavGraph(\nmodifier: Modifier = Modifier,\nnavController: NavHostController = rememberNavController(),\nstartDestination: String = \"mainscreen\",\nmainViewModel: MainViewModel = viewModel()\n) {\n\nNavHost(\nnavController = navController,\nstartDestination = startDestination,\nmodifier = modifier\n){\n//gameScreen\n\n//preGameScreen\n\n//mainscreen\n\n//highscores\n\n//settings\n\n}\n}\n</code></pre> Mivel 5 k\u00e9perny\u0151nk lesz m\u00e9g ezen k\u00edv\u00fcl, ez\u00e9rt 5 k\u00fcl\u00f6nb\u00f6z\u0151 navig\u00e1ci\u00f3 is fog kelleni, amit majd k\u00e9s\u0151bb megval\u00f3s\u00edtunk, miut\u00e1n mindegyikhez k\u00e9sz van a demo screen. A NavGraph param\u00e9ternek megkapja a navControllert, aminek a seg\u00edts\u00e9g\u00e9vel fogunk navig\u00e1lni az ablakok k\u00f6z\u00f6tt. Tov\u00e1bb\u00e1 egy startDestinationt, ami azt fogja megmondani, hogy melyik az a k\u00e9perny\u0151 amit els\u0151nek meg kell jelen\u00edteni, valamint a mainViewModel-t. Ennek a seg\u00edts\u00e9g\u00e9vel fogjuk v\u00e1ltoztatni dinamikusan a TopBar megjelen\u00e9s\u00e9t. A k\u00e9s\u0151bbiekben a param\u00e9terlista b\u0151v\u00fclni fog. :)</p> <p>A TopAppBar m\u0171k\u00f6d\u00e9s\u00e9r\u0151l az al\u00e1bbi oldalon jobban meg lehet ismerkedni. Nek\u00fcnk jelen esetben a <code>navigationIcon</code>, <code>actions</code>, <code>title</code>, <code>color</code> attrib\u00fatumokra lesz sz\u00fcks\u00e9g\u00fcnk. Kezdj\u00fck is el a Scaffold fel\u00e9p\u00edt\u00e9s\u00e9t. Ehhez navig\u00e1ljunk a <code>MainNavScreen</code> f\u00e1jlba.</p> <pre><code>@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun MainNavScreen(\nmainViewModel: MainViewModel\n){\n\n//TopBar\nval title by mainViewModel.title.observeAsState(\"Snake\")\nval navigationLambda by mainViewModel.navigate.observeAsState()\nval showBackArrow by mainViewModel.showBackArrow.observeAsState(false)\n\nScaffold(\ntopBar = {\nif (title != \"\"){\nTopAppBar(\n//NavigationIcon\nnavigationIcon = {\n// TODO\n},\n//Actions\nactions = {\n// TODO\n},\n//Title\ntitle = {\n// TODO\n},\n//Colors\ncolors = TopAppBarDefaults.topAppBarColors(containerColor = DarkGray)\n)\n}\n},\nmodifier = Modifier.fillMaxSize()\n) { innerPadding -&gt;\n\nval navController = rememberNavController()\n\nNavGraph(\nmodifier = Modifier.padding(innerPadding),\nnavController = navController,\n)\n}\n}\n</code></pre> <p>Az al\u00e1bbi k\u00f3d a MainNavScreen skeletonj\u00e1t mutatja. Ezt a k\u00f6vetkez\u0151ekben fel\u00e9p\u00edtj\u00fck a sz\u00fcks\u00e9ges elemekkel. J\u00f3l l\u00e1that\u00f3 a TopAppBar, valamint azok az elemek amiket fogunk haszn\u00e1lni. Egy if el\u00e1gaz\u00e1ssal sz\u0171rj\u00fck a TopAppBar megjelen\u00e9s\u00e9t, amit kor\u00e1bban kik\u00f6t\u00f6tt\u00fcnk, hogy \u00fcres String eset\u00e9n nem jelen\u00edtj\u00fck meg. (Ez akkor k\u00f6vetkezik be hogy ha m\u00e1r a j\u00e1t\u00e9k folyamatban van.)</p> <p><code>NavigationIcon</code> <pre><code>if (showBackArrow)\nIconButton(\nonClick = {\nnavigationLambda?.invoke()\n}\n) {\nIcon(\nimageVector = Icons.AutoMirrored.Filled.ArrowBack,\ncontentDescription = \"Back\"\n)\n}\n</code></pre> A vissza ny\u00edl megjelen\u00e9se egy boolean v\u00e1ltoz\u00f3t\u00f3l f\u00fcgg, ugyanis a f\u0151k\u00e9perny\u0151n erre nincs sz\u00fcks\u00e9g. Ilyenkor ezt a Boolean v\u00e1ltoz\u00f3 False \u00e9rt\u00e9kbe val\u00f3 billent\u00e9s\u00e9vel megakad\u00e1lyozzuk, hogy l\u00e1that\u00f3 legyen. Az <code>onClick</code> esem\u00e9ny megkapja a viewModel \u00e9rt\u00e9k\u00e9t, amit az <code>?.invoke()</code> f\u00fcggv\u00e9nnyel tudunk els\u00fctni.</p> <p><code>Actions</code> <pre><code>if (title == \"High Scores\"){\nIconButton(\nonClick = {\n//TODO\n}\n) {\nIcon(\nimageVector = Icons.Default.Delete,\ncontentDescription = \"Delete\",\ntint = White\n)\n}\n}\n</code></pre> Hogy ha a HighScores k\u00e9perny\u0151n vagyunk szeretn\u00e9nk egy extra ikont, aminek a seg\u00edts\u00e9g\u00e9vel \u00fcr\u00edthetj\u00fck az adatb\u00e1zist, amit k\u00e9s\u0151bb l\u00e9tre fogunk hozni. Ehhez szint\u00e9n egy if el\u00e1gaz\u00e1st haszn\u00e1lunk.</p> <p><code>Title</code></p> <p><pre><code>Text(\ntext = title,\ncolor = White,\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\n</code></pre> Az AppBar felirata a title v\u00e1ltoz\u00f3 \u00e9rt\u00e9k\u00e9nek a seg\u00edts\u00e9g\u00e9vel jelen\u00edthet\u0151 meg. Ez csak egy szimpla <code>Text Composable</code> f\u00fcggv\u00e9nyt ig\u00e9nyel.</p> <p>Ezzel el is k\u00e9sz\u00fclt a <code>MainNavScreen</code> dem\u00f3ja.</p> <p>Icon</p> <p>El\u0151fordulhat, hogy a megadott Icon nem lesz el\u00e9rhet\u0151 egyesek sz\u00e1m\u00e1ra. Ez a projekt verzi\u00f3j\u00e1t\u00f3l f\u00fcgg. Ilyenkor csak cser\u00e9lj\u00fck le az Icon-t egy m\u00e1sikra.</p> <p>A tov\u00e1bbiakban folytassuk az egyes k\u00e9perny\u0151k fel\u00e9p\u00edt\u00e9s\u00e9vel, illetve a NavGraph kieg\u00e9sz\u00edt\u00e9s\u00e9vel.</p>"},{"location":"laborok/snake/#main-screen","title":"Main Screen","text":"<p>A k\u00f6vetkez\u0151 l\u00e9psben a Main Screent fogjuk megval\u00f3s\u00edtani.</p> <p>Ehhez eg\u00e9sz\u00edts\u00fck ki a MainScreen k\u00e9perny\u0151t az al\u00e1bbival:</p> <pre><code>@Composable\nfun MainScreen(\nnavController: NavController\n) {\nColumn (\nmodifier = Modifier\n.background(Color.Gray)\n.padding(16.dp)\n.fillMaxSize(),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\n\n//Title\n\n//Button 1 preGameScreen\n\n//Button 2 highScores \n\n//Button 3 settings\n\n}\n}\n</code></pre> <p>A megfelel\u0151 Commentek al\u00e1, v\u00e9gezz\u00fck el a kieg\u00e9sz\u00edt\u00e9st az al\u00e1bbiak szerint:</p> <p><code>Title</code></p> <pre><code>Text(\ntext = \"Snake Game\",\ncolor = Color.White,\nfontSize = 40.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\nmodifier = Modifier.padding(16.dp)\n)\n</code></pre> <p>Ez a Title felirat csak egy <code>Text</code> Composable f\u00fcggv\u00e9nyt fog mag\u00e1ba foglalni, amin megjelen\u00edtj\u00fck a j\u00e1t\u00e9k c\u00edm\u00e9t, vagy b\u00e1rmilyen feliratot. Mi most a Snake Game feliratot fogjuk megjelen\u00edteni ezzel. L\u00e1that\u00f3, hogy adunk egy fontFamily \u00e9rt\u00e9ket is neki, \u00edgy fogjuk el\u00e9rni az egyedi bet\u0171t\u00edpusunkat.</p> <p><code>Button 1</code></p> <pre><code>Button(\nonClick = {\nnavController.navigate(\"preGameScreen\")\n},\ncolors = ButtonDefaults.buttonColors(\nColor.Black\n),\nmodifier = Modifier.padding(8.dp)\n) {\nText(\ntext = \"Start Game\",\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\n}\n</code></pre> <p>Az els\u0151 gomb fog felelni a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1\u00e9rt, azonban ez a gomb m\u00e9g nem fogja elind\u00edtani a j\u00e1t\u00e9kot, hanem egy \u00faj k\u00e9perny\u0151re fog navig\u00e1lni, ahol ki lehet v\u00e1lasztani a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t, valamint megadni a j\u00e1t\u00e9kos nev\u00e9t. Itt az <code>onClick</code> esem\u00e9nynek \u00e1tadjuk a <code>navController.navigate(..)</code> f\u00fcggv\u00e9nyt, amelynek a param\u00e9ter\u00e9be be\u00edrjuk az adott k\u00e9perny\u0151t ahova navig\u00e1lni szeretn\u00e9nk.</p> <p><code>Button 2</code></p> <pre><code>Button(\nonClick = {\nnavController.navigate(\"highscores\")\n},\ncolors = ButtonDefaults.buttonColors(\nColor.Black\n),\nmodifier = Modifier.padding(8.dp)\n) {\nText(\ntext = \"High Scores\",\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\n}\n</code></pre> <p>A m\u00e1sodik gombunk ugyanolyan elven m\u0171k\u00f6dik mint az els\u0151, \u00e9s mint a harmadik fog, itt meg kell v\u00e1ltoztatnunk a <code>.navigate(..)</code> param\u00e9ter\u00e9t, hogy a HighScores k\u00e9perny\u0151re navig\u00e1ljon minket.</p> <p><code>Button 3</code></p> <pre><code>Button(\nonClick = {\nnavController.navigate(\"settings\")\n},\ncolors = ButtonDefaults.buttonColors(\nColor.Black\n),\nmodifier = Modifier.padding(8.dp)\n) {\nText(\ntext = \"Settings\",\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\n}\n</code></pre> <p>A harmadik gomb sem k\u00fcl\u00f6nb az els\u0151 kett\u0151t\u0151l, azt lesz\u00e1m\u00edtva, hogy ez a be\u00e1ll\u00edt\u00e1s k\u00e9perny\u0151re fog navig\u00e1lni minket.</p> <p>Majd v\u00e9g\u00fcl regisztr\u00e1ljuk az \u00fatvonalat a NavGraph-ban is</p> <pre><code>composable(\"mainscreen\"){\nmainViewModel.updateTitle(\"Snake\", false)\nMainScreen(navController = navController)\n}\n</code></pre> <p>Ezzel el is k\u00e9sz\u00fclt a f\u0151k\u00e9perny\u0151, azonban, ha az alkalmaz\u00e1st most elind\u00edtjuk m\u00e9g nem teljesen fog m\u0171k\u00f6dni, ugyanis a t\u00f6bbi k\u00e9perny\u0151re mutat\u00f3 navig\u00e1ci\u00f3 m\u00e9g nincs k\u00e9sz, illetve a MainActivity-ben nincs megh\u00edvva a megfelel\u0151 Composable.</p>"},{"location":"laborok/snake/#settings-screen","title":"Settings Screen","text":"<p>Az el\u0151z\u0151h\u00f6z hasonl\u00f3an val\u00f3s\u00edtsuk meg a m\u00f3dos\u00edt\u00e1sokat a Settings Screen illetve a NavGraph-ban.</p> <p><pre><code>@Composable\nfun SettingsScreen() {\nColumn (\nModifier\n.fillMaxSize()\n.background(Color.Gray),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\nText(text = \"Settings Screen\")\n}\n}\n</code></pre> Ez csak egy szimpla Column elrendez\u00e9st fog haszn\u00e1lni kezdetben. Ezt a Dem\u00f3 k\u00e9perny\u0151t k\u00e9s\u0151bb le fogjuk cser\u00e9lni, egyel\u0151re csak a m\u0171k\u00f6d\u00e9s\u00e9t fogjuk vizsg\u00e1lni a NavGraph-nak.</p> <p>Ehhez illessz\u00fck be a megfelel\u0151 helyre az al\u00e1bbi k\u00f3dot a NavGraph-ban</p> <p><pre><code>composable(\"settings\"){\nmainViewModel.updateTitle(\"Settings\", true)\nmainViewModel.setNavigationLambda { navController.navigate(\"mainscreen\") }\nSettingsScreen()\n}\n</code></pre> Itt a navig\u00e1ci\u00f3n bel\u00fcl be\u00e1ll\u00edtjuk viewModel \u00e9rt\u00e9keket ami a TopBar-\u00e9rt felel, valamint megh\u00edvjuk az im\u00e9nt meg\u00edrt k\u00e9perny\u0151 Composable f\u00fcggv\u00e9ny\u00e9t.</p>"},{"location":"laborok/snake/#high-scores-screen","title":"High Scores Screen","text":"<p>Az el\u0151z\u0151h\u00f6z hasonl\u00f3an hajtsuk v\u00e9gre ugyanazt a m\u0171k\u00f6d\u00e9st a High Scores Screen-re is.</p> <pre><code>@Composable\nfun HighScoresScreen() {\nColumn (\nModifier\n.fillMaxSize()\n.background(Color.Gray),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\nText(text = \"High Scores Screen\")\n}\n}\n</code></pre> <pre><code>composable(\"highscores\"){\nmainViewModel.updateTitle(\"High Scores\", true)\nmainViewModel.setNavigationLambda { navController.navigate(\"mainscreen\") }\nHighScoresScreen()\n}\n</code></pre> <p>Hasonl\u00f3an az el\u0151z\u0151h\u00f6z, itt is m\u00f3dos\u00edtjuk a mainViewModel param\u00e9tereit \u00fagy, hogy High Scores felirat legyen a TopAppBar-on, illetve a vissza ny\u00edl a f\u0151k\u00e9perny\u0151re mutasson.</p>"},{"location":"laborok/snake/#game-settings-screen","title":"Game Settings Screen","text":"<p>Ehhez egyel\u0151re csak be\u00e9getett adatot fogunk haszn\u00e1lni a j\u00e1t\u00e9kosn\u00e9v, illetve a neh\u00e9zs\u00e9ghez, de ez k\u00e9s\u0151bb m\u00f3dos\u00edtva lesz. Nyissuk meg a <code>StartGameScreen</code> file-t, majd m\u00f3dos\u00edtsuk a tartalm\u00e1t az al\u00e1bbiak szerint.</p> <pre><code>@Composable\nfun StartGameScreen(\nnavController: NavHostController\n){\nColumn (\nModifier\n.fillMaxSize()\n.background(Color.Gray),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\nText(text = \"Start Game Screen\")\nButton(\nonClick = {\nnavController.navigate(\"gameScreen/medium/Player1\")\n}\n) {\nText(text = \"Start Game\")\n}\n}\n}\n</code></pre> <p>A navController seg\u00edts\u00e9g\u00e9vel \u00e1tadhatunk navig\u00e1ci\u00f3s argumentumokat, amit k\u00e9s\u0151bb ki fogunk tudni szedni a <code>NavGraph</code>-on bel\u00fcl. Ezeket a Stringeket tudjuk majd felhaszn\u00e1lni a j\u00e1t\u00e9k tov\u00e1bbi param\u00e9tereihez.</p> <p>Modos\u00edtsuk a <code>NavGraph</code>-ot \u00fagy, hogy megadjuk az el\u00e9r\u00e9si utat az im\u00e9nt l\u00e9trehozott k\u00e9perny\u0151h\u00f6z.</p> <p><pre><code>composable(\"preGameScreen\") {\nmainViewModel.updateTitle(\"Game Settings\", true)\nmainViewModel.setNavigationLambda { navController.navigate(\"mainscreen\") }\nStartGameScreen(\nnavController = navController\n)\n}\n</code></pre> Az el\u0151z\u0151ekhez hasonl\u00f3an itt is be\u00e1ll\u00edtjuk a mainViewModel-ben a TopBar param\u00e9tereit, valamint megh\u00edvjuk az elk\u00e9sz\u00edtett k\u00e9perny\u0151t.</p> <p>M\u00e1r csak egyetlen k\u00e9perny\u0151 van h\u00e1tra, ez maga a j\u00e1t\u00e9k k\u00e9perny\u0151je lesz. Kezdetben ez is csak egy Demo k\u00e9perny\u0151 lesz ami meg fogja jelen\u00edteni a be\u00e9getett J\u00e1t\u00e9kos nev\u00e9t, illetve a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t.</p>"},{"location":"laborok/snake/#game-screen","title":"Game Screen","text":"<p><code>GameScreen</code> <pre><code>@Composable\nfun GameScreen(\ndifficulty: String,\nname: String,\n) {\nColumn (\nModifier\n.fillMaxSize()\n.background(Color.Gray),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\nText(text = \"Game Screen\")\nText(text = \"Difficulty: $difficulty\")\nText(text = \"Name: $name\")\n}\n}\n</code></pre> J\u00f3l l\u00e1that\u00f3, hogy itt param\u00e9terk\u00e9nt kapja meg a sz\u00fcks\u00e9ges adatokat, de ez k\u00e9s\u0151bb viewModel-re lesz lecser\u00e9lve, ez csak a kezdeti j\u00e1t\u00e9k \u00e1llapot\u00e1t fogja modellezni.</p> <p>M\u00e1r csak egy a <code>NavGraph</code>-ban meg kell adni az el\u00e9r\u00e9si utat, illetve a MainActivity-ben meg kell h\u00edvni a f\u0151k\u00e9perny\u0151 Composable f\u00fcggv\u00e9ny\u00e9t.</p> <p><code>NavGraph</code></p> <p><pre><code>composable(\n\"gameScreen/{playerName}/{difficulty}\",\narguments = listOf(\nnavArgument(\"playerName\") { type = NavType.StringType },\nnavArgument(\"difficulty\") { type = NavType.StringType }\n)\n){\nmainViewModel.updateTitle(\"\", false)\nGameScreen(\nname = it.arguments?.getString(\"playerName\") ?: \"\",\ndifficulty = it.arguments?.getString(\"difficulty\") ?: \"\"\n)\n}\n</code></pre> L\u00e1thatjuk, hogy navig\u00e1ci\u00f3s argumentumokat az <code>arguments</code> seg\u00edts\u00e9g\u00e9vel lehet kiszedni, majd a <code>navArgument</code> seg\u00edts\u00e9g\u00e9vel lehet egyes\u00e9vel elt\u00e1rolni \u00e9s felhaszn\u00e1lni adatk\u00e9nt.</p> <p>M\u00f3dos\u00edtsuk a <code>MainActivity</code>-t \u00fagy, hogy a mainViewModel p\u00e9ld\u00e1nyos\u00edtva legyen, \u00e9s adjuk \u00e1t param\u00e9terk\u00e9nt a <code>MainNavScreen</code>nek.</p> <p><code>MainActivity</code></p> <pre><code>class MainActivity : ComponentActivity() {\n\nprivate val mainViewModel: MainViewModel by viewModels()\n\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nSnakeTheme {\nMainNavScreen(\nmainViewModel = mainViewModel\n)\n}\n}\n}\n}\n</code></pre> <p>Ha mindent j\u00f3l csin\u00e1ltunk akkor az alkalmaz\u00e1s elind\u00edt\u00e1sa ut\u00e1n a f\u0151k\u00e9perny\u0151 fogad minket ahonnan a gombok seg\u00edts\u00e9g\u00e9vel el tudunk navig\u00e1lni az egyes k\u00e9perny\u0151kre.</p> <p>BEADAND\u00d3 (2.5 pont)</p> <p>K\u00e9sz\u00edts 5 k\u00e9perny\u0151 k\u00e9pet az elk\u00e9sz\u00fclt k\u00e9perny\u0151kr\u0151l, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt oldal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f1a.png, f1b.png, f1c.png, f1d.png, f1e.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#kepernyok-kiegeszitese-25-pont","title":"K\u00e9perny\u0151k kieg\u00e9sz\u00edt\u00e9se (2.5 pont)","text":"<p>A m\u00e1sodik feladat a m\u00e1r megl\u00e9v\u0151 k\u00e9perny\u0151k megtervez\u00e9se \u00e9s kieg\u00e9sz\u00edt\u00e9se lesz. A dokument\u00e1ci\u00f3 elej\u00e9n l\u00e1that\u00f3 k\u00e9perny\u0151ket szeretn\u00e9nk megval\u00f3s\u00edtani. Ehhez kezdj\u00fck el\u0151sz\u00f6r a legegyszer\u0171bb k\u00e9perny\u0151vel. Ez a Settings Screen lesz, itt csak egyetlen kapcsol\u00f3t fogunk megjelen\u00edteni, amivel majd a k\u00e9s\u0151bbiek sor\u00e1n foglalkozunk, amikor a Sensor r\u00e9sz\u00e9t is bele\u00e9p\u00edtett\u00fck az alkalmaz\u00e1sba. Ehhez nyissuk meg a SettingsScreen f\u00e1jlt, \u00e9s m\u00f3dos\u00edtsuk az al\u00e1bbiak szerint.</p>"},{"location":"laborok/snake/#settings-screen_1","title":"Settings Screen","text":"<pre><code>@Composable\nfun SettingsScreen() {\nvar isSensorControlled by remember {\nmutableStateOf(false)\n}\nColumn (\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Top,\nmodifier = Modifier\n.background(Color.Gray)\n.fillMaxSize()\n) {\nRow (\nhorizontalArrangement = Arrangement.SpaceBetween,\nverticalAlignment = Alignment.CenterVertically,\nmodifier = Modifier\n.padding(8.dp)\n.fillMaxWidth()\n) {\nText(\ntext = \"Sensor  Controlled\",\ncolor = Color.White,\nfontSize = 26.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\nSwitch(\nchecked = isSensorControlled,\nonCheckedChange = {\nisSensorControlled = it\n}\n)\n}\n}\n}\n</code></pre> <p>Kezdetben a kapcsol\u00f3 \u00e1llapot\u00e1t \u00edgy fogjuk t\u00e1rolni, viszont ez k\u00e9s\u0151bb viewModel form\u00e1j\u00e1ban lesz megval\u00f3s\u00edtva, hogy majd a j\u00e1t\u00e9k k\u00e9perny\u0151 is megkapja az \u00e1llapotot. Egy egyszer\u0171 Column van elhelyezve a k\u00e9perny\u0151n, amiben egyetlen Row van. Ez tartalmaz egy Label feliratot <code>Text</code> Composable f\u00fcggv\u00e9nnyel, illetve egy kapcsol\u00f3t a <code>Switch</code> Composable-vel.</p> <p>Mivel az <code>isSensorControlled</code> egy \u00e1llapot, ez\u00e9rt minden egyes \u00e1llapotv\u00e1ltoz\u00e1sn\u00e1l az a Composable ami f\u00fcgg ett\u0151l a v\u00e1ltoz\u00f3t\u00f3l \u00fajra rajzol\u00f3dik, ez\u00e1ltal a kapcsol\u00f3 ki-be kapcsolhat\u00f3 lesz.</p> <p>Folytat\u00e1sk\u00e9nt eg\u00e9sz\u00edts\u00fck ki a High Scores Screent.</p>"},{"location":"laborok/snake/#high-scores-screen_1","title":"High Scores Screen","text":"<p>Ezt a k\u00e9perny\u0151t hasonl\u00f3an egy Column-ba \u00e1gyazva fogjuk megval\u00f3s\u00edtani, azonban szeretn\u00e9nk egy fejl\u00e9cet a t\u00e1bl\u00e1zatos \u00f6sszefoglal\u00f3nak. Ezt egy Row seg\u00edts\u00e9g\u00e9vel fogjuk megval\u00f3s\u00edtani, a Contentj\u00e9hez pedig l\u00e9trehozunk egy saj\u00e1t Composable f\u00fcggv\u00e9nyt, amely t\u00e1bl\u00e1zatos form\u00e1ban fogja megjelen\u00edteni az adatokat. Ehhez hozzunk l\u00e9tre egy <code>TableText</code> f\u00fcggv\u00e9nyt a HighScoresScreen-en bel\u00fclre az al\u00e1bbiak szerint:</p> <pre><code>@Composable\nfun TableText(text: String, modifier: Modifier = Modifier) {\nColumn (\nmodifier = modifier,\nverticalArrangement = Arrangement.Center,\nhorizontalAlignment = Alignment.CenterHorizontally\n) {\nText(\ntext = text,\nfontSize = 20.sp,\ncolor = Color.White,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\nmodifier = Modifier.padding(8.dp)\n)\n}\n}\n</code></pre> <p>A f\u00fcggv\u00e9ny k\u00e9t param\u00e9tert fog kapni, az egyik egy String t\u00edpus\u00fat ez fogja az adatot tartalmazni, a m\u00e1sik pedig egy Modifier, aminek a seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtjuk az oszlop s\u00falyait. Jelen esetben nek\u00fcnk 2-1-2-es s\u00falyoz\u00e1sra lesz sz\u00fcks\u00e9g\u00fcnk. </p> <p><pre><code>@Composable\nfun HighScoresScreen() {\n\nval highScores = listOf(\nTriple(\"John\", 100, \"Easy\"),\nTriple(\"Jane\", 200, \"Medium\"),\nTriple(\"Jack\", 300, \"Hard\"),\n)\nColumn (\nModifier\n.fillMaxSize()\n.background(Color.Gray)\n) {\nRow (\nModifier\n.background(Color.Black)\n.fillMaxWidth(),\nhorizontalArrangement = Arrangement.Center,\nverticalAlignment = Alignment.CenterVertically,\n) {\nTableText(\"Name\", Modifier.weight(2f))\nTableText(\"Score\", Modifier.weight(1f))\nTableText(\"Difficulty\", Modifier.weight(2f))\n}\nLazyColumn (\nModifier\n.fillMaxSize()\n) {\nitems(highScores.size) { index -&gt;\nRow (\nModifier\n.background(Color.Gray)\n.border(1.dp, Color.Black)\n.fillMaxWidth(),\nhorizontalArrangement = Arrangement.SpaceBetween,\nverticalAlignment = Alignment.CenterVertically\n){\nTableText(highScores[index].first, Modifier.weight(2f))\nTableText(highScores[index].second.toString(), Modifier.weight(1f))\nTableText(highScores[index].third, Modifier.weight(2f))\n}\n}\n}\n}\n}\n</code></pre> Kezdetben csak be\u00e9getett adatokkal fogunk dolgozni, ezt k\u00e9s\u0151bb lecser\u00e9lj\u00fck adatb\u00e1zisos adatokra. A High Score lista 3 adatb\u00f3l fog \u00e1llni, n\u00e9v, pontok, \u00e9s neh\u00e9zs\u00e9g. Ezt az adatot egy LazyColum seg\u00edts\u00e9g\u00e9vel fogjuk megjelen\u00edteni a k\u00e9perny\u0151n. Ehhez meg kell adni a lista m\u00e9ret\u00e9t, illetve azt hogy mit jelen\u00edtsen meg. Ehhez szint\u00e9n a TableText Composable f\u00fcggv\u00e9nyt haszn\u00e1ljuk. A LazyColumn f\u00f6l\u00f6tt egy Row-t helyezt\u00fcnk el, amely hasonl\u00f3an kapta a Content-et, mint a LazyColumn, a k\u00fcl\u00f6nbs\u00e9g az, hogy ez nem r\u00e9sze a LazyColumn-nak, ez egy fejl\u00e9ck\u00e9nt szolg\u00e1l nek\u00fcnk, amelynek a poz\u00edci\u00f3ja fix.</p>"},{"location":"laborok/snake/#game-settings-screen_1","title":"Game Settings Screen","text":"<p>Harmadik l\u00e9p\u00e9sben a Game Settings Screent fogjuk m\u00f3dos\u00edtani az al\u00e1bbiak alapj\u00e1n. </p> <ul> <li>Tartalom a k\u00e9perny\u0151 k\u00f6zep\u00e9n helyezkedjen el</li> <li>Egy Sliderrel fogjuk \u00e1ll\u00edtani a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t</li> <li>Egy TextFieldbe fogjuk \u00edrni a j\u00e1t\u00e9kos nev\u00e9t</li> <li>Egy gombbal fogjuk ind\u00edtani a j\u00e1t\u00e9kot, amely a k\u00f6vetkez\u0151 k\u00e9perny\u0151re navig\u00e1l az adatainkkal.</li> </ul> <p>Ennek a megval\u00f3s\u00edt\u00e1s\u00e1hoz haszn\u00e1ljuk az al\u00e1bbi k\u00f3dot: <pre><code>@Composable\nfun StartGameScreen(\nmodifier: Modifier = Modifier,\nnavController: NavController,\n){\n\nvar playerName by remember { mutableStateOf(\"\") }\nvar difficulty by remember { mutableStateOf(GameDifficulty.EASY) }\n\nvar emptyField by remember { mutableStateOf(false) }\n\nColumn (\nmodifier = modifier\n.background(Color.Gray)\n.padding(16.dp)\n.fillMaxSize(),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\n\n//GameModeMap\n\n\n//Difficulty Label\n\n\n//Difficulty Slider\n\n\n//Name Field\n\n\n//Start Button\n\n\n}\n}\n\nenum class GameDifficulty {\nEASY,\nMEDIUM,\nHARD\n}\n</code></pre></p> <p>Ahhoz hogy a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t illetve a j\u00e1t\u00e9kos nevet tudjuk \u00e1ll\u00edtani, sz\u00fcks\u00e9g\u00fcnk van k\u00e9t v\u00e1ltoz\u00f3ra, illetve m\u00e9g plusz egy v\u00e1ltoz\u00f3ra, hogy a felhaszn\u00e1l\u00f3 ne tudjon j\u00e1t\u00e9kos n\u00e9v megad\u00e1sa n\u00e9lk\u00fcl tov\u00e1bb l\u00e9pni a k\u00f6vetkez\u0151 k\u00e9perny\u0151re. A k\u00f6vetkez\u0151 l\u00e9p\u00e9seket k\u00f6vetve eg\u00e9sz\u00edts\u00fck ki a hi\u00e1nyz\u00f3 UI elemeket.</p>"},{"location":"laborok/snake/#game-mode-map","title":"Game Mode Map","text":"<pre><code>val gameModeMap = mapOf(\n0.0 to Triple(GameDifficulty.EASY, 0.0, Color.Green),\n0.5 to Triple(GameDifficulty.MEDIUM, 0.5, Color.Yellow),\n1.0 to Triple(GameDifficulty.HARD, 1.0, Color.Red)\n)\n</code></pre> <p>Ennek a map-nek a seg\u00edts\u00e9g\u00e9vel fogjuk nyilv\u00e1n tartani az egyes \u00e9rt\u00e9kekhez tartoz\u00f3 adatokat. 3 \u00e1llapot lesz a Slider-en:</p> <ol> <li>Bal oldalon</li> <li>K\u00f6z\u00e9pen</li> <li>Jobb oldalon</li> </ol> <p>Ezekhez mindegyikhez hozz\u00e1 van rendelve egy Triple map, ami tartalmazza a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t egy Enum Class seg\u00edts\u00e9g\u00e9vel, mag\u00e1t a Slider \u00e9rt\u00e9k\u00e9t, illetve egy sz\u00ednt, amivel k\u00f6nnyen tudjuk demonstr\u00e1lni a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t a Label feliraton.</p>"},{"location":"laborok/snake/#difficulty-label","title":"Difficulty Label","text":"<pre><code>Text(\ntext = difficulty.toString(),\ncolor = gameModeMap.values.first { it.first == difficulty }.third,\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\n</code></pre> <p>Ez fog felelni a neh\u00e9zs\u00e9g felirat\u00e1\u00e9rt. Itt \u00e9rt\u00e9kk\u00e9nt \u00e1tadjuk az egyik v\u00e1ltoz\u00f3nk \u00e9rt\u00e9k\u00e9t, majd sz\u00ednnek az el\u0151bb l\u00e9trehozott map \u00e9rt\u00e9k\u00e9t. Itt egy predik\u00e1tum seg\u00edts\u00e9g\u00e9vel kisz\u0171rj\u00fck az aktu\u00e1lis j\u00e1t\u00e9k neh\u00e9zs\u00e9get, majd \u00e1tadjuk a harmadik \u00e9rt\u00e9k\u00e9t a color attrib\u00fatumnak.</p>"},{"location":"laborok/snake/#difficulty-slider","title":"Difficulty Slider","text":"<pre><code>Slider(\nvalue = gameModeMap.values.first { it.first == difficulty }.second.toFloat(),\nonValueChange = {\ndifficulty = gameModeMap[it.toDouble()]!!.first\n},\ncolors = SliderDefaults.colors(\nthumbColor = Color.Black,\nactiveTrackColor = Color.Black,\ninactiveTrackColor = Color.Black\n),\nsteps = 1,\nvalueRange = 0f..1.0f\n)\n</code></pre> <p>Az el\u0151z\u0151h\u00f6z hasonl\u00f3an a GameModeMap-et haszn\u00e1lva \u00e1taduk az \u00e9rt\u00e9ket a Slider-nek, csak itt nek\u00fcnk a m\u00e1sodik adatra van sz\u00fcks\u00e9g. Hogy ha az \u00e9rt\u00e9ket v\u00e1ltoztatjuk, akkor mag\u00e1t a difficulty v\u00e1ltoz\u00f3t kell fel\u00fcl\u00edrni az \u00faj \u00e9rt\u00e9kkel. A steps, illetve a valueRange seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edthatjuk a Slider m\u0171k\u00f6d\u00e9s\u00e9t, nek\u00fcnk most 0.0-1.0 k\u00f6z\u00f6tti \u00e9rt\u00e9kekre van sz\u00fcks\u00e9g\u00fcnk \u00e9s azon bel\u00fcl egy l\u00e9p\u00e9ses Sliderre.</p>"},{"location":"laborok/snake/#name-field","title":"Name Field","text":"<p><pre><code>OutlinedTextField(\nvalue = playerName,\nonValueChange = {\nplayerName = it\n},\nisError = emptyField,\nsupportingText = { if (emptyField) Text(\ntext = \"Please enter a name\",\nfontSize = 20.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n) },\nlabel = { Text(\n\"Player Name\",\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n) },\ntextStyle = TextStyle(\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\nfontSize = 30.sp\n)\n)\n</code></pre> Ez a TextField egy \u00f6sszetettebb Composable lesz, de a le\u00edr\u00e1s alapj\u00e1n k\u00f6nnyne meg lehet \u00e9rteni.</p> <ul> <li><code>value</code> - Ennek a param\u00e9ternek \u00e1tadjuk mag\u00e1t a playerName v\u00e1ltoz\u00f3 \u00e9rt\u00e9k\u00e9t.</li> <li><code>onValueChange</code> - Ennek az attrib\u00fatum seg\u00edts\u00e9g\u00e9vel adjuk meg egy lambd\u00e1ba, hogy mi t\u00f6rt\u00e9njen, hogy ha a felhaszn\u00e1l\u00f3 \u00edrt a TextField-be. Jelen esetben fel\u00fcl\u00edrjuk a v\u00e1ltoz\u00f3nk \u00e9rt\u00e9k\u00e9t, \u00e9s mivel egy remember - mutableStateOf-os v\u00e1ltoz\u00f3r\u00f3l van sz\u00f3, ez\u00e9rt Recomposition val\u00f3sul meg, \u00edgy a friss \u00e9rt\u00e9k\u00e9t fogjuk l\u00e1tni a v\u00e1ltoz\u00f3nak.</li> <li><code>isError</code> - Itt egy Boolean v\u00e1ltoz\u00f3t tudunk \u00e1tadni \u00e9rt\u00e9kk\u00e9nt, amire az\u00e9rt van sz\u00fcks\u00e9g, hogy ha a felhaszn\u00e1l\u00f3 \u00fcressen hagyn\u00e1 ezt a mez\u0151t, ne tudjun tov\u00e1bb l\u00e9pni a k\u00f6vetkez\u0151 k\u00e9perny\u0151re.</li> <li><code>supportingText</code> - Itt meg tudunk adni egy\u00e9b seg\u00edts\u00e9get a felhaszn\u00e1l\u00f3nak, hogy ha \u00fcressen hagyn\u00e1 a mez\u0151 \u00e9rt\u00e9k\u00e9t, \u00e9s tov\u00e1bb szeretne l\u00e9pni, akkor jelen\u00edtse meg a Please enter a name feliratot.</li> <li><code>label</code> - Ez egy kieg\u00e9sz\u00edt\u00e9s az OutlinedTextField Composable f\u00fcggv\u00e9nyben. Ennek a seg\u00edts\u00e9g\u00e9vel tudunk megadni inform\u00e1l\u00f3 feliratot, hogy az adott TextField mi\u00e9rt felel.</li> <li><code>textStyle</code> - Ennek a seg\u00edts\u00e9g\u00e9vel tudunk be\u00e1ll\u00edtani \u00faj st\u00edlust a ki\u00edr\u00e1sra.</li> </ul>"},{"location":"laborok/snake/#start-button","title":"Start Button","text":"<p><pre><code>Button(\nonClick = {\nif (playerName.isNotEmpty()) {\nnavController.navigate(\"gameScreen/${playerName}/${difficulty.name}\")\n}else{\nemptyField = true\n}\n}) {\nText(\ntext = \"Start Game\",\nfontSize = 30.sp,\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\n)\n}\n</code></pre> Ez egy szimpla gomb, ami az\u00e9rt felel, hogy elind\u00edtsa a j\u00e1t\u00e9kot, hogy ha a felhaszn\u00e1l\u00f3 mindent helyesen csin\u00e1lt. Az onClick esem\u00e9nynek egy if-else el\u00e1gaz\u00e1st adunk \u00e1t, ami ellen\u0151rzi, hogy a felhaszn\u00e1l\u00f3 \u00edrt-e be adatot a TextField-be. Hogy ha \u00fcresen hagyta, akkor a Boolean v\u00e1ltoz\u00f3t bebillenti true \u00e9rt\u00e9kbe, aminek k\u00f6sz\u00f6nhet\u0151en megjelenik az SupportingText \u00fczenet. Ilyenkor a felhaszn\u00e1l\u00f3 nem tud tov\u00e1bb menni a k\u00f6vetkez\u0151 ablakra mindaddig am\u00edg a TextField \u00fcres.</p> <p>Ahhoz hogy a GameScreen-t is meg tudjuk csin\u00e1lni, ahhoz el\u0151tte mag\u00e1t a j\u00e1t\u00e9k logik\u00e1t kell megval\u00f3s\u00edtani. Folytat\u00e1sk\u00e9nt elk\u00e9sz\u00edtj\u00fck a j\u00e1t\u00e9knak az \u00e1llapotait egy Data Class seg\u00edts\u00e9g\u00e9vel, majd a Snake-hez tartoz\u00f3 viewModel-t is.</p> <p>BEADAND\u00d3 (2.5 pont)</p> <p>K\u00e9sz\u00edts 4 k\u00e9perny\u0151 k\u00e9pet az elk\u00e9sz\u00fclt k\u00e9perny\u0151kr\u0151l, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt oldal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt, \u00e9s/vagy j\u00e1t\u00e9kosn\u00e9vk\u00e9nt megadva. A k\u00e9peket a megold\u00e1sban a repository-ba f2a.png, f2b.png, f2c.png, f2d.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#snake-state-snake-view-model-4-pont","title":"Snake State / Snake View Model (4 pont)","text":""},{"location":"laborok/snake/#snake-state","title":"Snake State","text":"<p>Els\u0151 l\u00e9p\u00e9sben elk\u00e9sz\u00edtj\u00fck a k\u00edgy\u00f3 \u00e1llapot\u00e1\u00e9rt felel\u0151s Data Classt. K\u00e9sz\u00edts\u00fcnk a <code>model</code> packagen bel\u00fcl egy <code>snake</code> packaget, amiben egy <code>SnakeState</code> Kotlin filet hozunk l\u00e9tre, majd a mell\u00e9kelt k\u00f3d seg\u00edts\u00e9g\u00e9vel megval\u00f3s\u00edtjuk a logik\u00e1t.</p> <pre><code>data class SnakeState(\nval xSize: Int = 20,\nval ySize: Int = 30,\nval direction: Direction = Direction.RIGHT,\n//val prevDirection: Direction = Direction.RIGHT,\nval snake: List&lt;Coordinate&gt; = listOf(Coordinate(x = 5, y = 5)),\nval food: Coordinate = generateFood(xSize, ySize),\nval isGameOver: Boolean = false,\nval gameState: GameState = GameState.IDLE\n) {\n\n//Companion Object - Generate Food\n\n\n//Get State\n\n\n}\n//GameState\n\n\n//Direction\n\n\n//Coordinate\n</code></pre> <p>Eg\u00e9sz\u00edts\u00fck ki a SnakeState Data Class Skeletonj\u00e1t az al\u00e1bbiak szerint:</p>"},{"location":"laborok/snake/#generate-food","title":"Generate Food","text":"<p>Ez a f\u00fcggv\u00e9ny egy random koordin\u00e1t\u00e1t fog gener\u00e1lni a p\u00e1ly\u00e1n, \u00fagy, hogy az adott koordin\u00e1ta X: 1-20 k\u00f6z\u00f6tt, Y:1-30 k\u00f6z\u00f6ttre essen. Ezt az al\u00e1bbi f\u00fcggv\u00e9nnyel tudjuk megval\u00f3s\u00edtani:</p> <p><pre><code>companion object {\nfun generateFood(\nxSize: Int,\nySize: Int\n): Coordinate {\nreturn Coordinate(\nx = Random.nextInt(from = 1, until = xSize-1),\ny = Random.nextInt(from = 1, until = ySize-1)\n)\n}\n}\n</code></pre> Azonban ez m\u00e9g hib\u00e1t fog mutatni a k\u00f3dszerkeszt\u0151 fel\u00fcleten, de ennek a hi\u00e1nyz\u00f3 Data Class az oka. A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben ezt fogjuk megval\u00f3s\u00edtani.</p>"},{"location":"laborok/snake/#coordinate-data-class","title":"Coordinate Data Class","text":"<p>Ez a Data Class k\u00e9t attrib\u00fatumot fog tartalmazni, egy X \u00e9s egy Y. Ez fog felelni egyetlen koordin\u00e1t\u00e1nak a hely\u00e9\u00e9rt.</p> <pre><code>data class Coordinate(\nval x: Int,\nval y: Int\n)\n</code></pre> <p>A megadott k\u00f3d seg\u00edts\u00e9g\u00e9vel eg\u00e9sz\u00edts\u00fck ki a f\u00e1jlt.</p>"},{"location":"laborok/snake/#game-state-direction-enum-class","title":"Game State / Direction Enum Class","text":"<p>Ahhoz hogy minden hib\u00e1t elt\u0171ntess\u00fcnk a k\u00f3db\u00f3l l\u00e9tre kell hoznunk a hi\u00e1nyz\u00f3 Enum Class-okat is. </p> <ul> <li>A GameState Enum Class a j\u00e1t\u00e9k \u00e1llapot\u00e1\u00e9rt felel<ul> <li>IDLE - Kezdeti \u00e1llapot</li> <li>STARTED - Fut</li> <li>Paused - Le\u00e1ll\u00edtva</li> </ul> </li> <li>Direction Enum Class pedig a jelenlegi ir\u00e1nyt fogja t\u00e1rolni.<ul> <li>UP - A k\u00edgy\u00f3 felfele megy</li> <li>DOWN - A k\u00edgy\u00f3 lefele megy</li> <li>LEFT - A k\u00edgy\u00f3 balra megy</li> <li>RIGHT - A k\u00edgy\u00f3 jobbra megy</li> </ul> </li> </ul> <pre><code>enum class GameState{\nIDLE, STARTED, PAUSED\n}\n</code></pre> <pre><code>enum class Direction{\nUP, DOWN, LEFT, RIGHT\n}\n</code></pre> <p>Ezut\u00e1n m\u00e1r csak egy getter f\u00fcggv\u00e9nyre van sz\u00fcks\u00e9g aminek a seg\u00edts\u00e9g\u00e9vel le tudjuk k\u00e9rni a jelenlegi j\u00e1t\u00e9k \u00e1llapot\u00e1t.</p>"},{"location":"laborok/snake/#get-state-fuggveny","title":"Get State f\u00fcggv\u00e9ny","text":"<p><pre><code>fun getState(): GameState {\nreturn gameState\n}\n</code></pre> Ez egy egyszer\u0171 getter f\u00fcggv\u00e9ny, amely vissza adja a j\u00e1t\u00e9k jelenlegi \u00e1llapot\u00e1t.</p> <p>Ezen k\u00edv\u0171l meg kell val\u00f3s\u00edtanunk egy egyszer\u0171 Sealed Class-t ami mag\u00e1\u00e9rt az Eventek\u00e9rt fog felelni. </p> <ul> <li>Start Game</li> <li>Pause Game</li> <li>Reset Game</li> <li>Change Dir</li> </ul> <p>Ehhez hozzunk l\u00e9tre egy \u00faj Kotlin File-t a <code>snake</code> Packageba <code>SnakeEvent</code> n\u00e9ven, majd eg\u00e9sz\u00edts\u00fck ki az al\u00e1bbi k\u00f3d alapj\u00e1n:</p> <pre><code>sealed class SnakeEvent {\ndata object StartGame: SnakeEvent()\ndata object PauseGame: SnakeEvent()\ndata object ResetGame: SnakeEvent()\ndata class ChangeDir(val dir: Direction): SnakeEvent()\n}\n</code></pre> <p>V\u00e9g\u00fcl sz\u00fcks\u00e9g\u00fcnk van mag\u00e1ra a ViewModel-re, ami a k\u00edgy\u00f3 viselked\u00e9s\u00e9\u00e9rt fog felelni.</p>"},{"location":"laborok/snake/#view-model","title":"View Model","text":"<p>Ez a k\u00f3d j\u00f3val hosszabb lesz mint az eddigiek, \u00edgy a meg\u00e9rt\u00e9se nagy odafigyel\u00e9st ig\u00e9nyel!</p> <pre><code>class SnakeViewModel(): ViewModel(){\n//State\nprivate val _state = MutableStateFlow(SnakeState())\nval state = _state.asStateFlow()\n\n//Game Difficulty\nprivate val _gameDifficulty = MutableStateFlow(GameDifficulty.EASY)\nval gameDifficulty: StateFlow&lt;GameDifficulty&gt; = _gameDifficulty.asStateFlow()\n\n//Player Name\nprivate var playerName: String = \"\"\n\n//##FUNS##\n\n//Event Handling\n\n\n//Set Game Difficulty\n\n\n//Set Player Name\n\n\n//Start Game\n\n\n//Resume Game\n\n\n//Direction Update\n\n\n//Game Update\n\n\n//CHECK IF COORDINATE IS IN BOUNDS\n\n}\n</code></pre> <p>Az egyes viewModel elemeket l\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre fogjuk hozz\u00e1adni a viewModellhez. Kezdetben a legegyszer\u0171bbekkel fogjuk kezdeni.</p> <p>Set Game Difficulty</p> <pre><code>fun setGameDifficulty(difficulty: GameDifficulty){\n_gameDifficulty.value = difficulty\n}\n</code></pre> <p>Ez egy egyszer\u0171 f\u00fcggv\u00e9ny amelynek a seg\u00edts\u00e9g\u00e9vel a param\u00e9terben \u00e1tadott j\u00e1t\u00e9kneh\u00e9zs\u00e9get fogja be\u00e1ll\u00edtani.</p> <p>Set Player Name</p> <p>Szint\u00e9n az el\u0151z\u0151h\u00f6z hasonl\u00f3an m\u0171k\u00f6dve, ez a j\u00e1t\u00e9kos nev\u00e9t fogja be\u00e1ll\u00edtani.</p> <pre><code>fun setPlayerName(name: String){\nplayerName = name\n}\n</code></pre> <p>Direction Update</p> <p><pre><code>private fun updateDir(dir: Direction){\n_state.update { it.copy(direction = dir) }\n}\n</code></pre> Szint\u00e9n hasonl\u00f3an m\u0171k\u00f6dik, itt mag\u00e1t a k\u00edgy\u00f3 menetir\u00e1ny\u00e1t fogjuk \u00e1ll\u00edtani.</p> <p>A k\u00f6vetkez\u0151 egy kicsit hosszabb k\u00f3d lesz, ez mag\u00e1t az Eventeket fogja kezelni, \u00edgy musz\u00e1j mindegyik eventhez megval\u00f3s\u00edtani a m\u0171k\u00f6d\u00e9st.</p> <p>Event Handling</p> <pre><code>fun onEvent(event: SnakeEvent){\nwhen(event){\n//Pause Game\nis SnakeEvent.PauseGame -&gt; {\n//TODO\n}\n//Reset Game\nis SnakeEvent.ResetGame -&gt; {\n//TODO\n}\n//Start Game\nis SnakeEvent.StartGame -&gt; {\n//TODO\n}\n//Direction Handle\nis SnakeEvent.ChangeDir -&gt; {\n//PASS IF GAME NOT STARTED\n\n//TODO\n\n}\n}\n}\n</code></pre> <p><code>Pause Game</code></p> <p><pre><code>is SnakeEvent.PauseGame -&gt; {\n_state.update { it.copy(gameState = GameState.PAUSED) }\n}\n</code></pre> Ha ez az event k\u00f6vetkezik be, akkor a jelenlegi \u00e1llapot\u00e1t lem\u00e1soljuk a k\u00edgy\u00f3nak, \u00e9s gameState param\u00e9terk\u00e9nt \u00e1tadjuk neki a PAUSED \u00e1llapotot.</p> <p><code>Reset Game</code> <pre><code>is SnakeEvent.ResetGame -&gt; {\n_state.value = SnakeState()\n}\n</code></pre> Ha ez az \u00e1llapot k\u00f6vetkezik be, akkor egy teljesen \u00faj \u00e1llapotot kap a k\u00edgy\u00f3, mint ha frissen ind\u00edtan\u00e1nk egy \u00faj j\u00e1t\u00e9kot.</p> <p><code>Start Game</code> <pre><code>is SnakeEvent.StartGame -&gt; {\n_state.update { it.copy(gameState = GameState.STARTED) }\nstartGame()\n}\n</code></pre> Enn\u00e9l az \u00e1llapotn\u00e1l hasonl\u00f3an j\u00e1runk el, mint a <code>Pause Game</code> \u00e1llapotn\u00e1l, csak itt a j\u00e1t\u00e9k \u00e1llapot\u00e1t STARTED-re \u00e1ll\u00edtjuk.</p> <p><code>Direction Handle</code> <pre><code>is SnakeEvent.ChangeDir -&gt; {\n//PASS IF GAME NOT STARTED\nif (state.value.gameState != GameState.STARTED) {\nreturn\n}\nupdateDir(\nwhen {\nevent.dir == Direction.UP &amp;&amp; state.value.direction != Direction.DOWN -&gt; {\nDirection.UP\n}\nevent.dir == Direction.DOWN &amp;&amp; state.value.direction != Direction.UP -&gt; {\nDirection.DOWN\n}\nevent.dir == Direction.LEFT &amp;&amp; state.value.direction != Direction.RIGHT -&gt; {\nDirection.LEFT\n}\nevent.dir == Direction.RIGHT &amp;&amp; state.value.direction != Direction.LEFT -&gt; {\nDirection.RIGHT\n}\nelse -&gt; state.value.direction\n}\n)\n}\n</code></pre> V\u00e9g\u00fcl mag\u00e1t az ir\u00e1nyv\u00e1ltoztat\u00e1s\u00e9rt felel\u0151s esem\u00e9nyt is megval\u00f3s\u00edtjuk az al\u00e1bbiak szerint. Itt fontos, hogy az egyes ir\u00e1nyv\u00e1ltoztat\u00e1sok csak akkor lehets\u00e9gesek, hogy ha a v\u00e1lasztott ir\u00e1ny az adott ir\u00e1nynak nem a 180 fokos elforgat\u00e1sa, ugyanis ilyenkor a k\u00edgy\u00f3 saj\u00e1t mag\u00e1ba forogna \u00e1t, amely a j\u00e1t\u00e9k v\u00e9g\u00e9t eredm\u00e9nyezn\u00e9.</p> <p>Ezut\u00e1n a Update Game f\u00fcggv\u00e9nyt kell megval\u00f3s\u00edtanunk, amelynek a seg\u00edts\u00e9g\u00e9vel a j\u00e1t\u00e9k \u00e1llapot\u00e1t friss\u00edtj\u00fck, minden egyes mozg\u00e1s ut\u00e1n. Ez szint\u00e9n egy hosszabb k\u00f3d lesz, de igyekezt\u00fcnk a lehet\u0151 legjobban sz\u00e9tszedni.</p> <p>Update Game</p> <pre><code>private fun updateGame(state: SnakeState) : SnakeState {\n//GAME OVER CHECK\n\n\n//HEAD, GRID SIZE\nval head = state.snake.first()\nval xGrid = state.xSize\nval yGrid = state.ySize\n\n//NEW HEAD COORDINATE\nval newHead = when (state.direction){\n\n}\n\n//GAME OVER - SNAKE HIT ITSELF OR WALL\nif (\nstate.snake.contains(newHead) ||\n!isInBounds(\nnewHead,\nxGrid,\nyGrid\n)\n){\n//DATABASE INSERT\nreturn state.copy(isGameOver = true)\n}\n\n//NEW SNAKE AND FOOD\n\nreturn state.copy(snake = newSnake, food = newFood)\n}\n</code></pre> <p><code>GameOver Check</code></p> <p>Ez egy szimpla if el\u00e1gaz\u00e1s ahol leellen\u0151rizz\u00fck, hogy a j\u00e1t\u00e9k Game Over \u00e1llapotban van-e, vagy sem. <pre><code>if (state.isGameOver){\nreturn state\n}\n</code></pre> <code>New Head Coordinates</code></p> <p>Ez egy kicsit \u00f6sszetettebb \u00e9rt\u00e9kad\u00e1s, ugyanis itt figyelembe kell venni a jelenlegi ir\u00e1nyt is, \u00e9s az alapj\u00e1n kell kisz\u00e1m\u00edtani az \u00faj koordin\u00e1t\u00e1t.</p> <p><pre><code>val newHead = when (state.direction){\nDirection.UP -&gt; Coordinate(x = head.x, y = (head.y - 1))\nDirection.DOWN -&gt; Coordinate(x = head.x, y = (head.y + 1))\nDirection.LEFT -&gt; Coordinate(x = head.x - 1, y = (head.y))\nDirection.RIGHT -&gt; Coordinate(x = head.x + 1, y = (head.y))\n}\n</code></pre> <code>New Snake and Food</code></p> <p><pre><code>var newSnake = mutableListOf(newHead) + state.snake\nval newFood = if (newHead == state.food){\nSnakeState.generateFood(xGrid, yGrid)\n} else {\nstate.food\n}\n\nif (newHead != state.food){\nnewSnake = newSnake.toMutableList()\nnewSnake.removeLast()\n}\n</code></pre> Itt l\u00e9trehozunk egy \u00faj k\u00edgy\u00f3t, amelynek az els\u0151 eleme az \u00faj fej koordin\u00e1t\u00e1ja lesz (newHead), majd ehhez hozz\u00e1f\u0171zz\u00fck a m\u00e1r megl\u00e9v\u0151 k\u00edgy\u00f3nkat. Valamint \u00faj alm\u00e1t is kell gener\u00e1lnunk. Ehhez ellen\u0151rizn\u00fcnk kell, hogy a k\u00edgy\u00f3 megette-e az alm\u00e1t vagy sem. Ha megette akkor \u00faj alm\u00e1t gener\u00e1lunk, hogy ha nem ette meg, akkor a jelenlegi alma koordin\u00e1t\u00e1j\u00e1t adjuk \u00e1t az \u00fajnak.</p> <p>Megette, vagy sem?</p> <p>Hogy megette-e az alm\u00e1t a k\u00edgy\u00f3 vagy sem, azt onnan tudjuk, hogy a k\u00edgy\u00f3 fej\u00e9nek a koordin\u00e1t\u00e1ja megegyezik az alma koordin\u00e1t\u00e1ival! :)</p> <p>V\u00e9g\u00fcl sz\u00fcks\u00e9g\u00fcnk van egy f\u00fcggv\u00e9nyre amit ugyan m\u00e1r felhaszn\u00e1ltunk, de nem val\u00f3s\u00edtottuk m\u00e9g meg. Ez az isInBound f\u00fcggv\u00e9ny lesz, ez azt ellen\u0151rzi le, hogy a k\u00edgy\u00f3 neki ment-e a falnak vagy sem.  <pre><code>private fun isInBounds(coordinate: Coordinate, xGridSize: Int, yGridSize: Int): Boolean {\nreturn coordinate.x in 1 until xGridSize-1 &amp;&amp; coordinate.y in 1 until yGridSize-1\n}\n</code></pre> V\u00e9g\u00fcl m\u00e1r csak k\u00e9t f\u00fcggv\u00e9ny\u00fcnk van h\u00e1tra a viewModellb\u0151l amit az al\u00e1bbi k\u00f3d alapj\u00e1n meg fogunk tudni \u00edrni.</p> <p>Start Game</p> <p>Ez a f\u00fcggv\u00e9ny mag\u00e1\u00e9rt a k\u00edgy\u00f3 l\u00e9ptet\u00e9s\u00e9\u00e9rt felel, illetve ez a f\u00fcggv\u00e9ny h\u00edvja meg az im\u00e9nt l\u00e9trehozott updateGame f\u00fcggv\u00e9nyt megadott id\u0151k\u00f6z\u00f6nk\u00e9nt. (Ez a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t\u0151l fog f\u00fcggeni.)</p> <p><pre><code>private fun startGame(){\nif (!state.value.isGameOver){\n_state.update { it.copy(gameState = GameState.STARTED) }\nviewModelScope.launch {\ngameDifficulty.collect { difficulty -&gt;\nwhile (state.value.gameState == GameState.STARTED) {\nval delayMillis = when (difficulty) {\nGameDifficulty.EASY -&gt; 320L\nGameDifficulty.MEDIUM -&gt; 220L\nGameDifficulty.HARD -&gt; 120L\n}\n_state.value = updateGame(state.value)\ndelay(delayMillis)\n}\n}\n}\n}\n}\n</code></pre> A f\u00fcggv\u00e9ny elej\u00e9n leellen\u0151rizz\u00fck, hogy a j\u00e1t\u00e9k m\u00e9g megy-e (az az nincs game over), majd ez alapj\u00e1n friss\u00edtj\u00fck az \u00e1llapotot STARTED \u00e1llapotba.</p> <p>Ezut\u00e1n egy viewModelScope seg\u00edts\u00e9g\u00e9vel tudunk delay-t alkalmazni, ami a k\u00edgy\u00f3 mozg\u00e1s\u00e1nak k\u00e9sleltet\u00e9s\u00e9\u00e9rt felel. A k\u00e9sleltet\u00e9s a j\u00e1t\u00e9k neh\u00e9zs\u00e9g\u00e9t\u0151l fog f\u00fcggeni.</p> <p>V\u00e9g\u00fcl a resume game f\u00fcggv\u00e9nyt is meg tudjuk val\u00f3s\u00edtani, amely elind\u00edtja a j\u00e1t\u00e9kot a mentett poz\u00edci\u00f3b\u00f3l.</p> <p>Resume Game</p> <pre><code>private fun resumeGame(){\n_state.update { it.copy(gameState = GameState.STARTED) }\nstartGame()\n}\n</code></pre> <p>\u00cdgy m\u00e9g sajnos \u00f6nmag\u00e1ban a projekt nem m\u0171k\u00f6dik, ugyanis a Game Screen m\u00e9g nincs k\u00e9sz. A k\u00f6vetkez\u0151 feladatban ezt is meg fogjuk val\u00f3s\u00edtani, illetve a sz\u00fcks\u00e9ges DrawScope f\u00fcggv\u00e9nyeket is l\u00e9tre fogjuk hozni.</p> <p>BEADAND\u00d3 (4 pont)</p> <p>K\u00e9sz\u00edts 2 k\u00e9perny\u0151k\u00e9pet az elk\u00e9sz\u00fclt k\u00f3dr\u00f3l, amelyen l\u00e1tszik a SnakeState k\u00f3dja, valamint a ViewModel-ben az Event k\u00f3dja (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f3a.png, f3b.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#game-screen-drawscope-fuggvenyek-4-pont","title":"Game Screen / DrawScope f\u00fcggv\u00e9nyek (4 pont)","text":"<p>Ahhoz hogy a Game Screen-t el tudjuk k\u00e9sz\u00edteni el\u0151sz\u00f6r sz\u00fcks\u00e9g\u00fcnk van 3 DrawScope-ra. DrawBoard, DrawFood, DrawSnake. Ezek egy-egy DrawScope f\u00fcggv\u00e9nyek, amellyeket meg tudunk h\u00edvni a Canvas Composable belsej\u00e9ben. Mag\u00e1t a p\u00e1ly\u00e1t a j\u00e1t\u00e9kot a Canvas Composable-val fogjuk megval\u00f3s\u00edtani.</p> <p>A 3 DrawScopen k\u00edv\u00fcl sz\u00fcks\u00e9g\u00fcnk van m\u00e9g egy p\u00e1r seg\u00e9df\u00fcggv\u00e9nyre, ezek a (BodyImage, IsTurn, TurnImage) f\u00fcggv\u00e9nyek csak a j\u00e1t\u00e9k sz\u00e9p\u00edt\u00e9s\u00e9\u00e9rt felelnek, hogy ha a k\u00edgy\u00f3nak nem csak egy k\u00f6r alak\u00fa testet szeretn\u00e9nk adni, hanem valami k\u00e9pet, vagy Icon-t, amin l\u00e1tsz\u00f3dik a k\u00edgy\u00f3 fordul\u00e1sa is.</p> <p> </p> <p>Itt az al\u00e1bbi p\u00e9lda megmutat egy olyan opci\u00f3t amit meg kellene akad\u00e1lyoznunk ezekkel a f\u00fcggv\u00e9nyekkel.</p> <p>Els\u0151 sorban val\u00f3s\u00edtsuk meg a DrawScope f\u00fcggv\u00e9nyeket. Ehhez hozzunk l\u00e9tre 1 \u00faj Packaget a gy\u00f6k\u00e9r mapp\u00e1ban <code>draw</code> n\u00e9ven, majd ezekben 3 \u00fajabb Packaget -- board, food, snake n\u00e9ven.</p> <p>DrawBoard</p> <p>Els\u0151nek val\u00f3s\u00edtsuk meg a DrawBoard f\u00fcggv\u00e9ny\u00fcnket. Ehhez hozzunk l\u00e9tre egy \u00faj Kotlin File-t a board packageben DrawBoard n\u00e9ven, majd \u00edrjuk bele az al\u00e1bbi k\u00f3dot.</p> <pre><code>fun DrawScope.drawBoard(\ncellSize: Float,\ncellColor: Color,\nborderCellColor: Color,\ngridWidth: Int,\ngridHeight: Int\n){\nfor (i in 0 until gridWidth){\nfor (j in 0 until gridHeight){\nval isBorderCell = i == 0 || j == 0 || i == gridWidth - 1 || j == gridHeight - 1\ndrawRect(\ncolor = if (isBorderCell) borderCellColor else cellColor,\ntopLeft = Offset(i * cellSize, j * cellSize),\nsize = Size(cellSize, cellSize)\n)\n}\n}\n}\n</code></pre> <p>A f\u00fcggv\u00e9ny l\u00e9nyege, hogy param\u00e9terk\u00e9nt \u00e1tadjuk a k\u00f6vetkez\u0151eket:</p> <ul> <li>cellSize - Egyetlen cell\u00e1nak a m\u00e9rete a Board-on.</li> <li>cellColor - A cella sz\u00edne, nek\u00fcnk ez most alapb\u00f3l Fekete lesz.</li> <li>borderCellColor - A Board sz\u00e9l\u00e9nek a sz\u00edne. Szeretn\u00e9nk megk\u00fcl\u00f6nb\u00f6ztetni a p\u00e1lya sz\u00edn\u00e9t\u0151l.</li> <li>gridWidth - A Board sz\u00e9less\u00e9ge</li> <li>gridHeight - A Board magass\u00e1ga</li> </ul> <p>A f\u00fcggv\u00e9ny belsej\u00e9ben kett\u0151 for ciklus tal\u00e1lhat\u00f3. Ennek a seg\u00edts\u00e9g\u00e9vel tudunk v\u00e9gig iter\u00e1lni egy k\u00e9t dimenzi\u00f3s t\u00e1bl\u00e1zaton. Az els\u0151 for ciklus a Board sz\u00e9less\u00e9g\u00e9t kapja meg, a m\u00e1sodik pedig a magass\u00e1g\u00e1t. Ezen bel\u00fcl ellen\u0151rizz\u00fck, hogy a Board sz\u00e9leit rajzoljuk-e ki vagy sem, majd ett\u0151l a v\u00e1ltoz\u00f3t\u00f3l f\u00fcgg\u0151en sz\u00ednezz\u00fck ki a rajzolt t\u00e9glalapokat.</p> <p>DrawFood</p> <p>Folytat\u00e1sk\u00e9nt hozzuk l\u00e9tre a DrawFood nev\u0171 Kotlin File-t a food nev\u0171 Package-ban, majd a mell\u00e9kelt k\u00f3d alapj\u00e1n \u00edrjuk meg.</p> <pre><code>fun DrawScope.drawFood(\nfoodImage: ImageBitmap,\ncellSize: Int,\ncoordinate: Coordinate\n){\ndrawImage(\nimage = foodImage,\ndstOffset = IntOffset(coordinate.x * cellSize, coordinate.y * cellSize),\ndstSize = IntSize(cellSize, cellSize)\n)\n}\n</code></pre> <p>Ez egy egyszer\u0171 f\u00fcggv\u00e9ny, amelynek a seg\u00edts\u00e9g\u00e9vel a megadott k\u00e9pet ki tudjuk rajzolni mag\u00e1n a p\u00e1ly\u00e1n. Ez jelen esetben a Snake Food lesz. Ez h\u00e1rom param\u00e9tert kap:</p> <ul> <li>foodImage - Egy ImageBitmap amely a Food k\u00e9p\u00e9t tartalmazza</li> <li>cellSize - Ez egy Int param\u00e9ter, amely a cella m\u00e9ret\u00e9t adja \u00e1t.</li> <li>coordinate - Az a koordin\u00e1ta a p\u00e1ly\u00e1n, ahova az adott k\u00e9pet ki kell rajzolnunk.</li> </ul> <p>A drawImage f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel ezt k\u00f6nnyen meg is tudjuk val\u00f3s\u00edtani, csak meg kell adni az al\u00e1bbi param\u00e9tereket. </p> <p>DrawSnake</p> <p>Ez a f\u00fcggv\u00e9ny egy kicsit \u00f6sszetettebb f\u00fcggv\u00e9ny lesz, ugyanis a k\u00edgy\u00f3 kirajzol\u00e1s\u00e1t sok szempont alapj\u00e1n kell megval\u00f3s\u00edtani. Els\u0151 sorban szeretn\u00e9nk, hogy a k\u00edgy\u00f3 fordul\u00e1sn\u00e1l a megfelel\u0151 k\u00e9pet haszn\u00e1lja, valamint horizont\u00e1lis, \u00e9s vertik\u00e1lis k\u00f6zleked\u00e9sn\u00e9l is a megfelel\u0151 k\u00e9pet haszn\u00e1lja. Ezekhez seg\u00edts\u00e9get fognak ny\u00fajtani az al\u00e1bbi seg\u00e9df\u00fcggv\u00e9nyek. (BodyImage, IsTurn, TurnImage)</p> <p>Kezdj\u00fck a BodyImage Kotlin Fileval.</p>"},{"location":"laborok/snake/#body-image","title":"Body Image","text":"<p>Ez a f\u00fcggv\u00e9ny ki fogja nek\u00fcnk sz\u00e1m\u00edtani, hogy horizont\u00e1lis, vagy \u00e9ppen vertik\u00e1lis k\u00edgy\u00f3 testre van nek\u00fcnk sz\u00fcks\u00e9g\u00fcnk.</p> <pre><code>fun getBodyImage(\nindex: Int,\nsnake: List&lt;Coordinate&gt;,\nbodyVerticalImage: ImageBitmap,\nbodyHorizontalImage: ImageBitmap\n): ImageBitmap {\nval prev = snake[index - 1]\nval curr = snake[index]\nval next = snake[index + 1]\n\nval prevDirection = Pair(curr.x - prev.x, curr.y - prev.y)\nval nextDirection = Pair(next.x - curr.x, next.y - curr.y)\n\nreturn when {\nprevDirection.first == 0 &amp;&amp; nextDirection.first == 0 -&gt; bodyVerticalImage // Both directions are vertical\nprevDirection.second == 0 &amp;&amp; nextDirection.second == 0 -&gt; bodyHorizontalImage // Both directions are horizontal\nelse -&gt; throw IllegalArgumentException(\"Unexpected body segment at index $index\")\n}\n}\n</code></pre> <p>Param\u00e9terk\u00e9nt megkapja az adott index-et amely a k\u00edgy\u00f3nak egy r\u00e9sz\u00e9t jel\u00f6li a list\u00e1ban, valamint mag\u00e1t a list\u00e1t is, illetve a k\u00e9t k\u00e9pet. Kisz\u00e1m\u00edtjuk indexel\u00e9ssel az el\u0151z\u0151-jelenlegi-k\u00f6vetkez\u0151 koordin\u00e1t\u00e1kat, majd ezeknek a seg\u00edts\u00e9g\u00e9vel kisz\u00e1m\u00edtjuk, hogy mi volt az el\u0151z\u0151, illetve a k\u00f6vetkez\u0151 ir\u00e1nya a k\u00edgy\u00f3nak. Ezt \u00fagy tehetj\u00fck meg, hogy a jelenlegi koordin\u00e1t\u00e1b\u00f3l kivonjuk az el\u0151z\u0151 koordin\u00e1t\u00e1kat:</p> <p><pre><code>val prevDirection = Pair(curr.x - prev.x, curr.y - prev.y)\n</code></pre> Valamint a k\u00f6vetkez\u0151 ir\u00e1nyt is ki tudjuk sz\u00e1molni, \u00fagy, hogy a k\u00f6vetkez\u0151 koordin\u00e1t\u00e1b\u00f3l kivonjuk a jelenlegit.</p> <pre><code>val nextDirection = Pair(next.x - curr.x, next.y - curr.y)\n</code></pre> <p>Ezut\u00e1n egy when el\u00e1gaz\u00e1ssal visszaadjuk a megfelel\u0151 k\u00e9pet az al\u00e1bbi kik\u00f6t\u00e9s szerint:</p> <pre><code>return when {\nprevDirection.first == 0 &amp;&amp; nextDirection.first == 0 -&gt; bodyVerticalImage // Both directions are vertical\nprevDirection.second == 0 &amp;&amp; nextDirection.second == 0 -&gt; bodyHorizontalImage // Both directions are horizontal\nelse -&gt; throw IllegalArgumentException(\"Unexpected body segment at index $index\")\n}\n</code></pre> <p>Ahhoz, hogy kicsit \u00e9rthet\u0151bb legyen ez az algoritmus egy p\u00e9ld\u00e1n fogjuk demonstr\u00e1lni. K\u00e9pzelj\u00fck el az al\u00e1bbi szitu\u00e1ci\u00f3t. A k\u00edgy\u00f3 koordin\u00e1t\u00e1i:</p> <ul> <li>(2,2)</li> <li>(2,3)</li> <li>(2,4)</li> <li>(3,4)</li> <li>(4,4)</li> </ul> <p>Ez k\u00e9pen \u00edgy n\u00e9zne ki:</p> <p> </p> <p>Mi \u00fagy szeretn\u00e9nk megvizsg\u00e1lni, hogy a m\u00e1sodik indexet adjuk \u00e1t a f\u00fcggv\u00e9nynek indexk\u00e9nt. Ez a k\u00f6vetkez\u0151t fogja eredm\u00e9nyezni:</p> <pre><code>prev = Coordinate(2, 3)\ncurr = Coordinate(2, 4)\nnext = Coordinate(3, 4)\n\nDirections:  \nprevDirection = Pair(2 - 2, 4 - 3) = Pair(0, 1) (vertical)\nnextDirection = Pair(3 - 2, 4 - 4) = Pair(1, 0) (horizontal)\n</code></pre> <p>Ez ugyan Error-hoz vezetne, hogy ha \u00edgy lefutna, ugyanis egy k\u00e9p vagy vertik\u00e1lis \u00e1llapotban vagy horizont\u00e1lisban lehet. Mindkett\u0151 egyszerre nem lehet. Ezt a f\u00fcggv\u00e9ny hiv\u00e1sn\u00e1l akad\u00e1lyozzuk meg, ugyanis ilyenkor egy olyan testr\u00e9szr\u0151l besz\u00e9l\u00fcnk ami egy fordul\u00e1s. Ezt \u00fagy z\u00e1rjuk ki, hogy ellen\u0151rizz\u00fck az adott indexet, hogy fordul\u00e1s-e vagy sem.</p> <p>N\u00e9zz\u00fck meg ugyanezt a p\u00e9ld\u00e1t az 1-es indexre:</p> <p><pre><code>prev = Coordinate(2, 2)\ncurr = Coordinate(2, 3)\nnext = Coordinate(2, 4)\n\nDirections:  \nprevDirection = Pair(2 - 2, 3 - 2) = Pair(0, 1) (vertical)\nnextDirection = Pair(2 - 2, 4 - 3) = Pair(0, 1) (vertical)\n</code></pre> J\u00f3l l\u00e1that\u00f3, hogy most mind a kett\u0151 vertical lett, ekkor a when el\u00e1gaz\u00e1s Error dob\u00e1s n\u00e9lk\u00fcl le fog futni.</p> <p>K\u00f6vetkez\u0151 l\u00e9p\u00e9snek val\u00f3s\u00edtsuk meg az isTurn File tartalm\u00e1t is.</p>"},{"location":"laborok/snake/#isturn","title":"isTurn","text":"<p>Ezt a f\u00fcggv\u00e9nyt hasonl\u00f3 m\u00f3don meg tudjuk val\u00f3s\u00edtani az el\u0151z\u0151h\u00f6z k\u00e9pest. Itt is sz\u00fcks\u00e9g\u00fcnk van az index-re illetve a snake list\u00e1ra.</p> <pre><code>fun isTurnSegment(index: Int, snake: List&lt;Coordinate&gt;): Boolean {\nif (index &lt;= 0 || index &gt;= snake.size - 1) return false\n\nval prev = snake[index - 1]\nval curr = snake[index]\nval next = snake[index + 1]\n\nval prevDirection = Pair(curr.x - prev.x, curr.y - prev.y)\nval nextDirection = Pair(next.x - curr.x, next.y - curr.y)\n\n// Check if there is a change in direction\nreturn prevDirection != nextDirection &amp;&amp;\n(prevDirection.first == 0 || prevDirection.second == 0) &amp;&amp;\n(nextDirection.first == 0 || nextDirection.second == 0)\n}\n</code></pre> <p>Az el\u0151z\u0151vel megeggyez\u0151en ugyan azt hajtjuk v\u00e9gre a f\u00fcggv\u00e9ny els\u0151 fel\u00e9ben, majd a return-n\u00e1l leellen\u0151rizz\u00fck az al\u00e1bbiakat. Az el\u0151z\u0151vel megeggyez\u0151en a k\u00edgy\u00f3 koordin\u00e1t\u00e1i az al\u00e1bbiak:</p> <ul> <li>(2,2)</li> <li>(2,3)</li> <li>(2,4)</li> <li>(3,4)</li> <li>(4,4)</li> </ul> <p> </p> <p>Vegy\u00fck ism\u00e9t a m\u00e1sodik indexet p\u00e9ld\u00e1nak. Ennek igazat kell visszaadnia, ugyanis ez egy fordul\u00e1s.</p> <p><pre><code>prev = Coordinate(2, 3)\ncurr = Coordinate(2, 4)\nnext = Coordinate(3, 4)\n\nDirections:  \nprevDirection = Pair(2 - 2, 4 - 3) = Pair(0, 1) (vertical)\nnextDirection = Pair(3 - 2, 4 - 4) = Pair(1, 0) (horizontal)\n</code></pre> A return r\u00e9szn\u00e9l 3 krit\u00e9riumnak kell teljes\u00fclnie, hogy igaz \u00e9rt\u00e9ket adjon vissza, ha ezek k\u00f6z\u00fcl b\u00e1rmelyik s\u00e9r\u00fcl, akkor hamis \u00e9rt\u00e9ket fog visszaadni az isTurnSegment f\u00fcggv\u00e9ny.</p> <p>Itt jelen esetben a k\u00e9t v\u00e1ltoz\u00f3ra teljes\u00fclni fog, hogy nem egyenl\u0151, az egyik param\u00e9ter\u00fck tartalmaz 0-\u00e1t, ez\u00e1ltal igaz \u00e9rt\u00e9ket fog visszaadni.</p> <p>Tesztelj\u00fck le a m\u00e1sodik esetet is, amikor az index 1.</p> <p><pre><code>prev = Coordinate(2, 2)\ncurr = Coordinate(2, 3)\nnext = Coordinate(2, 4)\n\nDirections:  \nprevDirection = Pair(2 - 2, 3 - 2) = Pair(0, 1) (vertical)\nnextDirection = Pair(2 - 2, 4 - 3) = Pair(0, 1) (vertical)\n</code></pre> Hogy ha ezt az esetet n\u00e9zz\u00fck, akkor eredm\u00e9ny\u00fcl mind a k\u00e9t \u00e9rt\u00e9k megegyezik, ami \u00e1ltal s\u00e9r\u00fcl az els\u0151 krit\u00e9rium, \u00edgy hamis \u00e9rt\u00e9ket fogunk visszakapni.</p> <p>V\u00e9g\u00fcl val\u00f3s\u00edtsuk meg a TurnImage kotlin filet is. Ez az\u00e9rt fog felelni, hogy a 8 lehets\u00e9ges fordul\u00e1si eset k\u00f6z\u00fcl kiv\u00e1lassza a megfelel\u0151 fordul\u00e1si k\u00e9pet. Ehhez nyissuk meg a f\u00e1jlt, \u00e9s m\u00e1soljuk bele az al\u00e1bbi k\u00f3dot:</p> <pre><code>fun getTurnImage(\nindex: Int,\nsnake: List&lt;Coordinate&gt;,\nturnUpRightImage: ImageBitmap,\nturnUpLeftImage: ImageBitmap,\nturnDownRightImage: ImageBitmap,\nturnDownLeftImage: ImageBitmap\n): ImageBitmap {\n\nval prev = snake[index - 1]\nval curr = snake[index]\nval next = snake[index + 1]\n\nval prevDirection = Pair(curr.x - prev.x, curr.y - prev.y)\nval nextDirection = Pair(next.x - curr.x, next.y - curr.y)\n\nreturn when {\nprevDirection == Pair(0, -1) &amp;&amp; nextDirection == Pair(1, 0) -&gt; turnUpRightImage // UP to RIGHT\nprevDirection == Pair(0, -1) &amp;&amp; nextDirection == Pair(-1, 0) -&gt; turnUpLeftImage  // UP to LEFT\nprevDirection == Pair(0, 1) &amp;&amp; nextDirection == Pair(1, 0) -&gt; turnDownRightImage // DOWN to RIGHT\nprevDirection == Pair(0, 1) &amp;&amp; nextDirection == Pair(-1, 0) -&gt; turnDownLeftImage // DOWN to LEFT\nprevDirection == Pair(1, 0) &amp;&amp; nextDirection == Pair(0, -1) -&gt; turnDownLeftImage // RIGHT to UP\nprevDirection == Pair(1, 0) &amp;&amp; nextDirection == Pair(0, 1) -&gt; turnUpLeftImage   // RIGHT to DOWN\nprevDirection == Pair(-1, 0) &amp;&amp; nextDirection == Pair(0, -1) -&gt; turnDownRightImage // LEFT to UP\nprevDirection == Pair(-1, 0) &amp;&amp; nextDirection == Pair(0, 1) -&gt; turnUpRightImage  // LEFT to DOWN\nelse -&gt; throw IllegalArgumentException(\"Unexpected turn segment\")\n}\n}\n</code></pre> <p>A f\u00fcggv\u00e9ny szint\u00e9n megkapja az index-et, valamint a k\u00edgy\u00f3nak a list\u00e1j\u00e1t, de ezen fel\u00fcl m\u00e9g 4 k\u00e9pet is. Ezek mindegyike felel kett\u0151-kett\u0151 fordul\u00e1si eset\u00e9rt. Az el\u0151z\u0151 kett\u0151 algoritmussal megeggyez\u0151en a f\u00fcggv\u00e9ny eleje szinte teljesen ugyan az, csak a return v\u00e1ltozik. Ezt otthon egy p\u00e9ld\u00e1n \u00e9rdemes levezetni, hogy mikor melyik hogyan \u00e9rt\u00e9kel\u0151dik ki. :)</p> <p>V\u00e9g\u00fcl most, hogy m\u00e1r megvannak a sz\u00fcks\u00e9ges seg\u00e9df\u00fcggv\u00e9nyek val\u00f3s\u00edtsuk meg a DrawSnake DrawScope-t is.</p> <p>DrawSnake</p> <pre><code>fun DrawScope.drawSnake(\nsnakeHeadImage: ImageBitmap,\ncellSize: Float,\nsnake: List&lt;Coordinate&gt;,\nturnParts: Map&lt;String, ImageBitmap&gt;,\nbodyParts: Map&lt;String, ImageBitmap&gt;\n){\nval size = cellSize.toInt()\nsnake.forEachIndexed { index, coordinate -&gt;\n\nwhen{\n//SnakeHead Draw\n\n\n//SnakeTail Draw\n\n\n//Turn Segment Draw\n\n\nelse -&gt; {\n//Body Part Draw\n\n}\n}\n}\n}\n</code></pre> <p>Ennek a f\u00fcggv\u00e9nynek a seg\u00edts\u00e9g\u00e9vel fogjuk a k\u00edgy\u00f3t kirajzolni. A f\u00fcggv\u00e9ny tov\u00e1bbra is megkapja a k\u00edgy\u00f3 list\u00e1j\u00e1t, emellett megkapja a k\u00edgy\u00f3 fej\u00e9hez tartoz\u00f3 k\u00e9pet, a cellam\u00e9retet, valamint k\u00e9t Map-et amellyek a fordul\u00f3ponthoz tartoz\u00f3 k\u00e9peket tartalmazz\u00e1k, valamint a k\u00edgy\u00f3 testr\u00e9sz\u00e9hez tartoz\u00f3 k\u00e9peket. </p> <p>Itt az esetek sz\u00e1ma 4-re b\u0151v\u00fcl, ugyanis k\u00fcl\u00f6n esetnek sz\u00e1m\u00edt, hogy ha a k\u00edgy\u00f3 fej\u00e9t szeretn\u00e9nk kirajzolni, vagy a fark\u00e1t, vagy a test\u00e9t, vagy egy olyan testr\u00e9szt ami \u00e9ppen fordul\u00f3pontban van. Ez alapj\u00e1n eg\u00e9sz\u00edts\u00fck ki a k\u00f3dunk kommentelt r\u00e9szeit.</p> <p>SnakeHead</p> <p>A k\u00edgy\u00f3 feje akkor k\u00f6vetkezik be, hogy ha az index==0-val. Gondoljuk v\u00e9gig, hogy mi\u00e9rt. Nagyon egyszer\u0171 r\u00e1 a v\u00e1lasz! :)</p> <p><pre><code>index == 0 -&gt;{\ndrawImage(\nimage = snakeHeadImage,\ndstOffset = IntOffset(coordinate.x * size, coordinate.y * size),\ndstSize = IntSize(size, size)\n)\n}\n</code></pre> Ez egy egyszer\u0171 drawImage f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel lesz megval\u00f3s\u00edtva mint kor\u00e1bban m\u00e1r l\u00e1thattuk.</p> <p>SnakeTail</p> <p>A k\u00edgy\u00f3 fej\u00e9hez hasonl\u00f3an itt is a sz\u00e9ls\u0151 indexet kell n\u00e9zn\u00fcnk, csak itt a lista v\u00e9g\u00e9t. Ezt a <code>snake.index-1</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg.</p> <p><pre><code>index == snake.size - 1 -&gt; {\ndrawCircle(\ncolor = Color.Green,\ncenter = Offset(\nx = coordinate.x * size.toFloat() + size / 2,\ny = coordinate.y * size.toFloat() + size / 2\n),\nradius = size / 2f\n)\n}\n</code></pre> Jelen esetben k\u00edgy\u00f3 farkonak csak egy z\u00f6ld k\u00f6rt szeretn\u00e9nk rajzolni, de ez k\u00e9s\u0151bb b\u00e1rmikor lecser\u00e9lhet\u0151 egyedi k\u00e9pre is.</p> <p>IsTurnSegment</p> <p>Mivel ez a f\u00fcggv\u00e9ny egy boolean-t ad vissza \u00e9rt\u00e9kk\u00e9nt, ez\u00e9rt ha true-ra \u00e9rt\u00e9kel\u0151dik ki, akkor az el\u00e1gaz\u00e1s t\u00f6rzs\u00e9be \u00edrt f\u00fcggv\u00e9ny fog v\u00e9grehajt\u00f3dni. Ehhez param\u00e9terk\u00e9nt \u00e1t kell adnunk egy indexet, valamint a k\u00edgy\u00f3 list\u00e1j\u00e1t.</p> <p><pre><code>isTurnSegment(index, snake) -&gt; {\ndrawImage(\nimage = getTurnImage(\nindex,\nsnake,\nturnUpRightImage = turnParts[\"upright\"]!!,\nturnUpLeftImage = turnParts[\"rightdown\"]!!,\nturnDownRightImage = turnParts[\"downright\"]!!,\nturnDownLeftImage = turnParts[\"downleft\"]!!\n),\ndstOffset = IntOffset(coordinate.x * size, coordinate.y * size),\ndstSize = IntSize(size, size)\n)\n}\n</code></pre> A drawImage f\u00fcggv\u00e9ny, illetve a getTurnImage, valamint a Map seg\u00edts\u00e9g\u00e9vel kirajzoljuk a megfelel\u0151 fordul\u00e1si k\u00e9pet. Eml\u00e9kezz\u00fcnk vissza, a getTurnImage f\u00fcggv\u00e9nynek sz\u00fcks\u00e9ge volt az indexre, a k\u00edgy\u00f3 list\u00e1j\u00e1ra, valamint 4 k\u00e9pre. Ezek mindegyike k\u00e9t-k\u00e9t opci\u00f3t fed le a 8 k\u00f6z\u00fcl. Ha ez ki\u00e9rt\u00e9kel\u0151dik akkor a drawImage megkapja a megfelel\u0151 k\u00e9pet majd kirajzolja a k\u00edgy\u00f3 testr\u00e9sz\u00e9t.</p> <p>Body Part</p> <p>Ez az else el\u00e1gaz\u00e1sba ker\u00fcl, hogy ha egyik sem \u00e9rt\u00e9kel\u0151dik ki True-ra. Ez akkor k\u00f6vetkezik be, hogy ha a k\u00edgy\u00f3 adott testr\u00e9sze csak vertik\u00e1lis, vagy horizont\u00e1lis \u00e1llapotban van. \u00cdgy tudunk meggy\u0151z\u0151dni arr\u00f3l, hogy a kor\u00e1bban l\u00e9trehozott <code>getBodyImage</code> f\u00fcggv\u00e9ny nem fog Errort dobni sz\u00e1munkra.</p> <pre><code>drawImage(\nimage = getBodyImage(\nindex,\nsnake,\nbodyVerticalImage = bodyParts[\"up\"]!!,\nbodyHorizontalImage = bodyParts[\"right\"]!!\n),\ndstOffset = IntOffset(coordinate.x * size, coordinate.y * size),\ndstSize = IntSize(size, size)\n)\n</code></pre> <p>Most hogy m\u00e1r minden sz\u00fcks\u00e9ges f\u00fcggv\u00e9ny, DrawScope meg van, el tudjuk kezdeni meg\u00edrni a Game Screen k\u00f3dj\u00e1t.</p> <p>Mivel a j\u00e1t\u00e9kter\u00fclet 20 : 30 egys\u00e9g ez\u00e9rt a j\u00e1t\u00e9k ter\u00fcletnek adni kell egy \u2154-os ratiot. Erre itt egy vizu\u00e1lis demonstr\u00e1ci\u00f3.</p> <p> </p> <p>Ezt a Modifier.aspectRatio(...) seg\u00edts\u00e9g\u00e9vel \u00e9rhetj\u00fck el, amely \u00fagy form\u00e1zza a ter\u00fcletet, hogy egys\u00e9ges legyen, \u00e9s a megadott ar\u00e1ny szerint legyenek a m\u00e9retei.</p> <p>A fenti eredm\u00e9ny sornak nem kell ilyet adni, ugyanis ez csak egy szimpla sor. Ennek el\u00e9g egy .fillMaxWidth() f\u00fcggv\u00e9ny. Ezen a soron egy IconButton-Text-Spacer szerepel amelynek az ar\u00e1nyai rendre: 1-10-1</p> <p>A lenti vez\u00e9rl\u0151gombok elrendez\u00e9s\u00e9t az al\u00e1bbi minta szeml\u00e9lteti:</p> <p> </p> <ul> <li>A k\u00fcls\u0151 bord\u00f3 keretes t\u00e9glalap egy Row. Az \u00f6sszes vez\u00e9rl\u0151 gomb ezen bel\u00fcl van elhelyezve. </li> <li>Ezen bel\u00fcl van 3 Column 1-2-1-es s\u00falyoz\u00e1ssal. \u00cdgy tudjuk el\u00e9rni, hogy a k\u00f6z\u00e9ps\u0151 szekci\u00f3 nagyobb mint a k\u00e9t sz\u00e9ls\u0151. </li> <li>Az els\u0151 \u00e9s az utols\u00f3 oszlopban egy szimpla TextButton Composable van elhelyezve.</li> <li>A k\u00f6z\u00e9ps\u0151 oszlopon bel\u00fcl 3 Row van elhelyezve, ezeken bel\u00fcl a fel\u00e9p\u00edt\u00e9s az al\u00e1bbi m\u00f3don t\u00f6rt\u00e9nik:<ul> <li>Az els\u0151 sorban egy IconButton van elhelyezve</li> <li>A m\u00e1sodik sorban kett\u0151 IconButton van elhelyezve, \u00e9s ezek a sor k\u00e9t sz\u00e9l\u00e9hez vannak rendezve.</li> <li>A harmadik sorban hasonl\u00f3an az els\u0151 sorhoz egyetlen gomb van elhelyezve.</li> </ul> </li> </ul> <pre><code>@Composable\nfun GameScreen(\nstate: SnakeState,\nonEvent: (SnakeEvent) -&gt; Unit,\nnavController: NavHostController\n) {\nval imageBitmap = ImageBitmap.imageResource(id = R.mipmap.food)\nval snakeHeadBitmap = when(state.direction){\nDirection.DOWN-&gt; ImageBitmap.imageResource(id = R.mipmap.snakehead1)\nDirection.LEFT-&gt; ImageBitmap.imageResource(id = R.mipmap.snakehead2)\nDirection.UP -&gt; ImageBitmap.imageResource(id = R.mipmap.snakehead3)\nDirection.RIGHT-&gt; ImageBitmap.imageResource(id = R.mipmap.snakehead4)\n}\n\nval turnPartsMap = mapOf(\nPair(\"upright\", ImageBitmap.imageResource(id = R.mipmap.upright)),\nPair(\"rightdown\", ImageBitmap.imageResource(id = R.mipmap.rightdown)),\nPair(\"downright\", ImageBitmap.imageResource(id = R.mipmap.downright)),\nPair(\"downleft\", ImageBitmap.imageResource(id = R.mipmap.downleft))\n)\n\nval bodyPartsMap = mapOf(\nPair(\"up\", ImageBitmap.imageResource(id = R.mipmap.bodyup)),\nPair(\"down\", ImageBitmap.imageResource(id = R.mipmap.bodydown)),\nPair(\"left\", ImageBitmap.imageResource(id = R.mipmap.bodyleft)),\nPair(\"right\", ImageBitmap.imageResource(id = R.mipmap.bodyright))\n)\n\n\nColumn (\nmodifier = Modifier\n.fillMaxSize()\n.background(Color.Gray),\n) {\n//Score and Back Button Row\n\n\n//Canvas\n\n\n//Controllers\n\n}\n}\n</code></pre> <p>A GameScreen k\u00f3d skeletonja az al\u00e1bbi k\u00f3dblokkban l\u00e1that. A k\u00f6vetkez\u0151kben ezt fogjuk kieg\u00e9sz\u00edteni az elv\u00e1rtaknak megfelel\u0151en.</p> <p>A Composable f\u00fcggv\u00e9nyen bel\u00fcl l\u00e1that\u00f3 k\u00e9t Map, illetve egy ImageBitmap v\u00e1ltoz\u00f3. Ezekre l\u00e9tezik szebb megold\u00e1s, de a k\u00f6nnyebb meg\u00e9rt\u00e9s \u00e9rdek\u00e9ben ezt v\u00e1lasztottuk. </p> <p>Score and Back Button Row</p> <p><pre><code>Row (\nmodifier = Modifier\n.fillMaxWidth()\n.background(Color.Gray),\nhorizontalArrangement = Arrangement.Center,\nverticalAlignment = Alignment.CenterVertically\n){\nIconButton(\nonClick = {\n//TODO: Navigate back\n},\nmodifier = Modifier.weight(1f)\n) {\nIcon(\nimageVector = Icons.AutoMirrored.Filled.ArrowBack,\ncontentDescription = \"\"\n)\n}\nText(\ntext = when {\nstate.gameState == GameState.PAUSED -&gt; {\n\"Paused\"\n}\nstate.isGameOver -&gt; {\n\"Game Over\"\n}\nelse -&gt; {\n\"Score: ${state.snake.size - 1}\"\n}\n},\nfontFamily = FontFamily(Font(R.font.pixelfont, style = FontStyle.Normal)),\ncolor = Color.Black,\nfontSize = 30.sp,\nmodifier = Modifier\n.weight(10f),\ntextAlign = TextAlign.Center\n)\nSpacer(modifier = Modifier.weight(1f))\n}\n</code></pre> Mint m\u00e1r kor\u00e1bban is eml\u00edtett\u00fck, ez a sor h\u00e1rom elemet fog tartalmazni. Egy IconButton-t, egy Text-et illetve egy Spacert 1-10-1-es s\u00falyoz\u00e1si ar\u00e1nyban. Ezt a <code>modifier.weight(..)</code>seg\u00edts\u00e9g\u00e9vel tudjuk el\u00e9rni. Az IconButton-nak a m\u0171k\u00f6d\u00e9s\u00e9t m\u00e1r most be is \u00e1ll\u00edthatjuk, hogy a megnyom\u00e1s\u00e1t k\u00f6vet\u0151en a f\u0151k\u00e9perny\u0151re ker\u00fclj\u00fcnk:</p> <p><pre><code>onClick = {\nonEvent(SnakeEvent.ResetGame)\nnavController.navigate(\"mainscreen\") {\npopUpTo(\"mainscreen\") {\ninclusive = true\n}\n}\n}\n</code></pre> Sz\u00fcks\u00e9g\u00fcnk van arra, hogy a j\u00e1t\u00e9k \u00e1llapot\u00e1t alaphelyzetbe \u00e1ll\u00edtsuk, ezt az onClick els\u0151 sor\u00e1val tehetj\u00fck meg, valamint a <code>navController.navigate(..){..}</code> lambda seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtjuk, hogy ha a felhaszn\u00e1l\u00f3 vissza gombot nyomna a f\u0151k\u00e9perny\u0151n ezut\u00e1n, ne tudjon visszanavig\u00e1lni a j\u00e1t\u00e9k k\u00e9perny\u0151j\u00e9re. Ezt a <code>popUpTo(..){inclusive..}</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg.</p> <p>A Text felirata az al\u00e1bbiakt\u00f3l f\u00fcgg:</p> <ul> <li>Ha gameState == IDLE &amp;&amp; countBack &gt; 0 -&gt; A visszasz\u00e1ml\u00e1l\u00f3t \u00edrja ki. (Ezzel k\u00e9s\u0151bb foglalkozunk, ezt m\u00e9g nem kell beleimplement\u00e1lni)</li> <li>Ha gameState == PAUSED -&gt; Paused felirat legyen</li> <li>Ha gameState == GameOver -&gt; Game Over felirat legyen</li> <li>M\u00e1sk\u00e9pp -&gt; Score: {score}<ul> <li>A scoret, a k\u00edgy\u00f3 hossz\u00e1b\u00f3l tudjuk kisz\u00e1m\u00edtani.</li> </ul> </li> </ul> <p>Canvas</p> <p><pre><code>Canvas(modifier = Modifier\n.background(Color.Black)\n.aspectRatio(2 / 3f)\n){\ndrawBoard(\ncellSize = size.width / 20,\ncellColor = Color.Black,\nborderCellColor = Color.DarkGray,\ngridWidth = state.xSize,\ngridHeight = state.ySize\n)\ndrawFood(\nfoodImage = imageBitmap,\ncellSize = size.width.toInt() / 20,\ncoordinate = state.food\n)\ndrawSnake(\nsnakeHeadImage = snakeHeadBitmap,\ncellSize = size.width / 20,\nsnake = state.snake,\nturnParts = turnPartsMap,\nbodyParts = bodyPartsMap\n)\n}\n</code></pre> A Canvas-hez tartoz\u00f3 k\u00f3dr\u00e9szlet meglehet\u0151ssen kicsi, viszont eml\u00e9kezz\u00fcnk vissza, em\u00f6g\u00f6tt egy nagyon sok f\u00fcggv\u00e9nyt, DrawScopet defini\u00e1ltunk :)!</p> <p>A kor\u00e1bban meg\u00edrt DrawScope-k haszn\u00e1lat\u00e1val el\u0151sz\u00f6r kirajzoljuk a j\u00e1t\u00e9k p\u00e1ly\u00e1t, majd erre r\u00e1rajzoljuk az alm\u00e1t, \u00e9s ut\u00e1na a k\u00edgy\u00f3t. </p> <p>SORREND!</p> <p>Nagyon fontos a sorrend, ugyanis ezek az elemek egym\u00e1st fedik, \u00e9s ha a p\u00e1lya rajzol\u00e1st rakn\u00e1nk legutolj\u00e1ra, nem l\u00e1tn\u00e1nk a t\u00f6bbi elemet ami f\u00f6l\u00f6tte van!</p> <p>Hogy ha ezzel megvagyunk k\u00f6vetkez\u0151nek megval\u00f3s\u00edtjuk a Controller r\u00e9sz\u00e9t. Ez egy hosszabb k\u00f3d lesz, ez\u00e9rt el\u0151re is eln\u00e9z\u00e9st k\u00e9r\u00fcnk!</p> <pre><code>Row(\nmodifier = Modifier\n.fillMaxSize()\n.background(Color.Gray),\n) { //Column 1\n\n//Column 2\n\n//Column 3\n\n}\n</code></pre> <ul> <li> <p>Column 1</p> <ul> <li>Horizontal, Vertical - Center</li> <li>Modifier<ul> <li>1-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes teret (fillMaxSize)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Column(\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center,\nmodifier = Modifier\n.weight(1f)\n.fillMaxSize()\n.border(1.dp, Color.Black)\n) {\n\n//TextButton 1\n\n}\n</code></pre></li> </ul> </li> </ul> </li> <li> <p>TextButton 1</p> <ul> <li>onClick:<ul> <li>IDLE -&gt; Start Game</li> <li>STARTED -&gt; Pause Game</li> <li>PAUSED -&gt; Start Game (Resume)</li> </ul> </li> <li>Modifier<ul> <li>T\u00f6ltse ki a teljes teret <pre><code>TextButton(\nonClick = {\nwhen (state.gameState) {\nGameState.IDLE -&gt; onEvent(SnakeEvent.StartGame)\nGameState.STARTED -&gt; onEvent(SnakeEvent.PauseGame)\nGameState.PAUSED -&gt; onEvent(SnakeEvent.StartGame)\n}\n},\nModifier.fillMaxSize()\n) {\nText(\ntext = when (state.gameState) {\nGameState.IDLE -&gt; \"Start\"\nGameState.STARTED -&gt; \"Pause\"\nGameState.PAUSED -&gt; \"Resume\"\n},\nfontSize = 30.sp,\nfontFamily = FontFamily(\nFont(\nR.font.pixelfont,\nstyle = FontStyle.Normal\n)\n),\ntextAlign = TextAlign.Center\n)\n}    </code></pre></li> </ul> </li> </ul> </li> <li> <p>Column 2</p> <ul> <li>Horizontal, Vertical - Center</li> <li>Modifier<ul> <li>2-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes teret (fillMaxSize)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Column(\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center,\nmodifier = Modifier\n.weight(2f)\n.fillMaxSize()\n.border(1.dp, Color.Black)\n) {\n//Row 2.1\n\n//Row 2.2\n\n//Row 2.3\n\n}\n</code></pre></li> </ul> </li> </ul> </li> </ul> <p>L\u00e1that\u00f3, hogy a kor\u00e1bban besz\u00fart k\u00e9ppel megegyeznek a kommentek, ide kell majd megval\u00f3s\u00edtani az el\u0151z\u0151h\u00f6z hasonl\u00f3an a t\u00f6bbi Composable elemeket. Folytassuk a 3 Sor besz\u00far\u00e1s\u00e1val a k\u00f6vetkez\u0151 k\u00e9ppen:</p> <ul> <li> <p>Row 2.1</p> <ul> <li>Vertical, Horizontal - Center</li> <li>Modifier<ul> <li>1-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes sz\u00e9less\u00e9get (fillMaxWidth)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Row(\nverticalAlignment = Alignment.CenterVertically,\nhorizontalArrangement = Arrangement.Center,\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.border(1.dp, Color.Black)\n) {\n//IconButton 2.1.1\n\n}\n</code></pre></li> </ul> </li> </ul> </li> <li> <p>IconButton 2.1.1</p> <ul> <li>onClick:<ul> <li>Ir\u00e1nyv\u00e1lt\u00e1s felfel\u00e9 (<code>onEvent(SnakeEvent.ChangeDir(Direction.UP))</code>)</li> </ul> </li> <li>Modifier:<ul> <li>H\u00e1tt\u00e9r legyen sz\u00fcrke (<code>.background(Color.Gray)</code>) <pre><code>IconButton(\nonClick = {\nonEvent(SnakeEvent.ChangeDir(Direction.UP))\n},\nmodifier = Modifier\n.background(Color.Gray)\n) {\nIcon(\nmodifier = Modifier\n.size(60.dp, 60.dp)\n.rotate(0f),\ntint = Color.Black,\npainter = painterResource(id = R.mipmap.arrow),\ncontentDescription = null\n)\n}\n</code></pre> Az IconButton t\u00f6rzs\u00e9ben egy Icon Composablet helyez\u00fcnk el, melynek a seg\u00edts\u00e9g\u00e9vel megjelen\u00edtj\u00fck a megfelel\u0151 vez\u00e9rl\u0151ikont. Fontos, hogy egyetlen k\u00e9pet haszn\u00e1lunk a n\u00e9gy vez\u00e9rl\u0151 Icon-ra, ugyanis a <code>Modifier.rotate(..)</code> seg\u00edts\u00e9g\u00e9vel el tudjuk forgatni a megfelel\u0151 ir\u00e1nyba \u0151ket.</li> </ul> </li> </ul> </li> <li> <p>Row 2.2</p> <ul> <li>Vertical - Center</li> <li>Horizontal - SpaceBetween (Ennek k\u00f6sz\u00f6nhet\u0151en a benne l\u00e9v\u0151 2 elem a Row k\u00e9t sz\u00e9l\u00e9re ker\u00fcl)</li> <li>Modifier:<ul> <li>1-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes sz\u00e9less\u00e9get (fillMaxWidth)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Row(\nverticalAlignment = Alignment.CenterVertically,\nhorizontalArrangement = Arrangement.SpaceBetween,\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.border(1.dp, Color.Black)\n) {\n\n//IconButton 2.2.1\n\n//IconButton 2.2.2\n\n}\n</code></pre></li> </ul> </li> </ul> </li> <li> <p>IconButton 2.2.1</p> <ul> <li>onClick:<ul> <li>Ir\u00e1nyv\u00e1lt\u00e1s balra (<code>onEvent(SnakeEvent.ChangeDir(Direction.LEFT))</code>)</li> </ul> </li> <li>Modifier:<ul> <li>H\u00e1tt\u00e9r legyen sz\u00fcrke (<code>.background(Color.Gray)</code>) <pre><code>IconButton(\nonClick = {\nonEvent(SnakeEvent.ChangeDir(Direction.LEFT))\n},\nmodifier = Modifier\n.background(Color.Gray)\n) {\nIcon(\nmodifier = Modifier\n.size(60.dp, 60.dp)\n.rotate(-90f),\ntint = Color.Black,\npainter = painterResource(id = R.mipmap.arrow),\ncontentDescription = null\n)\n}\n</code></pre> Itt l\u00e1that\u00f3, hogy az IconButton t\u00f6rzs\u00e9ben l\u00e9v\u0151 Icon-nak ugyanazt a k\u00e9pet adtuk mint az el\u0151z\u0151 esetben, csak egy -90\u00b0-os forgat\u00e1st r\u00e1raktunk m\u00e9g, ezzel el\u00e9rve azt, hogy balra el legyen forgatva.</li> </ul> </li> </ul> </li> <li> <p>IconButton 2.2.2</p> <ul> <li>onClick:<ul> <li>Ir\u00e1nyv\u00e1lt\u00e1s jobbra (<code>onEvent(SnakeEvent.ChangeDir(Direction.RIGHT))</code>)</li> </ul> </li> <li>Modifier:<ul> <li>H\u00e1tt\u00e9r legyen sz\u00fcrke (<code>.background(Color.Gray)</code>) <pre><code>IconButton(\nonClick = {\nonEvent(SnakeEvent.ChangeDir(Direction.RIGHT))\n},\nmodifier = Modifier\n.background(Color.Gray)\n) {\nIcon(\nmodifier = Modifier\n.size(60.dp, 60.dp)\n.rotate(90f),\ntint = Color.Black,\npainter = painterResource(id = R.mipmap.arrow),\ncontentDescription = null\n)\n}\n</code></pre> Az el\u0151z\u0151h\u00f6z hasonl\u00f3an ugyan\u00fagy megkapta az arrow .png k\u00e9pet, csak itt egy +90\u00b0-os forgat\u00e1st kapott, \u00edgy jobbra n\u00e9z a vez\u00e9rl\u0151nk.</li> </ul> </li> </ul> </li> <li> <p>Row 2.3</p> <ul> <li>Vertical, Horizontal - Center</li> <li>Modifier:<ul> <li>1-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes sz\u00e9less\u00e9get (fillMaxWidth)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Row(\nverticalAlignment = Alignment.CenterVertically,\nhorizontalArrangement = Arrangement.Center,\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.border(1.dp, Color.Black)\n) {\n\n//IconButton 2.3.1\n\n}\n</code></pre></li> </ul> </li> </ul> </li> <li> <p>IconButton 2.3.1</p> <ul> <li>onClick:<ul> <li>Ir\u00e1nyv\u00e1lt\u00e1s lefel\u00e9 (<code>onEvent(SnakeEvent.ChangeDir(Direction.DOWN))</code>)</li> </ul> </li> <li>Modifier:<ul> <li>H\u00e1tt\u00e9r legyen sz\u00fcrke (<code>.background(Color.Gray)</code>) <pre><code>IconButton(\nonClick = {\nonEvent(SnakeEvent.ChangeDir(Direction.DOWN))\n},\nmodifier = Modifier\n.background(Color.Gray),\n\n) {\nIcon(\nmodifier = Modifier\n.size(60.dp, 60.dp)\n.rotate(180f),\ntint = Color.Black,\npainter = painterResource(id = R.mipmap.arrow),\ncontentDescription = null\n)\n}\n</code></pre> V\u00e9g\u00fcl az utols\u00f3 vez\u00e9rl\u0151gombnak is \u00e1tadjuk a k\u00e9pet, egy 180\u00b0-os elforgat\u00e1ssal. M\u00e1r csak az utols\u00f3 oszlop van h\u00e1tra, \u00e9s v\u00e9gz\u00fcnk is a vez\u00e9rl\u0151gombokkal.</li> </ul> </li> </ul> </li> <li> <p>Column 3</p> <ul> <li>Vertical, Horizontal - Center</li> <li>Modifier<ul> <li>1-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes teret (fillMaxSize)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Column(\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center,\nmodifier = Modifier\n.weight(1f)\n.fillMaxSize()\n.border(1.dp, Color.Black)\n) {\n//TextButton 3.2\n\n}\n</code></pre></li> </ul> </li> </ul> </li> <li> <p>TextButton 3.2</p> <ul> <li>onClick:<ul> <li>Restart Game (<code>onEvent(SnakeEvent.ResetGame)</code>)</li> </ul> </li> <li>Modifier:<ul> <li>T\u00f6ltse ki a teljes teret (fillMaxSize) <pre><code>TextButton(\nonClick = {\nonEvent(SnakeEvent.ResetGame)\n},\nModifier.fillMaxSize()\n) {\nText(\ntext = if (state.isGameOver) \"Restart\" else \"New Game\",\nfontSize = 30.sp,\nfontFamily = FontFamily(\nFont(\nR.font.pixelfont,\nstyle = FontStyle.Normal\n)\n),\ntextAlign = TextAlign.Center\n)\n}\n</code></pre> A TextButton t\u00f6rzs\u00e9ben elhelyezett Text Composable k\u00e9t \u00e9rt\u00e9ket fog megjelen\u00edteni az \u00e1llapott\u00f3l f\u00fcgg\u0151en. Hogy ha Game Over \u00e1llapotban van a j\u00e1t\u00e9ko akkor Game Over felirat, m\u00e1sk\u00e9pp pedig New Game feliratot.</li> </ul> </li> </ul> </li> </ul> <p>Ezzel el is k\u00e9sz\u00fclt a vez\u00e9rl\u0151nk teljesen. Most m\u00e1r csak p\u00e1r l\u00e9p\u00e9s van h\u00e1tra, hogy tesztelhess\u00fck a teljes alkalmaz\u00e1st az \u00faj UI-val, illetve a Snake logik\u00e1val. Ehhez m\u00f3dos\u00edtsuk a <code>NavGraph</code>-ot, \u00fagy hogy param\u00e9terk\u00e9nt hozz\u00e1vesz\u00fcnk m\u00e9g 2 \u00e9rt\u00e9ket. Ezek a <code>SnakeState</code>, illetve a <code>SnakeViewModel</code> param\u00e9terek lesznek:</p> <pre><code>@Composable\nfun NavGraph(\nmodifier: Modifier = Modifier,\nnavController: NavHostController = rememberNavController(),\nstartDestination: String = \"mainscreen\",\nmainViewModel: MainViewModel = viewModel(),\nstate: SnakeState,\nsnakeViewModel: SnakeViewModel\n) {\n//...\n}\n</code></pre> <p>Ezut\u00e1n a <code>NavHost</code> Composable belsej\u00e9ben l\u00e9v\u0151 <code>gameScreen</code>-re mutat\u00f3 ir\u00e1nyt m\u00f3dos\u00edtsuk az al\u00e1bbiak szerint:</p> <ul> <li>K\u00e9t v\u00e1ltoz\u00f3t l\u00e9tre kell hoznunk, amely a <code>name</code> illetve a <code>difficulty</code> \u00e9rt\u00e9ket fogja t\u00e1rolni. Ezeket a v\u00e1ltoz\u00f3kat ki tudjuk szedni a navArgumentekb\u0151l az al\u00e1bbi m\u00f3don:<ul> <li><code>it.arguments?.getString(...)</code></li> </ul> </li> <li>Hogy ha meg van a k\u00e9t v\u00e1ltoz\u00f3nk, azoknak a seg\u00edts\u00e9g\u00e9vel be kell \u00e1ll\u00edtanunk a viewModel \u00e9rt\u00e9keit a k\u00f6vetkez\u0151k szerint:<ul> <li>setPlayerName - name</li> <li>setGameDifficulty - difficulty</li> </ul> </li> </ul> <p>Erre seg\u00edts\u00e9g\u00fcl adunk egy k\u00f3dot, amivel k\u00f6nnyen meg tudj\u00e1tok csin\u00e1lni.</p> <pre><code>composable(\n\"gameScreen/{playerName}/{difficulty}\",\narguments = listOf(\nnavArgument(\"playerName\") { type = NavType.StringType },\nnavArgument(\"difficulty\") { type = NavType.StringType }\n)\n){\nmainViewModel.updateTitle(\"\", false)\nval name = it.arguments?.getString(\"playerName\") ?: \"\"\nval difficulty = it.arguments?.getString(\"difficulty\")?.toGameDifficulty() ?: GameDifficulty.EASY\nsnakeViewModel.setPlayerName(name)\nsnakeViewModel.setGameDifficulty(difficulty)\nGameScreen(\nnavController = navController,\nstate = state,\nonEvent = snakeViewModel::onEvent\n)\n}\n</code></pre> <p>A m\u00f3dos\u00edtott ir\u00e1ny az al\u00e1bbi m\u00f3don n\u00e9z ki. J\u00f3l l\u00e1thato, hogy a <code>composable(..){..}</code> t\u00f6rzs\u00e9ben a v\u00e1ltoz\u00f3kban elt\u00e1roljuk az \u00e9rt\u00e9keket, majd ezek seg\u00edts\u00e9g\u00e9vel a snakeViewModel \u00e9rt\u00e9keit be\u00e1ll\u00edtjuk, v\u00e9g\u00fcl \u00e1tadjuk a sz\u00fcks\u00e9ges param\u00e9tereket a GameScreen Composable f\u00fcggv\u00e9ny\u00fcnknek. Azonban sz\u00fcks\u00e9g\u00fcnk van egy saj\u00e1t f\u00fcggv\u00e9nyre, amely a String-es j\u00e1t\u00e9kneh\u00e9zs\u00e9get GameDifficulty Enum Class-ba alak\u00edtja \u00e1t. Ehhez vegy\u00fcnk fel egy \u00faj f\u00fcggv\u00e9nyt a <code>StartGameScreen</code> f\u00e1jlunkba, az Enum Class-unk al\u00e1:</p> <pre><code>fun String.toGameDifficulty(): GameDifficulty {\nreturn when(this){\n\"EASY\" -&gt; GameDifficulty.EASY\n\"MEDIUM\" -&gt; GameDifficulty.MEDIUM\n\"HARD\" -&gt; GameDifficulty.HARD\nelse -&gt; GameDifficulty.EASY\n}\n}\n</code></pre> <p>Ez egy egyszer\u0171 f\u00fcggv\u00e9ny, amely egy String-en h\u00edvhat\u00f3 meg, \u00e9s ezt a String-et \u00e1talak\u00edtja az oszt\u00e1ly egy elem\u00e9v\u00e9 a Stringt\u0151l f\u00fcgg\u0151en.</p> <p>Ahhoz, hogy az alkalmaz\u00e1sunk hiba n\u00e9lk\u00fcl futtathat\u00f3 legyen, m\u00e9g m\u00f3dos\u00edtanunk kell a <code>MainNavScreen</code>, illetve a <code>MainActivity</code> Kotlin Filekat, ugyanis a MainActivity-b\u0151l \u00e1t kell adnunk a snakeViewModel-t eg\u00e9sszen a NavHost-ig, amit \u00fagy tudunk egyel\u0151re el\u00e9rni, hogy egyes\u00e9vel \u00e1tadjuk param\u00e9terk\u00e9nt. Ehhez m\u00f3dos\u00edtsuk a <code>MainNavScreen</code>-t a k\u00f6vetkez\u0151k szerint:</p> <pre><code>@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun MainNavScreen(\nmainViewModel: MainViewModel,\nsnakeViewModel: SnakeViewModel\n){\n\nval title by mainViewModel.title.observeAsState(\"Snake\")\nval navigationLambda by mainViewModel.navigate.observeAsState()\nval showBackArrow by mainViewModel.showBackArrow.observeAsState(false)\n\nScaffold(\n//...\n) { innerPadding -&gt;\n\nval navController = rememberNavController()\nval state = snakeViewModel.state.collectAsStateWithLifecycle()\n\nNavGraph(\nmodifier = Modifier.padding(innerPadding),\nnavController = navController,\nsnakeViewModel = snakeViewModel,\nstate = state.value\n)\n}\n}\n</code></pre> <p>Majd v\u00e9g\u00fcl a m\u00f3dos\u00edt\u00e1st v\u00e9grehajtjuk a <code>MainActivity</code>-n is.</p> <pre><code>class MainActivity : ComponentActivity() {\nprivate val mainViewModel: MainViewModel by viewModels()\nprivate val snakeViewModel: SnakeViewModel by viewModels()\noverride fun onCreate(savedInstanceState: Bundle?) {\n//...\n}\n}\n</code></pre> <pre><code>MainNavScreen(\nmainViewModel = mainViewModel,\nsnakeViewModel = snakeViewModel\n)\n</code></pre> <p>Ha mindent j\u00f3l csin\u00e1ltunk, a j\u00e1t\u00e9knak m\u0171k\u00f6dnie kellene az elind\u00edt\u00e1s ut\u00e1n! :)</p> <p>Pr\u00f3b\u00e1lj meg \u00f6sszeszedni 5 pontot, majd lescreenshotolni \u00e9s azt beadni feladatmegold\u00e1sk\u00e9nt!</p> <p>BEADAND\u00d3 (4 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151 k\u00e9pet a j\u00e1t\u00e9kr\u00f3l, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt oldal, valah\u00e1ny pont a j\u00e1t\u00e9k sor\u00e1n vagy a gameOver felirat (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#high-scores-database-2-pont","title":"High Scores / Database (2 pont)","text":"<p>A k\u00f6vetkez\u0151 feladatban az adab\u00e1zis r\u00e9sz\u00e9t fogjuk megval\u00f3s\u00edtani az alkalmaz\u00e1snak, ennek a seg\u00edts\u00e9g\u00e9vel tudjuk el\u00e9rni, hogy a j\u00e1t\u00e9k v\u00e9g\u00e9n, egy adatb\u00e1zisba elments\u00fck a j\u00e1t\u00e9k adatait (N\u00e9v, pont, neh\u00e9zs\u00e9g form\u00e1ban). Ehhez sz\u00fcks\u00e9g\u00fcnk lesz egy Dao-ra, egy DataBase-re, illetve egy Entity-re is. Ezeknek a seg\u00edts\u00e9g\u00e9vel fogjuk elv\u00e9gezni az adatok t\u00e1rol\u00e1s\u00e1t, valamint az adatb\u00e1zis adatainak a m\u00f3dos\u00edt\u00e1s\u00e1t.</p> <p>El\u0151sz\u00f6r hozzunk l\u00e9tre egy \u00faj Packaget a gy\u00f6k\u00e9rmapp\u00e1ban <code>data</code> n\u00e9ven. Kor\u00e1bban a labor elej\u00e9n m\u00e1r hozz\u00e1adtuk a sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9geket, \u00edgy most k\u00f6nnyen elkezdhetj\u00fck a k\u00f3dunk meg\u00edr\u00e1s\u00e1t, illetve az adatb\u00e1zis fel\u00e9p\u00edt\u00e9s\u00e9t. </p>"},{"location":"laborok/snake/#dao","title":"Dao","text":"<p>A k\u00f6vetkez\u0151 l\u00e9p\u00e9s, hogy az entit\u00e1shoz kapcsol\u00f3d\u00f3 alapm\u0171veleteket is t\u00e1mogassuk a Room k\u00f6nyvt\u00e1r seg\u00edts\u00e9g\u00e9vel. Ezt egy DAO (Data Access Object) komponenssel fogjuk megval\u00f3s\u00edtani. A DAO egy - szint\u00e9n nem csak Android alatt alkalmazott - tervez\u00e9si minta, amelynek a l\u00e9nyege, hogy az egy entit\u00e1shoz kapcsol\u00f3d\u00f3 \u00f6sszes adatb\u00e1zism\u0171veleteket egy komponensbe gy\u0171jtj\u00fck \u00f6ssze. Ez egyr\u00e9szt j\u00f3l \u00e1ttekinthet\u0151, illetve ha az adatb\u00e1zist le szeretn\u00e9nk cser\u00e9lni m\u00e1s technol\u00f3gi\u00e1ra, akkor elvileg elegend\u0151 lenne a DAO komponens m\u00f3dos\u00edt\u00e1sa, b\u00e1r ilyen jelleg\u0171 m\u00f3dos\u00edt\u00e1sra manaps\u00e1g \u00e1ltal\u00e1ban nincs sz\u00fcks\u00e9g.</p> <p>Hozzunk l\u00e9tre egy <code>data.dao</code> package-et, \u00e9s ebben hozzunk l\u00e9tre egy <code>TopScoresDao</code> interfacet, majd vegy\u00fck fel az al\u00e1bbit:</p> <pre><code>@Dao\ninterface TopScoreDao {\n@Query(\"SELECT * FROM topscore ORDER BY score DESC\")\nfun getAll(): Flow&lt;List&lt;TopScore&gt;&gt;\n\n@Insert\nsuspend fun insert(topScore: TopScore)\n\n@Update\nsuspend fun update(topScore: TopScore)\n}\n</code></pre> <p>L\u00e1thatjuk, hogy egyr\u00e9szt maga az interf\u00e9sz is meg van jel\u00f6lve, mint DAO komponens, m\u00e1sr\u00e9szt az egyes m\u0171veleteken is Room annot\u00e1ci\u00f3k vannak. A Room az annot\u00e1ci\u00f3b\u00f3l, illetve az annot\u00e1lt met\u00f3dus param\u00e9tereib\u0151l \u00e9s visszat\u00e9r\u00e9si \u00e9rt\u00e9k\u00e9b\u0151l ki tudja k\u00f6vetkeztetni a sz\u00e1nd\u00e9kunkat.</p> <p>Ezut\u00e1n egy repository komponenst k\u00e9sz\u00edt\u00fcnk. Ez n\u00e9mileg \u00fagy t\u0171nik, mintha nem adna hozz\u00e1 t\u00fal sokat a DAO-hoz, azonban fontos c\u00e9lja, hogy a fels\u0151bb r\u00e9tegeket f\u00fcggetlen\u00edtse a Roomt\u00f3l, hogy ne k\u00f6zvetlen att\u00f3l f\u00fcggjenek. </p>"},{"location":"laborok/snake/#entity","title":"Entity","text":"<p>K\u00e9sz\u00edts\u00fcnk el egy <code>data.entity</code> Packaget, majd ebben hozzunk l\u00e9tre egy \u00faj Kotlin File-t <code>TopScore</code> n\u00e9ven, majd vegy\u00fck fel az al\u00e1bbi k\u00f3dot:</p> <pre><code>@Entity(tableName = \"topscore\")\ndata class TopScore(\n@ColumnInfo(name = \"id\") @PrimaryKey(autoGenerate = true) var id: Long? = null,\n@ColumnInfo(name = \"name\") var name: String,\n@ColumnInfo(name = \"difficulty\") var difficulty: String,\n@ColumnInfo(name = \"score\") var score: Int\n)\n</code></pre> <p>L\u00e1that\u00f3, hogy itt is haszn\u00e1ltuk a Room Annot\u00e1ci\u00f3kat, m\u00e9gpedig a <code>ColumnInfo</code>-t. Ennek a seg\u00edts\u00e9g\u00e9vel hozunk l\u00e9tre \u00faj oszlopokat, az adott t\u00e1bl\u00e1ban, majd megadjuk az egyes oszlopok neveit. Az els\u0151 oszlopra r\u00e1rakjuk a <code>PrimaryKey</code> annot\u00e1ci\u00f3t, amellyel megmondjuk az adatb\u00e1zisnak, hogy automatikussan gener\u00e1ljon egy azonos\u00edt\u00f3t az egyes elemeknek.</p>"},{"location":"laborok/snake/#database","title":"DataBase","text":"<p>Utols\u00f3 l\u00e9p\u00e9sk\u00e9nt hozzuk l\u00e9tre a DataBase oszt\u00e1lyt. Ehhez hozzuk l\u00e9tre az al\u00e1bbi Packaget - <code>data.database</code>, majd ebben egy <code>TopScoreDatabase</code> Kotlin file-t \u00e9s \u00edrjuk bele az al\u00e1bbit:</p> <p><pre><code>@Database(entities = [TopScore::class], version = 1)\nabstract class TopScoreDatabase : RoomDatabase() {\nabstract fun topScoreDao(): TopScoreDao\n\ncompanion object{\n@Volatile\nprivate var INSTANCE: TopScoreDatabase? = null\n\nfun getDatabase(context: Context): TopScoreDatabase{\nreturn INSTANCE ?: synchronized(this){\nRoom.databaseBuilder(context, TopScoreDatabase::class.java, \"topscore_database\")\n.fallbackToDestructiveMigration()\n.build()\n.also { INSTANCE = it }\n}\n}\n}\n}\n</code></pre> Ez az oszt\u00e1ly egy Abstract oszt\u00e1ly lesz, \u00e9s szint\u00e9n megkapja a Room egy annot\u00e1ci\u00f3j\u00e1t, m\u00e9gpedig a <code>Database</code> annot\u00e1ci\u00f3t. Ez fogja jelezni, hogy itt egy adatb\u00e1zis helyezkedik el az annot\u00e1ci\u00f3 alatt. Az adatb\u00e1zisnak egy verzi\u00f3t is adnunk kell, erre az\u00e9rt van sz\u00fcks\u00e9g, hogy ha k\u00e9s\u0151bb v\u00e1ltoztatjuk a fel\u00e9p\u00edt\u00e9s\u00e9t, akkor itt lehessen \u00faj verzi\u00f3t megadni. Ahhoz, hogy tudjuk haszn\u00e1lni az adatb\u00e1zisunkat m\u00f3dos\u00edtani kell egy p\u00e1r f\u00e1jlt. Ezek rendre:</p> <ol> <li>Application.kt</li> <li>MainActivity.kt</li> <li>SnakeViewModel.kt</li> <li>AndroidManifest.xml</li> <li>AppModule.kt</li> </ol> <p>Ezek k\u00f6z\u00fcl kett\u0151 m\u00e9g nem lett l\u00e9trehozva. Ezekre az\u00e9rt van sz\u00fcks\u00e9g, hogy haszn\u00e1lhassuk a Dependency Injectiont. Els\u0151 sorban m\u00f3dos\u00edtsuk a <code>SnakeViewModel.kt</code> f\u00e1jlt, \u00fagy, hogy haszn\u00e1lja a HiltViewModel annot\u00e1ci\u00f3t. Ehhez nyissuk meg a ViewModel oszt\u00e1lyunkat, \u00e9s m\u00f3dos\u00edtsuk a k\u00f6vetkez\u0151k szerint:</p> <pre><code>@HiltViewModel\nclass SnakeViewModel @Inject constructor(\nprivate val topScoreDao: TopScoreDao\n): ViewModel(){\n\n//Top Scores\nval topScores: Flow&lt;List&lt;TopScore&gt;&gt; = topScoreDao.getAll()\n\n//PlayerName (Delete Previous)\nprivate val _playerName = MutableStateFlow(\"\")\nval playerName: StateFlow&lt;String&gt; = _playerName.asStateFlow()\n\n//...\n\n//Set Player Name\nfun setPlayerName(name: String){\n_playerName.value = name\n}\n\n\n//..\n\n//Game Update\nprivate fun updateGame(state: SnakeState) : SnakeState {\n//...\n\n//GAME OVER - SNAKE HIT ITSELF OR WALL\nif (\n//...\n){\n//DATABASE INSERT\nviewModelScope.launch {\ntopScoreDao.insert(\nTopScore(\nname = playerName.value,\nscore = state.snake.size -1,\ndifficulty = gameDifficulty.value.toString()\n)\n)\n}\nreturn state.copy(isGameOver = true)\n}\n\n//...\n}\n//...\n\n}\n</code></pre> <p>A fenti k\u00f3dban, m\u00f3dos\u00edtottuk a viewModelt olyan szinten, hogy m\u00e1r megkapta a Hilt annot\u00e1ci\u00f3j\u00e1t, valamint egy param\u00e9tert is kapott. Ez a Dao lesz, amit jelenleg a programunk nem fog tudni \u00e9rtelmezni, ugyanis ehhez l\u00e9tre kell hozunk egy <code>AppModule</code> f\u00e1jlt, amiben le\u00edrjuk, hogy milyen m\u00f3don kell el\u0151\u00e1ll\u00edtania ezt a param\u00e9tert.</p> <p>Ehhez hozzunk l\u00e9tre egy \u00faj Packaget <code>di</code> n\u00e9ven, majd ebben egy \u00faj Kotlin Filet, <code>AppModule</code> n\u00e9ven, \u00e9s t\u00f6lts\u00fck ki a k\u00f6vetkez\u0151vel:</p> <pre><code>@Module\n@InstallIn(SingletonComponent::class)\nobject AppModule {\n@Provides\n@Singleton\nfun provideTopScoreDao(@ApplicationContext appContext: Context): TopScoreDao {\nreturn TopScoreDatabase.getDatabase(appContext).topScoreDao()\n}\n}\n</code></pre> <p>Az AppModule objektumon bel\u00fcl rakunk k\u00e9t annot\u00e1ci\u00f3t a <code>provideTopScoreDao</code> f\u00fcggv\u00e9ny-re, amely majd egy TopScoreDao objektumot ad vissza a megh\u00edv\u00e1s ut\u00e1n. Mivel <code>ApplicationContext</code>-et tud biztos\u00edtani, \u00edgy ennek a seg\u00edts\u00e9g\u00e9vel megh\u00edvjuk a <code>getDatabase</code> f\u00fcggv\u00e9nyt ezzel a param\u00e9terrel, majd legk\u00e9rdezz\u00fck a Dao-t, \u00edgy megkapva a sz\u00fcks\u00e9ges param\u00e9ter\u00fcnket.</p> <p>Ahhoz, hogy a Dependency Injectionunk m\u0171k\u00f6dj\u00f6n glob\u00e1lisan az alkalmaz\u00e1s szintj\u00e9n inicializ\u00e1lnunk kell a Daggert, hogy l\u00e9trej\u00f6jj\u00f6n egy kontextus, amelyben a f\u00fcgg\u0151s\u00e9geket menedzseli. Ehhez hozzunk l\u00e9tre a gy\u00f6k\u00e9rmapp\u00e1ban egy \u00faj Kotlin File-t <code>Application</code> n\u00e9ven, majd \u00edrjuk bele a k\u00f6vetkez\u0151 egyszer\u0171 k\u00f3dot:</p> <pre><code>@HiltAndroidApp\nclass MyApplication : Application()\n</code></pre> <p>Azonban ahhoz, hogy ez m\u0171k\u00f6dj\u00f6n a Manifest \u00e1llom\u00e1nyt m\u00f3dos\u00edtanunk kell \u00fagy, hogy ez az Application be legyen regisztr\u00e1lva mint Application. Ehhez nyissuk meg \u00e9s m\u00f3dos\u00edtsuk a k\u00f6vetkez\u0151ek szerint:</p> <pre><code>&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:tools=\"http://schemas.android.com/tools\"&gt;\n\n&lt;application\nandroid:name=\".MyApplication\"\n\n...\n\n&gt;\n&lt;activity\n...\n&gt;\n&lt;intent-filter&gt;\n...\n            &lt;/intent-filter&gt;\n&lt;/activity&gt;\n&lt;/application&gt;\n\n&lt;/manifest&gt;\n</code></pre> <p>Most m\u00e1r csak egy annot\u00e1ci\u00f3t kell r\u00e1rakni a MainActivity-re, hogy az adatb\u00e1zis ment\u00e9s sikeres legyen. Azonban ahhoz, hogy az eremd\u00e9nyek l\u00e1that\u00f3ak legyenek a HighScore Screen-en m\u00e9g p\u00e1r l\u00e9p\u00e9s h\u00e1tra van.</p> <p>Els\u0151 sorban m\u00f3dos\u00edtsuk a MainActivity-nket \u00fagy, hogy megkapja az <code>AndroidEntryPoint</code> Hilt annot\u00e1ci\u00f3t:</p> <pre><code>@AndroidEntryPoint\nclass MainActivity : ComponentActivity() {\n//...\n}\n</code></pre> <p>V\u00e9g\u00fcl m\u00f3dos\u00edtsuk \u00fagy a <code>HighScoreScreen</code> file-t hogy haszn\u00e1lja ezt az adatb\u00e1zist. Ehhez nyissuk meg a file-t majd mod\u00f3s\u00edtsuk a k\u00f6vetkez\u0151ek szerint:</p> <pre><code>@Composable\nfun HighScoresScreen(\nsnakeViewModel: SnakeViewModel\n) {\nval highScores = snakeViewModel.topScores.collectAsStateWithLifecycle(listOf())\n\nColumn (\n//...\n) {\nRow (\n//...\n) {\n//...\n}\nLazyColumn (\n//...\n) {\nitems(highScores.value.size) { index -&gt;\nRow (\n//...\n){\nTableText(highScores.value[index].name, Modifier.weight(2f))\nTableText(highScores.value[index].score.toString(), Modifier.weight(1f))\nTableText(highScores.value[index].difficulty, Modifier.weight(2f))\n}\n}\n}\n}\n}\n</code></pre> <p>A kor\u00e1bban haszn\u00e1lt highScores statikus v\u00e1ltoz\u00f3t lecser\u00e9lj\u00fck egy \u00fajabb v\u00e1ltoz\u00f3ra, ami m\u00e1r a viewModel topScore param\u00e9ter\u00e9t haszn\u00e1lja, majd v\u00e9g\u00fcl m\u00f3dos\u00edtjuk a tov\u00e1bbi param\u00e9tereket a haszn\u00e1latukhoz megfelel\u0151en. Ezzel el is k\u00e9sz\u00fclt a Screen, m\u00e1r csak a snakeViewModel param\u00e9tert kell \u00e1tadnunk a NavGraph-on bel\u00fcli h\u00edv\u00e1sn\u00e1l:</p> <pre><code>@Composable\nfun NavGraph(\n//...\n) {\nNavHost(\n//...\n){\n//...\ncomposable(\"highscores\"){\nmainViewModel.updateTitle(\"High Scores\", true)\nmainViewModel.setNavigationLambda { navController.navigate(\"mainscreen\") }\nHighScoresScreen(\nsnakeViewModel = snakeViewModel\n)\n}\n//...\n}\n}\n</code></pre> <p>BEADAND\u00d3 (2 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151 k\u00e9pet a HighScoreScreenr\u0151l, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt oldal, valah\u00e1ny mentett rekord, k\u00f6zt\u00fck a NEPTUN k\u00f3dod egy j\u00e1t\u00e9kosn\u00e9vk\u00e9nt (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#sensor-control-2-pont","title":"Sensor Control (2 pont)","text":"<p>Ebben a feladatban meg fogjuk val\u00f3s\u00edtani, azt a fajta m\u0171k\u00f6d\u00e9s\u00e9t a j\u00e1t\u00e9kunknak, hogy a felhaszn\u00e1l\u00f3 a telefon d\u00f6nt\u00f6get\u00e9s\u00e9vel tudja ir\u00e1ny\u00edtani a k\u00edgy\u00f3t a megfelel\u0151 ir\u00e1nyba.</p> <p>Ehhez a k\u00f6vetkez\u0151 l\u00e9p\u00e9seket kell megval\u00f3s\u00edtani:</p> <ol> <li>SnakeViewModel m\u00f3dos\u00edt\u00e1sa</li> <li>SettingsViewModel l\u00e9trehoz\u00e1sa</li> <li>SettingsScreen m\u00f3dos\u00edt\u00e1sa</li> <li>NavGraph</li> <li>MainNavScreen</li> <li>MainActivity</li> <li>AppModule</li> <li>PreferenceStorage</li> </ol> <p>Els\u0151 sorban hozzunk l\u00e9tre egy <code>PreferenceStorage</code> nev\u0171 Kotlin Filet, a <code>data</code> mapp\u00e1ban, majd a k\u00f6vetkez\u0151t haszn\u00e1ljuk fel a meg\u00edr\u00e1s\u00e1ra:</p> <pre><code>private val Context.dataStore by preferencesDataStore(name = \"settings\")\n\nclass PreferenceStorage(private val context: Context) {\ncompanion object {\nprivate val SENSOR_CONTROL_KEY = booleanPreferencesKey(\"sensor_control\")\n}\n\nval isSensorControlled: Flow&lt;Boolean&gt; = context.dataStore.data\n.map { preferences -&gt;\npreferences[SENSOR_CONTROL_KEY] ?: false\n}\n\nsuspend fun setSensorControlled(isSensorControlled: Boolean) {\ncontext.dataStore.edit { preferences -&gt;\npreferences[SENSOR_CONTROL_KEY] = isSensorControlled\n}\n}\n}\n</code></pre> <p>Ez a k\u00f3dr\u00e9szlet egy Kotlin alkalmaz\u00e1sban l\u00e9v\u0151 adatmeg\u0151rz\u0151 rendszer m\u0171k\u00f6d\u00e9s\u00e9t mutatja be, amelyet az Android <code>DataStore</code> API-j\u00e1val val\u00f3s\u00edtanak meg. A <code>PreferenceStorage</code> oszt\u00e1ly a <code>Context</code>-et haszn\u00e1lja a be\u00e1ll\u00edt\u00e1sok ment\u00e9s\u00e9hez \u00e9s lek\u00e9r\u00e9s\u00e9hez. Egy <code>Flow</code>-val t\u00e9r vissza, amely figyeli a <code>sensor_control</code> nev\u0171 preferencia v\u00e1ltoz\u00e1sait, \u00e9s alap\u00e9rtelmez\u00e9sben <code>false</code>-t ad vissza, ha a be\u00e1ll\u00edt\u00e1s m\u00e9g nem l\u00e9tezik. A <code>setSensorControlled</code> f\u00fcggv\u00e9ny lehet\u0151v\u00e9 teszi, hogy egy \u00faj \u00e9rt\u00e9ket \u00e1ll\u00edtsunk be ehhez a kulcshoz aszinkron m\u00f3don.</p> <p>Ezut\u00e1n hozzuk l\u00e9tre az \u00faj ViewModell\u00fcnket. A <code>model</code> mapp\u00e1n bel\u00fcl k\u00e9sz\u00edts\u00fcnk egy <code>settings</code> mapp\u00e1t, \u00e9s ezen bel\u00fcl hozzunk l\u00e9tre egy \u00faj Kotlin Filet. Majd \u00edrjuk meg a k\u00f3dot az al\u00e1bbiak alapj\u00e1n:</p> <pre><code>@HiltViewModel\nclass SettingsViewModel @Inject constructor(\nprivate val preferenceStorage: PreferenceStorage\n) : ViewModel() {\n\nprivate val _isSensorControlled = MutableStateFlow(false)\nval isSensorControlled = _isSensorControlled.asStateFlow()\n\ninit {\n//Collect Pref Storage\n}\n\n//setSensorControlled\n}\n</code></pre> <p>A SettingsViewModell\u00fcnk az al\u00e1bbi m\u00f3don fog kin\u00e9zni. Itt is sz\u00fcks\u00e9g\u00fcnk van a Dependency Injection haszn\u00e1lat\u00e1ra, hogy a viewModel megkapja a PreferenceStorage p\u00e9ld\u00e1nyt, amelyb\u0151l ki fogja nyerni azt az inform\u00e1ci\u00f3t, hogy a be\u00e1ll\u00edt\u00e1s k\u00e9perny\u0151n be, vagy ki volt kapcsolva a szenzoros ir\u00e1ny\u00edt\u00e1s. Ehhez tartozik m\u00e9g egy <code>init</code> blokk, illetve egy f\u00fcggv\u00e9ny, amivel m\u00f3dos\u00edtani lehet ezt az \u00e1llapotot. Az init blokk a k\u00f6vetkez\u0151 k\u00e9ppen n\u00e9z ki:</p> <p><pre><code>init {\nviewModelScope.launch {\npreferenceStorage.isSensorControlled.collect { value -&gt;\n_isSensorControlled.value = value\n}\n}\n}\n</code></pre> Itt l\u00e9nyeg\u00e9ben begy\u0171jtj\u00fck a DataStore-ban t\u00e1rolt adatot, jelen esetben a sensor be, vagy kikapcsolt \u00e1llapot\u00e1t, majd be\u00e1ll\u00edtja a lok\u00e1lis v\u00e1ltoz\u00f3 \u00e9rt\u00e9k\u00e9t.</p> <p>Azonban sz\u00fcks\u00e9g\u00fcnk van m\u00e9g egy f\u00fcggv\u00e9nyre, aminek a seg\u00edts\u00e9g\u00e9vel tudjuk \u00e1ll\u00edtani ezt az \u00e1llapotot.:</p> <pre><code>fun setSensorControlled(isSensorControlled: Boolean) {\nviewModelScope.launch {\npreferenceStorage.setSensorControlled(isSensorControlled)\n}\n}\n</code></pre> <p>Mivel egy suspend-ed f\u00fcggv\u00e9nyt szeretn\u00e9nk megh\u00edvni, ez\u00e9rt ezt az eg\u00e9szet egy <code>viewModelScope.launch { .. }</code> blokkban kell ezt v\u00e9grehajtani. Ezzel meg is van a SettingsViewModel, ezt m\u00e1r csak \u00e1t kell adnunk a sz\u00fcks\u00e9ges Composable f\u00fcggv\u00e9nyek param\u00e9tereinek.</p> <p>Sz\u00fcks\u00e9g van arra hogy az alkalmaz\u00e1s tudja, hogy ezt a PreferenceStorage param\u00e9tert, hogyan \u00e1ll\u00edtsa el\u0151, ehhez az AppModule-ban defini\u00e1lnunk kell egy f\u00fcggv\u00e9nyt a k\u00f6vetkez\u0151 k\u00e9ppen:</p> <p><pre><code>@Module\n@InstallIn(SingletonComponent::class)\nobject AppModule {\n\n@Singleton\n@Provides\nfun providePreferenceStorage(@ApplicationContext context: Context): PreferenceStorage {\nreturn PreferenceStorage(context)\n}\n//Other FUNS\n}\n</code></pre> Ennek a seg\u00edts\u00e9g\u00e9vel el\u0151 fogja tudni \u00e1ll\u00edtani a sz\u00fcks\u00e9ges param\u00e9tert az alkalmaz\u00e1sunk!</p> <p>Ahhoz, hogy a SettingsScreen-en tudjuk haszn\u00e1lni ezt a viewModelt, vissza kell menn\u00fcnk a MainActivity-be, \u00e9s itt el kell v\u00e9gezn\u00fcnk p\u00e1r m\u00f3dos\u00edt\u00e1st. Els\u0151 sorban l\u00e9tre kell hoznunk egy settingsViewModel v\u00e1ltoz\u00f3t, amely a viewModel-t fogja p\u00e9ld\u00e1nyos\u00edtani, majd be kell \u00e1ll\u00edtani az \u00e9rt\u00e9k\u00e9t, \u00e9s \u00e1tadni a MainNavScreennek:</p> <pre><code>@AndroidEntryPoint\nclass MainActivity : ComponentActivity() {\n\nprivate lateinit var settingsViewModel: SettingsViewModel\n//Other Vals\n\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\n\nsettingsViewModel = ViewModelProvider(this)[SettingsViewModel::class.java]\nenableEdgeToEdge()\nsetContent {\nSnakeDemoTestTheme {\nMainNavScreen(\nmainViewModel = mainViewModel,\nsnakeViewModel = snakeViewModel,\nsettingsViewModel = settingsViewModel\n)\n}\n}\n}\n}\n</code></pre> <p>Itt m\u00e9g al\u00e1 fogja h\u00fazni nek\u00fcnk a megl\u00e9v\u0151 k\u00f3dot, ugyanis m\u00f3dos\u00edtanunk kell a MainNavScreen param\u00e9terlist\u00e1j\u00e1t is, valamint a f\u00fcggv\u00e9nyh\u00edv\u00e1st is.</p> <pre><code>@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun MainNavScreen(\nmainViewModel: MainViewModel,\nsnakeViewModel: SnakeViewModel,\nsettingsViewModel: SettingsViewModel\n){\n\n//...\n\nScaffold(\n//...\n) { innerPadding -&gt;\n\n//...\nNavGraph(\nmodifier = Modifier.padding(innerPadding),\nnavController = navController,\nsnakeViewModel = snakeViewModel,\nstate = state.value,\nsettingsVM = settingsViewModel\n)\n}\n}\n</code></pre> <p>Ezek ut\u00e1n az error tov\u00e1bb ker\u00fclt a NavGraph-ba, de tov\u00e1bbra sem vagyunk k\u00e9szen, \u00e9s m\u00f3dos\u00edtjuk a NavGraph param\u00e9ter list\u00e1j\u00e1t is a k\u00f6vetkez\u0151 k\u00e9ppen:</p> <pre><code>@Composable\nfun NavGraph(\nmodifier: Modifier = Modifier,\nnavController: NavHostController = rememberNavController(),\nstartDestination: String = \"mainscreen\",\nmainViewModel: MainViewModel = viewModel(),\nstate: SnakeState,\nsnakeViewModel: SnakeViewModel,\nsettingsVM: SettingsViewModel\n) {\n//...\n}\n</code></pre> <p>Majd v\u00e9g\u00fcl \u00e1tadjuk az \u00faj <code>settingsVM</code> param\u00e9tert a SettingsScreen param\u00e9ter\u00e9nek:</p> <pre><code>composable(\"settings\"){\nmainViewModel.updateTitle(\"Settings\", true)\nmainViewModel.setNavigationLambda { navController.navigate(\"mainscreen\") }\nSettingsScreen(settingsViewModel = settingsVM)\n}\n</code></pre> <p>Ezek ut\u00e1n neki\u00e1llhatunk a <code>SettingsScreen</code> m\u00f3dos\u00edt\u00e1s\u00e1nak. Mivel \u00faj param\u00e9tert kapott, egyb\u0151l ezt fel is tudjuk haszn\u00e1lni egy v\u00e1ltoz\u00f3 inicializ\u00e1l\u00e1s\u00e1ra a k\u00f6vetkez\u0151 k\u00e9ppen:</p> <pre><code>@Composable\nfun SettingsScreen(\nsettingsViewModel: SettingsViewModel = viewModel()\n) {\nval isSensorControlled by settingsViewModel.isSensorControlled.collectAsState()\n//Column\n}\n</code></pre> <p>Majd ezt az \u00faj v\u00e1ltoz\u00f3t haszn\u00e1ljuk tov\u00e1bb a Column egyes Composable f\u00fcggv\u00e9nyeiben param\u00e9terk\u00e9nt.:</p> <p><pre><code>Switch(\nchecked = isSensorControlled,\nonCheckedChange = {\nsettingsViewModel.setSensorControlled(it)\n}\n)\n</code></pre> Mivel az isSensorControlled egy val, ez\u00e9rt azt k\u00f6zvetlen nem tudjuk m\u00f3dos\u00edtani, hogy ha sz\u00fcks\u00e9ges, \u00edgy a settingsViewModel-ben l\u00e9v\u0151 f\u00fcggv\u00e9nyt h\u00edvjuk, aminek a seg\u00edts\u00e9g\u00e9vel be\u00e1ll\u00edtjuk ezt a v\u00e1ltoz\u00f3t, \u00e9s \u00edgy a lok\u00e1lis val v\u00e1ltoz\u00f3nk is friss\u00fclni fog. Ha ezzel megvagyunk a kapcsol\u00f3nak m\u0171k\u00f6dnie k\u00e9ne, \u00e9s meg k\u00e9ne tartania az \u00e1llapot\u00e1t, azonban m\u00e9g konkr\u00e9t m\u0171k\u00f6d\u00e9s nincs hozz\u00e1rendelve. Ezt a k\u00f6vetkez\u0151 l\u00e9psekben tessz\u00fck meg.</p> <p>Ahhoz, hogy mag\u00e1t a Sensor-t tudjuk haszn\u00e1lni, m\u00f3dos\u00edtanunk kell a SnakeViewModel-t \u00fagy, hogy implement\u00e1ljuk benne a <code>SensorEventListener</code> interface f\u00fcggv\u00e9nyeit. Ennek a seg\u00edts\u00e9g\u00e9vel adhatjuk meg, hogy milyen m\u0171k\u00f6d\u00e9st szeretn\u00e9nk hozz\u00e1rendelni az egyes Sensor m\u0171veletekhez. Ehhez nyissuk meg a m\u00e1r megl\u00e9v\u0151 <code>SnakeViewModel</code> f\u00e1jlunkat \u00e9s m\u00f3dos\u00edtsuk a k\u00f6vetkez\u0151ek szerint:</p> <p><pre><code>class SnakeViewModel @Inject constructor(\nprivate val topScoreDao: TopScoreDao,\nprivate val sensorManager: SensorManager,\n) : ViewModel(), SensorEventListener {\n//isTurned\n\n//Accelerometer\n\n//Is Sensor Controlled\n\n//Init\n\n//onSensorChanged\n\n//onAccuracyChanged\n\n}\n</code></pre> L\u00e1that\u00f3, hogy m\u00f3dos\u00edtottuk mag\u00e1t a param\u00e9ter\u00e9t is, kapott egy SensorManager param\u00e9tert, amit k\u00e9s\u0151bb majd a Dependency Injectionnal fogunk \u00e1tadni neki, amihez sz\u00fcks\u00e9g\u00fcnk van az <code>AppModule</code> m\u00f3dos\u00edt\u00e1s\u00e1ra, azonban ez m\u00e9g jelenleg Errort fog nek\u00fcnk mutatni, ugyanis nem defini\u00e1ltuk az interface f\u00fcggv\u00e9nyeit. Ehhez kattintsunk az al\u00e1h\u00fazott piros r\u00e9szre, majd az ALT+ENTER seg\u00edts\u00e9g\u00e9vel hozzuk be a men\u00fct, \u00e9s kattintsunk az Implement Members opci\u00f3ra, vagy \u00edrjuk bele a ViewModel-be az al\u00e1bbi k\u00f3dot:</p> <pre><code>//...\noverride fun onSensorChanged(event: SensorEvent?) {\nTODO(\"Not yet implemented\")\n}\n\noverride fun onAccuracyChanged(sensor: Sensor?, accuracy: Int) {\nTODO(\"Not yet implemented\")\n}\n//...\n</code></pre> <p>Nek\u00fcnk az <code>onSensorChanged</code> f\u00fcggv\u00e9nyre lesz sz\u00fcks\u00e9g\u00fcnk, a m\u00e1sik f\u00fcggv\u00e9ny t\u00f6rzs\u00e9t ki is t\u00f6r\u00f6lhetj\u00fck! </p> <p>TODO Comment</p> <p>Fontos, hogy t\u00f6r\u00f6lj\u00fck ki a TODO commentet, mert nem fog m\u0171k\u00f6dni az alkalmaz\u00e1s</p> <p>Miel\u0151tt megcsin\u00e1ln\u00e1nk a f\u00fcggv\u00e9nyt, hozzunk l\u00e9tre p\u00e1r \u00faj v\u00e1ltoz\u00f3t, erre az\u00e9rt lesz sz\u00fcks\u00e9g, ugyanis akkor szeretn\u00e9nk haszn\u00e1lni a Sensor-os \u00e9rz\u00e9kel\u0151ket, hogy ha az be van kapcsolva. Ehhez kell egy v\u00e1ltoz\u00f3 ami nyilv\u00e1n tartja ennek az \u00e1llapot\u00e1t, tov\u00e1bb\u00e1 sz\u00fcks\u00e9g\u00fcnk van egy olyan v\u00e1ltoz\u00f3ra ami azt tartja nyilv\u00e1n, hogy a k\u00edgy\u00f3val lehet-e fordulni. Ezt az\u00e9rt kell beletenn\u00fcnk a k\u00f3dban, ugyanis, ha gyorsan forgatjuk a telefont, \u00e9s nem korl\u00e1tozzuk a k\u00edgy\u00f3 fordul\u00e1s\u00e1t, akkor k\u00f6nnyen lehet, hogy GameOver-hez vezet a j\u00e1t\u00e9k. (K\u00edgy\u00f3 el\u0151re megy, \u00e9s 2x gyorsan fordulunk jobbra. Ilyenkor ha a k\u00edgy\u00f3nak van m\u00e1r teste, saj\u00e1t mag\u00e1ba fog \u00fctk\u00f6zni, ez\u00e9rt korl\u00e1tozzuk egy Boolean v\u00e1ltoz\u00f3val a forg\u00e1s\u00e1t.) Ezekhez a m\u00f3dos\u00edt\u00e1sokhoz, haszn\u00e1ljuk fel az al\u00e1bbi k\u00f3dot:</p> <p><pre><code>//isTurned\nprivate val _isTurned = MutableStateFlow(false)\n\n//Accelerometer\nprivate var accelerometer: Sensor? = null\n\n//Is Sensor Controlled\nprivate val _isSensorControlled = MutableStateFlow(false)\nvar isSensorControlled: StateFlow&lt;Boolean&gt; = _isSensorControlled.asStateFlow()\n\n//Init\n\ninit {\naccelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER)\n}\n</code></pre> J\u00f3l l\u00e1that\u00f3, hogy a sz\u00fcks\u00e9ges param\u00e9tereket megval\u00f3s\u00edtottuk, azonban egy init blokkra is sz\u00fcks\u00e9g\u00fcnk van, ugyanis a Sensor v\u00e1ltoz\u00f3t be kell regisztr\u00e1lnunk minden egyes alkalommal. A k\u00f6vetkez\u0151 l\u00e9p\u00e9sben az interface f\u00fcggv\u00e9ny\u00e9t fogjuk megval\u00f3s\u00edtani.</p> <p>Ebben a f\u00fcggv\u00e9nyben kell le\u00edrnunk, hogy melyik d\u00f6nt\u00e9sre, milyen funkci\u00f3t szeretn\u00e9nk megval\u00f3s\u00edtani. Ehhez haszn\u00e1ljuk fel az al\u00e1bbi k\u00f3dot:</p> <pre><code>override fun onSensorChanged(event: SensorEvent?) { if (!isSensorControlled.value) return\n\nevent?.let {\nval x = it.values[0]\nval y = it.values[1]\n\nval threshold = 2.0f\n\nval direction = when {\nx &gt; threshold -&gt; Direction.LEFT\nx &lt; -threshold -&gt; Direction.RIGHT\ny &gt; threshold -&gt; Direction.DOWN\ny &lt; -threshold -&gt; Direction.UP\nelse -&gt; null\n}\n\ndirection?.let {\nonEvent(SnakeEvent.ChangeDir(it))\n} } }\n</code></pre> <p>A f\u00fcggv\u00e9ny t\u00f6rzs\u00e9ben, hogy ha a sensorControll v\u00e1ltoz\u00f3nk hamis, akkor nem foglalkozunk a sensor \u00e1llapot\u00e1nak m\u00f3dosul\u00e1s\u00e1val, ugyanis ilyenkor ki van kapcsolva \u00e9s k\u00e9zi ir\u00e1ny\u00edt\u00e1ssal ir\u00e1ny\u00edtjuk a j\u00e1t\u00e9kot. Azonban, hogy ha nem hamis, akkor tov\u00e1bb megy\u00fcnk, \u00e9s l\u00e9trehozunk egy threshold v\u00e1ltoz\u00f3t, ami arra fog szolg\u00e1llni, hogy ne legyen annyira \u00e9rz\u00e9keny a sensoros ir\u00e1ny\u00edt\u00e1s, \u00e9s kicsit jobban meg kelljen d\u00f6nteni a k\u00e9perny\u0151t, hogy a k\u00edgy\u00f3 forduljon. Ezut\u00e1n egy v\u00e1ltoz\u00f3t hozunk l\u00e9tre, amely a d\u00f6nt\u00e9st\u0151l f\u00fcgg\u0151en egy ir\u00e1nyt fog tartalmazni, amelyet ut\u00e1na felhaszn\u00e1lunk egy onEvent param\u00e9terk\u00e9nt. \u00cdgy fog megval\u00f3sulni a fordul\u00e1sa a k\u00edgy\u00f3nak.</p> <p>Tov\u00e1bb\u00e1 sz\u00fcks\u00e9g\u00fcnk van egy olyan f\u00fcggv\u00e9nyre, amelynek a seg\u00edts\u00e9g\u00e9vel ki-be tudjuk kapcsolni az <code>_isSensorControlled</code> v\u00e1ltoz\u00f3nkat, illetve ki-be tudjuk regisztr\u00e1lni a sensorManager v\u00e1ltoz\u00f3t. Ehhez haszn\u00e1ljuk fel az al\u00e1bbi k\u00f3dot, \u00e9s \u00e9rtelmezz\u00fck!</p> <pre><code>fun setSensorControlled(enabled: Boolean) {\n_isSensorControlled.value = enabled\nif (enabled) {\nsensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL)\n} else {\nsensorManager.unregisterListener(this)\n}\n}\n</code></pre> <p>A f\u00fcggv\u00e9ny els\u0151 sor\u00e1ban m\u00f3dos\u00edtjuk a v\u00e1ltoz\u00f3t, ut\u00e1na pedig egy if-else el\u00e1gaz\u00e1s seg\u00edts\u00e9g\u00e9vel ki-be regisztr\u00e1ljuk a sensorManager-t, az \u00e1llapott\u00f3l f\u00fcgg\u0151en.</p> <p>Mag\u00e1t a f\u00fcggv\u00e9nyt a MainNavScreen-en szeretn\u00e9nk megh\u00edvni \u00fagy, hogy a settingsViewModel-ben elt\u00e1rolt adatot adjuk \u00e1t param\u00e9terk\u00e9nt a f\u00fcggv\u00e9nynek. Ehhez haszn\u00e1ljuk fel a k\u00f6vetkez\u0151 k\u00f3dr\u00e9szletet:</p> <pre><code>fun MainNavScreen(\nsettingsViewModel: SettingsViewModel,\nsnakeViewModel: SnakeViewModel,\nmainViewModel: MainViewModel\n) {\n//...\nval isSensorControlled by settingsViewModel.isSensorControlled.collectAsStateWithLifecycle()\nsnakeViewModel.setSensorControlled(isSensorControlled)\n//...\n}\n</code></pre> <p>Miut\u00e1n itt be\u00e1ll\u00edtottuk az alkalmaz\u00e1s be fogja regisztr\u00e1lni a sensorManager-t, \u00e9s ennek hat\u00e1s\u00e1ra tudjuk haszn\u00e1lni a Sensor-os ir\u00e1ny\u00edt\u00e1st. Azonban sz\u00fcks\u00e9g\u00fcnk van a UI m\u00f3dos\u00edt\u00e1s\u00e1ra a GameScreen-en, ugyanis azt szeretn\u00e9nk el\u00e9rni, hogy ha Sensoros ir\u00e1ny\u00edt\u00e1son vagyunk, akkor a UI ne tartalmazza a Controller gombokat, csak a j\u00e1t\u00e9k \u00e1llapot vez\u00e9rl\u0151 gombokat. Ehhez m\u00f3dos\u00edtsuk a GameScreen-t a k\u00f6vetkez\u0151 k\u00e9ppen:</p> <pre><code>@Composable\nfun GameScreen(\nstate: SnakeState,\nonEvent: (SnakeEvent) -&gt; Unit,\nnavController: NavHostController,\nsettingsVM: SettingsViewModel,\n) {\n\nval isSensorControlled by settingsVM.isSensorControlled.collectAsStateWithLifecycle()\n\n//...\n//Controllers\n}\n</code></pre> <p>Ebben a Composable f\u00fcggv\u00e9nyben is sz\u00fcks\u00e9g\u00fcnk van a settingsViewModel param\u00e9terre, ugyanis ennek a seg\u00edts\u00e9g\u00e9vel szedj\u00fck ki a Boolean v\u00e1ltoz\u00f3t, amely megmutatja, hogy Sensoros vagy Manu\u00e1lis ir\u00e1ny\u00edt\u00e1s UI-t kell haszn\u00e1lnunk. Ehhez m\u00f3dos\u00edtsuk a Controller UI r\u00e9szt, egy if-else el\u00e1gaz\u00e1sra az al\u00e1bbiak szerint:</p> <p><pre><code>if (!isSensorControlled) {\n//Current Controllers under the Controllers Comment\n} else{\n//Column ...\n}\n</code></pre> Az else el\u00e1gaz\u00e1s kit\u00f6lt\u00e9s\u00e9hez haszn\u00e1ljuk fel az al\u00e1bbiakat:</p> <p>Column</p> <ul> <li>Horizontal, Vertical - Center</li> <li>Modifier<ul> <li>1-es s\u00falyoz\u00e1s (weight)</li> <li>T\u00f6ltse ki a teljes teret (fillMaxSize)</li> <li>H\u00e1tt\u00e9r sz\u00fcrke legyen (background)</li> <li>Legyen egy v\u00e9kony kerete (border) <pre><code>Column(\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center,\nmodifier = Modifier\n.weight(1f)\n.background(Color.Gray)\n.fillMaxSize()\n.border(1.dp, Color.Black)\n) {\n//TextButton 1\n\n//TextButton 2\n\n}\n</code></pre></li> </ul> </li> </ul> <p>TextButton 1</p> <ul> <li>OnClick<ul> <li>GameState.IDLE -&gt; StartGame</li> <li>GameState.STARTED -&gt; PauseGame</li> <li>GameState.PAUSED -&gt; StartGame</li> </ul> </li> <li>Modifier:<ul> <li>T\u00f6ltse ki a teljes sz\u00e9less\u00e9get (fillMaxWidth) <pre><code>TextButton(\nonClick = {\nwhen (state.gameState) {\nGameState.IDLE -&gt; onEvent(SnakeEvent.StartGame)\nGameState.STARTED -&gt; onEvent(SnakeEvent.PauseGame)\nGameState.PAUSED -&gt; onEvent(SnakeEvent.StartGame)\n}\n},\nModifier.fillMaxWidth()\n) {\nText(\ntext = when (state.gameState) {\nGameState.IDLE -&gt; \"Start\"\nGameState.STARTED -&gt; \"Pause\"\nGameState.PAUSED -&gt; \"Resume\"\n},\nfontSize = 30.sp,\ncolor = Color.Black,\nfontFamily = FontFamily(\nFont(\nR.font.pixelfont,\nstyle = FontStyle.Normal\n)\n),\n)\n}\n</code></pre></li> </ul> </li> </ul> <p>TextButton 2</p> <ul> <li>OnClick:<ul> <li>ResetGame</li> </ul> </li> <li>Modifier:<ul> <li>T\u00f6ltse ki a tlejes sz\u00e9less\u00e9get (fillMaxWidth) <pre><code>TextButton(\nonClick = {\nonEvent(SnakeEvent.ResetGame)\n},\nModifier.fillMaxWidth()\n) {\nText(\ntext = if (state.isGameOver) \"Restart\" else \"New Game\",\nfontSize = 30.sp,\ncolor = Color.Black,\nfontFamily = FontFamily(\nFont(\nR.font.pixelfont,\nstyle = FontStyle.Normal\n)\n),\n)\n}\n</code></pre></li> </ul> </li> </ul> <p>Miut\u00e1n megvagyunk minden UI elemmel, m\u00e1r csak az <code>AppModule</code> b\u0151v\u00edt\u00e9se, illetve a param\u00e9ter\u00e1tad\u00e1st kell megoldanunk. Ehhez haszn\u00e1ljuk fel a k\u00f6vetkez\u0151 k\u00f3dokat:</p> <p><code>AppModule.kt</code></p> <pre><code>@Module\n@InstallIn(SingletonComponent::class)\nobject AppModule {\n//Other FUNS\n@Provides\nfun provideSensorManager(@ApplicationContext context: Context): SensorManager {\nreturn context.getSystemService(Context.SENSOR_SERVICE) as SensorManager\n}\n}\n</code></pre> <p>Az al\u00e1bbi f\u00fcggv\u00e9nnyel megmondjuk az app-nak, hogy mik\u00e9nt kell elk\u00e9sz\u00edtenie a SensorManager v\u00e1ltoz\u00f3t, \u00e9s \u00e1tadni a f\u00fcggv\u00e9ny param\u00e9ter\u00e9nek.</p> <p><code>NavGraph.kt</code></p> <pre><code>composable(\n//...\n){\n//...\nGameScreen(\nnavController = navController,\nstate = state,\nonEvent = snakeViewModel::onEvent,\nsettingsVM = settingsVM\n)\n}\n</code></pre> <p>BEADAND\u00d3 (2 pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet az elk\u00e9sz\u00fclt k\u00e9perny\u0151kr\u0151l, amelyen l\u00e1tszik a Sensoros ir\u00e1ny\u00edt\u00e1s, \u00e9s p\u00e1r szerzett pont (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f6.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#onallo-feladat-3-pont","title":"\u00d6n\u00e1ll\u00f3 feladat (3 pont)","text":""},{"location":"laborok/snake/#high-score-delete-all-megvalositasa-1-pont","title":"High Score Delete All megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>K\u00e9sz\u00edtsd el a High Score k\u00e9perny\u0151n elhelyezked\u0151 Delete All gomb m\u0171k\u00f6d\u00e9s\u00e9nek a logik\u00e1j\u00e1t!</p> Seg\u00edts\u00e9g <ul> <li>Dao f\u00fcggv\u00e9ny megval\u00f3s\u00edt\u00e1sa. HELP<ul> <li> More Help <pre><code>`DELETE FROM ...`\n</code></pre> </li> </ul> </li> <li>SnakeViewModel f\u00fcggv\u00e9ny</li> <li>OnClick esem\u00e9ny \u00e1tad\u00e1sa</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151 k\u00e9pet az elk\u00e9sz\u00fclt logik\u00e1r\u00f3l, amelyen l\u00e1tszik a k\u00f3d, illetve egy olyan k\u00e9perny\u0151 ahol van az adatb\u00e1zisnak eleme, valamint egy olyan ahol a t\u00f6r\u00f6lve vannak az elemek, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f7a.png, f7b.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#isturned-megvalositasa-1-pont","title":"isTurned megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>K\u00e9sz\u00edtsd el az isTurned logik\u00e1t, amely blokkolni fogja a fordul\u00e1st, mindaddig am\u00edg a k\u00edgy\u00f3 nem ment egyet el\u0151re. Ehhez haszn\u00e1ljuk fel a l\u00e9trehozott <code>_isTurned</code> v\u00e1ltoz\u00f3t. M\u0171k\u00f6d\u00e9s:</p> <ul> <li>Fordul\u00e1s ut\u00e1n blokkoljuk az ism\u00e9telt fordul\u00e1st</li> <li>El\u0151re l\u00e9p\u00e9s ut\u00e1n feloldjuk a blokkol\u00e1st</li> </ul> Seg\u00edts\u00e9g <ol> <li>Ha a v\u00e1ltoz\u00f3 IGAZ, akkor az onEvent - ChangeDir-ben visszat\u00e9r \u00e9rt\u00e9k m\u00f3dos\u00edt\u00e1s n\u00e9lk\u00fcl.</li> <li>Miut\u00e1n fordultunk egyet, a v\u00e1ltoz\u00f3 \u00e9rt\u00e9k\u00e9t IGAZ-ra \u00e1ll\u00edtjuk.</li> <li>Miut\u00e1n l\u00e9pett egyet el\u0151re a k\u00edgy\u00f3 a v\u00e1ltoz\u00f3 \u00e9rt\u00e9k\u00e9t HAMIS-ra \u00e1ll\u00edtjuk.</li> </ol> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151 k\u00e9pet az elk\u00e9sz\u00fclt logik\u00e1r\u00f3l, amelyen l\u00e1tszik a k\u00f3d, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f8.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"laborok/snake/#egyetlen-elem-torlese-1-pont","title":"Egyetlen elem t\u00f6rl\u00e9se (1 pont)","text":"<p>K\u00e9sz\u00edtsd el azt a logik\u00e1t, amellyel egyetlen elemet tudsz t\u00f6r\u00f6lni az adatb\u00e1zisb\u00f3l, hogy ha hosszan r\u00e1nyomsz az adott sorra a High Score Screenen!</p> Seg\u00edts\u00e9g <ul> <li>Hosszan nyom\u00e1s kezel\u00e9se - combinedClickable :)</li> <li>Hasonl\u00f3an mint az els\u0151 \u00f6n\u00e1ll\u00f3 feladat</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9t k\u00e9perny\u0151 k\u00e9pet az elk\u00e9sz\u00fclt logik\u00e1r\u00f3l, amelyen l\u00e1tszik az eredm\u00e9ny k\u00e9perny\u0151 3 adattal, majd ut\u00e1na kett\u0151 adattal, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9peket a megold\u00e1sban a repository-ba f9a.png, f9b.png n\u00e9ven t\u00f6ltsd f\u00f6l.</p>"},{"location":"tudnivalok/github/GitHub-Actions/","title":"GitHub Actions ismertet\u0151","text":"<p>A laborfeladatok ki\u00e9rt\u00e9kel\u00e9s\u00e9ben a GitHub Actions-re t\u00e1maszkodunk. Seg\u00edts\u00e9g\u00e9vel a git repository-kon m\u0171veleteket \u00e9s programokat tudunk futtatni. Ilyen m\u0171velet p\u00e9ld\u00e1ul a C# k\u00f3d leford\u00edt\u00e1sa, vagy a beadott k\u00f3d tesztel\u00e9se.</p> <p>A lefutott ki\u00e9rt\u00e9kel\u00e9sr\u0151l a pull request-ben fogsz \u00e9rtes\u00edt\u00e9st kapni. Ha meg szeretn\u00e9d n\u00e9zni r\u00e9szletesebben a h\u00e1tt\u00e9rben t\u00f6rt\u00e9nteket, vagy p\u00e9ld\u00e1ul az alkalmaz\u00e1s napl\u00f3kat, a GitHub fel\u00fclet\u00e9n az Actions alatt indulhatsz el.</p> <p></p> <p>Az Actions fel\u00fclet\u00e9n un. Workflow-kat l\u00e1tsz; minden egyes ki\u00e9rt\u00e9kel\u00e9s futtat\u00e1s egy-egy elem lesz itt (teh\u00e1t historikusan is visszakereshet\u0151ek).</p> <p></p> <p>Ezek k\u00f6z\u00fcl egyet kiv\u00e1lasztva (pl. a legfels\u0151 mindig a legutols\u00f3) l\u00e1thatod a workflow fut\u00e1s\u00e1nak r\u00e9szleteit. A fut\u00e1s napl\u00f3j\u00e1hoz a bal oldali list\u00e1ban m\u00e9g kattintani kell egyet. Jobb oldalon l\u00e1that\u00f3 a folyamat teljes napl\u00f3ja.</p> <p></p> <p>Minden z\u00f6ld pipa egy-egy sikeres l\u00e9p\u00e9st jelent. Ezen l\u00e9p\u00e9sek nem azonosak a feladatokokkal, hanem a ki\u00e9rt\u00e9kel\u00e9s folyamat\u00e1nak l\u00e9p\u00e9sei lesznek. Ilyen l\u00e9p\u00e9s p\u00e9ld\u00e1ul a k\u00f6rnyezet el\u0151k\u00e9sz\u00edt\u00e9se, pl. a .NET SDK telep\u00edt\u00e9se (minden ki\u00e9rt\u00e9kel\u00e9s egy vadi\u00faj k\u00f6rnyezetben indul, \u00edgy mindent el\u0151 kell k\u00e9sz\u00edteni).</p> <p>Alapvet\u0151en a l\u00e9p\u00e9sek mindig sikeresek, akkor is, ha a megold\u00e1sodban hiba van, mert a ki\u00e9rt\u00e9kel\u00e9s erre fel van k\u00e9sz\u00edtve. Kiv\u00e9telt ez al\u00f3l csak a <code>neptun.txt</code> hi\u00e1nya ill. a C# k\u00f3d leford\u00edt\u00e1sa jelent. El\u0151bbi felt\u00e9tlen\u00fcl sz\u00fcks\u00e9ges, ez\u00e9rt semmilyen folyamatot nem hajtunk v\u00e9gre n\u00e9lk\u00fcle. Ut\u00f3bbi eset\u00e9ben a C# k\u00f3d ford\u00edt\u00e1sa szint\u00e9n sz\u00fcks\u00e9ges a tov\u00e1bbl\u00e9p\u00e9shez, ez\u00e9rt sikertelens\u00e9g eset\u00e9n le\u00e1ll a folyamat.</p> <p>N\u00e9ha el\u0151fordulhat azonban tranziens, id\u0151szakos hiba is. P\u00e9ld\u00e1ul a .NET k\u00f6rnyezet let\u00f6lt\u00e9se nem siker\u00fcl h\u00e1l\u00f3zati hiba miatt. Ilyen esetben a futtat\u00e1st k\u00e9zzel meg lehet ism\u00e9telni. Ez persze csak akkor seg\u00edt, ha t\u00e9nyleg \u00e1tmeneti hib\u00e1r\u00f3l van sz\u00f3, teh\u00e1t pl. egy C# ford\u00edt\u00e1si hib\u00e1n nem fog seg\u00edteni. (Ezt a hiba\u00fczenetb\u0151l illetve a l\u00e9p\u00e9s nev\u00e9b\u0151l tudod kider\u00edteni, vagy legal\u00e1bb is megtippelni kell\u0151 bizonyoss\u00e1ggal.)</p> <p></p> <p>A feladat f\u00fcggv\u00e9ny\u00e9ben ak\u00e1r az alkalmaz\u00e1s napl\u00f3kat is meg tudod n\u00e9zni itt. Pl. amikor .NET alkalmaz\u00e1st k\u00e9sz\u00edtesz, az alkalmaz\u00e1st elind\u00edtjuk, \u00e9s minden, amit napl\u00f3z, itt megtekinthet\u0151.</p> <p>Az al\u00e1bbi p\u00e9ld\u00e1ul egy Entity Framework-\u00f6t haszn\u00e1l\u00f3 alkalmaz\u00e1s inicializ\u00e1s\u00e1t mutatja, k\u00f6zt\u00fck p\u00e9ld\u00e1ul a kiadott SQL parancsokat is. Debuggol\u00e1s k\u00f6zben a Visual Studio Output ablak\u00e1ban is hasonl\u00f3kat l\u00e1thatsz. Ez term\u00e9szetesen nagyban f\u00fcgg a konkr\u00e9t feladatt\u00f3l.</p> <p></p>"},{"location":"tudnivalok/github/GitHub-credentials/","title":"Egyetemi laborokban: GitHub bel\u00e9p\u00e9s","text":"<p>Az egyetemi laborokban a g\u00e9pek megjegyzik a GitHub bel\u00e9p\u00e9si adatokat. Ezt a munka v\u00e9gezt\u00e9vel k\u00e9zzel kell t\u00f6r\u00f6lni.</p> <ol> <li>Nyisd meg a <code>Credential Manager</code>-t a Start men\u00fcb\u0151l.</li> <li>A <code>Windows Credentials</code> oldalon keresd meg a GitHubra mutat\u00f3 bejegyz\u00e9seket, \u00e9s t\u00f6r\u00f6ld \u0151ket.    </li> </ol>"},{"location":"tudnivalok/github/GitHub/","title":"Feladatok bead\u00e1sa (GitHub)","text":"<p>A feladatok bead\u00e1s\u00e1hoz a GitHub platformot haszn\u00e1ljuk. Minden labor bead\u00e1sa egy-egy GitHub repository-ban t\u00f6rt\u00e9nik, melyet a feladatle\u00edr\u00e1sban tal\u00e1lhat\u00f3 linken kereszt\u00fcl kapsz meg. A labor feladatainak megold\u00e1s\u00e1t ezen repository-ban kell elk\u00e9sz\u00edtened, \u00e9s ide kell felt\u00f6ltened. A k\u00e9sz megold\u00e1s bead\u00e1sa a repository-ba val\u00f3 felt\u00f6lt\u00e9s ut\u00e1n egy un. pull request form\u00e1j\u00e1ban t\u00f6rt\u00e9nik, amelyet a laborvezet\u0151dh\u00f6z rendelsz.</p> <p>FONTOS</p> <p>Az itt le\u00edrt formai el\u0151\u00edr\u00e1sok betart\u00e1sa elv\u00e1r\u00e1s. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck.</p>"},{"location":"tudnivalok/github/GitHub/#roviditett-verzio","title":"R\u00f6vid\u00edtett verzi\u00f3","text":"<p>Al\u00e1bb r\u00e9szletesen bemutatjuk a bead\u00e1s menet\u00e9t. Itt egy r\u00f6vid \u00f6sszefoglal\u00f3 az \u00e1ttekint\u00e9shez, illetve a helyes bead\u00e1s ellen\u0151rz\u00e9s\u00e9hez.</p> <ol> <li> <p>A munk\u00e1dat Moodle-ben tal\u00e1lhat\u00f3 GitHub Classroom megh\u00edv\u00f3 linken kereszt\u00fcl l\u00e9trehozott GitHub repository-ban kell elk\u00e9sz\u00edtsd.</p> </li> <li> <p>A megold\u00e1shoz k\u00e9sz\u00edts egy k\u00fcl\u00f6n \u00e1gat, ne a master-en dolgozz. Erre az \u00e1gra ak\u00e1rh\u00e1ny kommitot tehetsz. Mindenk\u00e9ppen pushold a megold\u00e1st.</p> </li> <li> <p>A bead\u00e1st egy pull request jelzi, amely pull request-et a laborvezet\u0151dh\u00f6z kell rendelned.</p> </li> <li> <p>Ha az eredm\u00e9nnyel vagy \u00e9rt\u00e9kel\u00e9ssel kapcsolatban k\u00e9rd\u00e9sed van, pull request kommentben k\u00e9rdezhetsz. A laborvezet\u0151 \u00e9rtes\u00edt\u00e9s\u00e9hez haszn\u00e1ld a <code>@n\u00e9v</code> c\u00edmz\u00e9st a komment sz\u00f6veg\u00e9ben.</p> </li> </ol>"},{"location":"tudnivalok/github/GitHub/#a-munka-elkezdese-git-checkout","title":"A munka elkezd\u00e9se: git checkout","text":"<ol> <li> <p>Regisztr\u00e1lj egy GitHub accountot, ha m\u00e9g nincs.</p> </li> <li> <p>Moodle-ben a kurzus oldal\u00e1n keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-t. Ez minden laborhoz m\u00e1s lesz, \u00fcgyelj r\u00e1, hogy a megfelel\u0151 linket haszn\u00e1ld.</p> </li> <li> <p>Ha k\u00e9ri, adj enged\u00e9lyt a GitHub Classroom alkalmaz\u00e1snak, hogy haszn\u00e1lja az account adataidat.</p> <p></p> </li> <li> <p>L\u00e1tni fogsz egy oldalt, ahol elfogadhatod a feladatot (\"Accept the ... assignment\"). Kattints a gombra.</p> <p></p> </li> <li> <p>V\u00e1rd meg, am\u00edg elk\u00e9sz\u00fcl a repository. A repository linkj\u00e9t itt kapod meg.</p> <p>Megjegyz\u00e9s</p> <p>A repository priv\u00e1t lesz, azaz az senki nem l\u00e1tja, csak te, \u00e9s az oktat\u00f3k.</p> <p></p> </li> <li> <p>Nyisd meg a repository-t a webes fel\u00fcleten a linkre kattintva. Ezt az URL-t \u00edrd fel, vagy mentsd el.</p> <p></p> </li> <li> <p>Kl\u00f3nozd le a repository-t. Ehhez sz\u00fcks\u00e9ges lesz a repository c\u00edm\u00e9re, amit a repository webes fel\u00fclet\u00e9n a Clone or download alatt tal\u00e1lsz.</p> <p>A git repository kezel\u00e9s\u00e9hez tetsz\u0151leges klienst haszn\u00e1lhatsz. Ha nincs kedvenced m\u00e9g, akkor legegyszer\u0171bb a GitHub Desktop. Ebben az alkalmaz\u00e1sban k\u00f6zvetlen\u00fcl tudod list\u00e1zni a repository-kat GitHub-r\u00f3l, vagy haszn\u00e1lhatod az URL-t is a kl\u00f3noz\u00e1shoz.</p> <p></p> <p>Ha konzolt haszn\u00e1ln\u00e1l, az al\u00e1bbi parancs kl\u00f3nozza a repository-t (ha a <code>git</code> parancs el\u00e9rhet\u0151): <code>git clone &lt;repository link&gt;</code></p> <p>Sikertelen kl\u00f3noz\u00e1s</p> <p>Amennyiben a bejelentkez\u00e9s sikertelen felhaszn\u00e1l\u00f3n\u00e9v/jelsz\u00f3 p\u00e1rossal a \"Clone with HTTPS\" eset\u00e9n, (r\u00e9gebb \u00f3ta haszn\u00e1lt felhaszn\u00e1l\u00f3n\u00e1l) \u00e9rdemes ellen\u0151rizni a git-en tal\u00e1lhat\u00f3 Personal Access token lej\u00e1rati d\u00e1tum\u00e1t. </p> <p><code>Jobb fels\u0151 sarokban a profilk\u00e9p melletti lefel\u00e9 mutat\u00f3 nyil &gt; Settings &gt; bal oldalon (legals\u00f3) Developer settings &gt; ugyanitt Personal access tokens.</code></p> <p>Alternat\u00edv m\u00f3dszerk\u00e9nt: HTTP kl\u00f3noz\u00e1s helyett, SSH kulcs haszn\u00e1lat\u00e1hoz, angol nyelv\u0171 instrukci\u00f3k itt tal\u00e1lhat\u00f3ak.</p> </li> <li> <p>Ha siker\u00fclt a kl\u00f3noz\u00e1s, M\u00c9G NE KEZDJ EL DOLGOZNI! A megold\u00e1st ne a repository <code>master</code>/<code>main</code> \u00e1g\u00e1n k\u00e9sz\u00edtsd el. Hozz l\u00e9tre egy \u00faj \u00e1gat (branch) <code>megoldas</code> n\u00e9ven.</p> <p>GitHub Desktop-ban a Branch men\u00fcben teheted ezt meg.</p> <p></p> <p>Ha konzolt haszn\u00e1lsz, az \u00faj \u00e1g elk\u00e9sz\u00edthet\u0151 ezzel a paranccsal: <code>git checkout -b megoldas</code></p> </li> <li> <p>Ezen a megold\u00e1s \u00e1gon dolgozva k\u00e9sz\u00edtsd el a beadand\u00f3kat. Ak\u00e1rh\u00e1nyszor kommitolhatsz \u00e9s pusholhatsz. A megold\u00e1s r\u00e9sze a forr\u00e1sk\u00f3d \u00e9s a feladatokban elv\u00e1rt k\u00e9perny\u0151k\u00e9pek. Ha a feladat k\u00e9perny\u0151k\u00e9pet v\u00e1r el, akkor azt a repository gy\u00f6ker\u00e9be commitold az elv\u00e1rt n\u00e9ven.</p> <p>Egyetemi laborban</p> <p>Laborg\u00e9peken mindig ellen\u0151r\u00edzd, hogy a megfelel\u0151 n\u00e9vvel \u00e9s email c\u00edmmel kommitolsz-e. Ezt a k\u00f6vetkez\u0151 command line paranccsal tudod megtenni.</p> <pre><code>git config user.name\ngit config user.email\n</code></pre> <p>Ha ez nem megfelel\u0151 lenne, akkor add ki az al\u00e1bbi parancsokat a git repository mapp\u00e1j\u00e1ban. Ezzel az adott repository-ra fogod be\u00e1ll\u00edtani a k\u00edv\u00e1nt nevet \u00e9s email c\u00edmet. (\u00c9rdemes olyan email c\u00edmet, megadni ami a github useretekhez van rendelve)</p> <pre><code>git config user.name \"John Doe\"\ngit config user.email \"john@doe.org\"\n</code></pre> <p>Otthon</p> <p>Otthon a fentieket \u00e9rdemes lehet a glob\u00e1lisan vizsg\u00e1lni \u00e9s fel\u00fcl\u00edrni a <code>--global</code> kapcsol\u00f3val.</p> <p>GitHub Desktop-ban \u00edgy tudsz kommitolni. Mindig ellen\u0151rizd, hogy j\u00f3 \u00e1gon vagy-e. Els\u0151 alkalommal a megoldas \u00e1g csak helyben l\u00e9tezik, ez\u00e9rt publik\u00e1lni kell: Publish this branch.</p> <p></p> <p>A tov\u00e1bbi kommitokn\u00e1l is mindig ellen\u0151rizd a megfelel\u0151 \u00e1gat. Ha egy kommit m\u00e9g nincs fel\u00f6ltve, azt a Push origin gombbal teheted meg. A kis sz\u00e1m a gombon jelzi, hogy h\u00e1ny, m\u00e9g nem pusholt kommit van.</p> <p></p> <p>Ha konzolt haszn\u00e1lsz, akkor az al\u00e1bbi parancsokat haszn\u00e1ld (felt\u00e9ve, hogy a j\u00f3 \u00e1gon vagy):</p> <pre><code># Ellen\u0151rizd az \u00e1gat, \u00e9s hogy milyen f\u00e1jlok m\u00f3dosultak\ngit status\n\n# Minden v\u00e1ltoztat\u00e1st el\u0151k\u00e9sz\u00edt kommitol\u00e1sra\ngit add .\n\n# Kommit\ngit commit -m \"f1\"\n\n# Push els\u0151 alkalommal az \u00faj \u00e1g publik\u00e1l\u00e1s\u00e1hoz\ngit push --set-upstream origin megoldas\n\n# Push a tov\u00e1bbiakban, amikor az \u00e1g m\u00e1r nem \u00faj\ngit push\n</code></pre> </li> </ol>"},{"location":"tudnivalok/github/GitHub/#a-megoldas-beadasa","title":"A megold\u00e1s bead\u00e1sa","text":"<ol> <li> <p>Ha v\u00e9gezt\u00e9l a megold\u00e1ssal, ellen\u0151rizd a GitHub webes fel\u00fclet\u00e9n, hogy mindent felt\u00f6lt\u00f6tt\u00e9l-e. Ehhez a webes fel\u00fcleten v\u00e1ltanod kell az \u00e1gak k\u00f6z\u00f6tt.</p> <p></p> <p>Felt\u00f6lt\u00e9s a webes fel\u00fcleten</p> <p>Azt javasoljuk, hogy ne haszn\u00e1ld a GitHub f\u00e1jl felt\u00f6lt\u00e9s funkci\u00f3j\u00e1t. Ha valami hi\u00e1nyzik, a helyi git repository-ban p\u00f3told, \u00e9s kommitold majd pushold.</p> </li> <li> <p>Ha t\u00e9nyleg k\u00e9sz vagy, akkor nyiss egy pull request-et.</p> <p>Minek a pull request?</p> <p>Ez a pull request fogja \u00f6ssze a megold\u00e1sodat, \u00e9s annak \"v\u00e9geredm\u00e9ny\u00e9t\" mutatja. \u00cdgy a laborvezet\u0151nek nem az egyes kommitjaidat vagy f\u00e1jljaidat kell n\u00e9znie, hanem csak a relev\u00e1ns, v\u00e1ltozott r\u00e9szeket l\u00e1tja egyben. A pull request jelenti a feladatod bead\u00e1s\u00e1t is, \u00edgy ez a l\u00e9p\u00e9s nem hagyhat\u00f3 ki.</p> <p>A pull request nyit\u00e1s\u00e1hoz a GitHub webes fel\u00fclet\u00e9re kell menj. Itt, ha nem r\u00e9g pusholt\u00e1l, a GitHub fel is aj\u00e1nlja a pull request l\u00e9trehoz\u00e1s\u00e1t.</p> <p></p> <p>A pull request-et a fenti men\u00fcben is l\u00e9trehozhatod. Fontos, hogy a megfelel\u0151 brancheket v\u00e1laszd ki: <code>master</code>-be megy a <code>megoldas</code> \u00e1g.</p> <p></p> <p>Ha minden rendben siker\u00fclt, a men\u00fcben fent l\u00e1tod a kis \"1\" sz\u00e1mot a Pull request elem mellett, jelezve, hogy van egy nyitott pull request. DE M\u00c9G NEM V\u00c9GEZT\u00c9L!</p> <p></p> </li> <li> <p>A pull request hat\u00e1s\u00e1ra le fog futni egy \u00e9rt\u00e9kel\u00e9s. Ennek eredm\u00e9ny\u00e9t a pull request alatt kommentben fogod l\u00e1tni.</p> <p>Ez az \u00e9rt\u00e9kel\u00e9s minden labor eset\u00e9ben m\u00e1s lesz. Egyes laborokn\u00e1l a programodat lefuttatjuk, \u00e9s el\u0151zetes pontsz\u00e1mot is kapsz. M\u00e1s laborokn\u00e1l csak \"szintaktikai ellen\u0151rz\u00e9st\" v\u00e9gz\u00fcnk.</p> <p></p> <p>Ha a ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9vel kapcsolatban t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, mint amit itt l\u00e1tsz, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t.</p> </li> <li> <p>Ha nem vagy megel\u00e9gedve a munk\u00e1ddal, akkor m\u00e9g jav\u00edthatsz rajta. Ehhez kommitolj \u00e9s pusholj \u00fajra. Ha tov\u00e1bbra is a megfelel\u0151 \u00e1gon dolgozol, akkor a pull request \u00fajb\u00f3l le fogja futtatni a ki\u00e9rt\u00e9kel\u00e9st. Arra k\u00e9r\u00fcnk, hogy MAXIMUM 5 alkalommal futtasd le a ki\u00e9rt\u00e9kel\u00e9st!</p> <p>Megold\u00e1s jav\u00edt\u00e1sa ki\u00e9rt\u00e9kel\u00e9s n\u00e9lk\u00fcl</p> <p>Ha \u00fagy l\u00e1tod, hogy a megold\u00e1sodat m\u00e9g jav\u00edtani akarod, \u00e9s nem szeretn\u00e9d, hogy mindig lefusson az \u00e9rt\u00e9kel\u00e9s, akkor \u00e1ll\u00edtsd \u00e1t a pull request-et a webes fel\u00fcleten draft \u00e1llapotra.</p> <p></p> <p>Ezzel az \u00e1llapottal jelzed, hogy m\u00e9g dolgozol. Kommitolj \u00e9s pusholj. Ilyenkor nem fog futni ki\u00e9rt\u00e9kel\u00e9s. Ha v\u00e9gezt\u00e9l, akkor vissza kell \u00e1ll\u00edtanod a pull request-et: menj a PR alj\u00e1ra \u00e9s kattints a \"Ready for review\" gombra. Ennek hat\u00e1s\u00e1ra vissza\u00e1ll a PR \u00e9s le fog futni az automata \u00e9rt\u00e9kel\u00e9s.</p> <p></p> <p>Maximum 5</p> <p>A maximum 5 alkalomba nem sz\u00e1moljuk bele az esetlegesen megszakadt, vagy tranziens hiba miatt sikertelen futtat\u00e1sokat. Ha viszont figyelmetlens\u00e9gb\u0151l, vagy sz\u00e1nd\u00e9kosan t\u00fall\u00e9ped az \u00f6t\u00f6t, akkor pontlevon\u00e1ssal szankcion\u00e1lunk. Arra k\u00e9r\u00fcnk, hogy bead\u00e1s el\u0151tt teszteld a megold\u00e1sod, ne a GitHub platformot \"dolgoztasd\" magad helyett!</p> </li> <li> <p>V\u00c9GEZET\u00dcL, ha k\u00e9sz vagy, a pull request-et rendeld a laborvezet\u0151dh\u00f6z. Ez a l\u00e9p\u00e9s felt\u00e9tlen\u00fcl fontos, ez jelzi a bead\u00e1st.</p> <p></p> <p>Pull request n\u00e9lk\u00fcl</p> <p>Ha nincs pull request-ed, vagy nincs a laborvezet\u0151h\u00f6z rendelve, akkor \u00fagy tekintj\u00fck, hogy m\u00e9g nem vagy k\u00e9szen, \u00e9s nem adtad be a megold\u00e1st.</p> <p>V\u00e9gezt\u00e9l</p> <p>Miut\u00e1n a laborvezet\u0151h\u00f6z rendelted a pull request-et, m\u00e1r ne m\u00f3dos\u00edts semmin. A laborvezet\u0151 \u00e9rt\u00e9kelni fogja a munk\u00e1dat, \u00e9s a pull request lez\u00e1r\u00e1s\u00e1val kommentben jelzi a v\u00e9geredm\u00e9nyt.</p> </li> </ol>"},{"location":"tudnivalok/github/GitHub/#kapott-eredmennyel-kapcsolatban-kerdes-vagy-reklamacio","title":"Kapott eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9s vagy reklam\u00e1ci\u00f3","text":"<p>Ha a feladatok \u00e9rt\u00e9kel\u00e9s\u00e9vel vagy az eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9st tenn\u00e9l fel, vagy reklam\u00e1ln\u00e1l, haszn\u00e1ld a Pull Request kommentel\u00e9si lehet\u0151s\u00e9g\u00e9t erre. Annak \u00e9rdek\u00e9ben, hogy a laborvezet\u0151 biztosan \u00e9rtes\u00fclj\u00f6n a k\u00e9rd\u00e9sr\u0151l haszn\u00e1ld a <code>@n\u00e9v</code> mention funkci\u00f3t a laborvezet\u0151d megnevez\u00e9s\u00e9hez. Err\u0151l automatikusan kapni fog egy email \u00e9rtes\u00edt\u00e9st.</p> <p></p> <p>Reklam\u00e1ci\u00f3 csak indokl\u00e1ssal</p> <p>Ha nem \u00e9rtesz egyet az \u00e9rt\u00e9kel\u00e9ssel, a bizony\u00edt\u00e1s t\u00e9ged terhel, azaz al\u00e1 kell t\u00e1masztanod a reklam\u00e1ci\u00f3d (pl. annak le\u00edr\u00e1s\u00e1val, hogyan tesztelted a megold\u00e1sod, \u00e9s mi bizony\u00edtja a helyess\u00e9g\u00e9t).</p>"},{"location":"tudnivalok/github/contributing/","title":"Hozz\u00e1j\u00e1rul\u00e1s az anyaghoz","text":"<p>Az anyag terjedelm\u00e9b\u0151l adand\u00f3an apr\u00f3bb hib\u00e1k esetenk\u00e9nt hi\u00e1nyoss\u00e1gok jelentkezhetnek a laborokban. Ha egy ilyennel tal\u00e1lkozol \u00e9s \u00fagy d\u00f6ntesz szeretn\u00e9l seg\u00edteni hallgat\u00f3t\u00e1rsaidnak, azt a k\u00f6vetkez\u0151kben le\u00edrtak alapj\u00e1n tudod megtenni.</p> <p>Plusz pont jegyzet jav\u00edt\u00e1s\u00e9rt</p> <p>M\u00e1s tant\u00e1rgyak mint\u00e1j\u00e1ra itt is szeretn\u00e9nk plusz pontot adni a jegyzet open-source hozz\u00e1j\u00e1rul\u00e1sai\u00e9rt. Akik a t\u00e1rgyat jelenleg hallgatj\u00e1k, pontokat kaphatnak hozz\u00e1j\u00e1rul\u00e1saik\u00e9rrt.</p> <p>A f\u00e9l\u00e9v sor\u00e1n max 3 db plusz pontot lehet szerezni fejenk\u00e9nt olyan jav\u00edt\u00e1sok\u00e9rt, amik a trivi\u00e1lis 1-2 bet\u0171 elg\u00e9pel\u00e9sen t\u00fal \u00e9rdemben jav\u00edtanak a githubon tal\u00e1lhat\u00f3 labor jegyzetek min\u0151s\u00e9g\u00e9n. Pl.: jelent\u0151s mennyis\u00e9g\u0171 elg\u00e9pel\u00e9s jav\u00edt\u00e1sa, egy\u00e9rtelm\u0171s\u00edt\u00e9sek, illusztr\u00e1ci\u00f3k kieg\u00e9sz\u00edt\u00e9sek k\u00e9sz\u00edt\u00e9se vagy ak\u00e1r egy teljes kieg\u00e9sz\u00edt\u0151 jegyzet \u00edr\u00e1sa  (term\u00e9szetesen nem azonos pont\u00e9rt\u00e9kkel).</p> <p>Persze a pont n\u00e9lk\u00fcl az 1-1 bet\u0171s elg\u00e9pel\u00e9seket is sz\u00edvesen fogadjuk, ami bemeleg\u00edt\u00e9snek is t\u00f6k\u00e9letes.</p>"},{"location":"tudnivalok/github/contributing/#hibak-jelzese","title":"Hib\u00e1k jelz\u00e9se","text":"<p>Amennyiben hib\u00e1t tal\u00e1lsz az anyagban, vagy szeretn\u00e9d b\u0151v\u00edteni, de nem \u00e1ll m\u00f3dodban jav\u00edtani, nyithatsz egy issue-t amiben le\u00edrod a hib\u00e1t.</p> <ol> <li>N\u00e9zd meg, hogy valaki nem jelezte-e, amit szeretn\u00e9l.     Gyakran m\u00e1r l\u00e9tez\u0151 probl\u00e9m\u00e1kat tal\u00e1lnak, amire m\u00e1r van pull request,     \u00edgy miel\u0151tt b\u00e1rmit tenn\u00e9l n\u00e9zd meg valaki nem el\u0151z\u00f6tt-e meg</li> <li>Az issues tabon a new issue gombbal hozz l\u00e9tre egy \u00faj issue-t.     </li> <li>L\u00e1sd el a megfelel\u0151 c\u00edmk\u00e9kkel<ol> <li>A labor t\u00edpusa (<code>android</code> az androidos laborokn\u00e1l)</li> <li>A hiba t\u00edpusa (<code>clarification</code>, <code>typo</code>, <code>illustration</code> vagy <code>notes</code>)</li> </ol> </li> <li>\u00cdrd le, hogy mit k\u00e9ne tartalmaznia a jav\u00edt\u00e1snak</li> </ol> <p>Tip</p> <p>Az c\u00edme legyen r\u00f6vid \u00e9s l\u00e9nyegret\u00f6r\u0151, pl.: <code>Megfogalmaz\u00e1s pontos\u00edt\u00e1sa a 4. laborban</code> vagy <code>A 6. laborban a le\u00edrt k\u00f3d hib\u00e1san m\u0171k\u00f6dik Android 12-n</code></p> <p>A issue descriptionj\u00e9ben pedig fejtsd ki, hol tal\u00e1lhat\u00f3 a hi\u00e1nyoss\u00e1g, illetve ha van r\u00e1 \u00f6tleted, hogy lehetne orvosolni ezt. Ha ezeken t\u00fal m\u00e9g screenshotot is tudsz mell\u00e9kelni, az nagyban megseg\u00edti a probl\u00e9ma mihamarabbi jav\u00edt\u00e1s\u00e1t.</p> <p>Warning</p> <p>A github issues nem a laborfeladatok megold\u00e1s\u00e1val kapcsolatos probl\u00e9m\u00e1k helye, \u00edgy a \"Nem tudom megoldani hogy az \u00e9rtes\u00edt\u00e9s meg\u00e9rkezzen\" jelleg\u0171 probl\u00e9m\u00e1kat ne itt jelezz\u00e9tek, erre vannak a laboralkalmak.</p>"},{"location":"tudnivalok/github/contributing/#valtoztatasok-javaslasa","title":"V\u00e1ltoztat\u00e1sok javasl\u00e1sa","text":"<p>Amennyiben a hozz\u00e1j\u00e1rul\u00e1sod meg tudod val\u00f3s\u00edtani ind\u00edts pull requestet</p> <ol> <li> <p>Forkold a repository-t a Githubon jobb fels\u0151 sarokban tal\u00e1lhat\u00f3 gombbal     </p> </li> <li> <p>V\u00e9gezd el a v\u00e1ltoztat\u00e1sokat.</p> <p>Tip</p> <p>Ez nagyon hasonl\u00f3an m\u0171k\u00f6dik a laborok beada\u00e1s\u00e1hoz</p> <ol> <li> <p>Hozz l\u00e9tre egy branchet a saj\u00e1t forkodon, amin a v\u00e1ltoztat\u00e1sokat el fogod v\u00e9gezni.</p> </li> <li> <p>Ezen a branchen k\u00e9sz\u00edtsd el a jav\u00edt\u00e1sokat</p> </li> <li> <p>Ellen\u0151rizd, hogy ne ker\u00fclj\u00f6n bele a commitba olyan file, amit az editor gener\u00e1lt (pl.: <code>.idea</code> mappa) illetve olyan file aminek nem k\u00e9ne kiker\u00fclnie, pl.: Github Private Access Token</p> </li> <li> <p>Ha k\u00e9sz vagy a laborok bead\u00e1s\u00e1hoz hasonl\u00f3an ind\u00edts egy pull requestet a <code>VIAUAC00/laborok</code> <code>master</code> branch\u00e9re.</p> </li> <li> <p>L\u00e1sd el a megfelel\u0151 c\u00edmk\u00e9kkel</p> <ol> <li>A labor t\u00edpusa (<code>android</code> az androidos laborokn\u00e1l \u00e9s <code>web</code> a webes laborokn\u00e1l)</li> <li>A hiba t\u00edpusa (<code>clarification</code>, <code>typo</code>, <code>illustration</code> vagy <code>notes</code>)</li> </ol> </li> <li>A le\u00edr\u00e1sban r\u00e9szletezd v\u00e1ltoztat\u00e1sok ok\u00e1t.     Ne felejtsd el bele\u00edrni a NEPTUN k\u00f3dod a le\u00edr\u00e1sba, mert \u00edgy fogjuk tudni megadni a pontokat.</li> </ol> </li> <li> <p>Valaki, akinek hozz\u00e1f\u00e9r\u00e9se van a repositoryhoz, ellen\u0151rzi a v\u00e1ltoztat\u00e1sok sz\u00fcks\u00e9gess\u00e9g\u00e9t, \u00e9s elb\u00edr\u00e1lja, hogy val\u00f3ban beker\u00fclhet az anyagba.</p> </li> <li>A v\u00e1ltoztat\u00e1sokra review-t ind\u00edtunk \u00e9s ha kell m\u00f3dos\u00edt\u00e1sokat fogunk k\u00e9rni.</li> <li>Ha minden k\u00e9rt v\u00e1ltoztat\u00e1s megt\u00f6rt\u00e9nt, a hozz\u00e1j\u00e1rul\u00e1sod beleker\u00fcl az anyagba.</li> </ol>"},{"location":"tudnivalok/github/contributing/#code-style","title":"Code style","text":"<ul> <li>Kotlin: a hivatalos style guide alapj\u00e1n</li> <li>Markdown: Mivel az alap spec nem mindig a legtiszt\u00e1bban \u00e9rthet\u0151, a markdownlint szab\u00e1lyai alapj\u00e1n, az n\u00e9h\u00e1ny kiv\u00e9tel\u00e9vel. Ezeket a <code>.markdownlint.yaml</code>-ben tal\u00e1lod, ha VSCode-ot haszn\u00e1lsz automatikusan alkalmazza \u0151ket az editor \u00e9s jelzi ha nem megfelel\u0151 amit \u00edrsz.</li> </ul> <p>Ezek a st\u00edlusok a t\u00e1rgyban aj\u00e1nlott editorokban k\u00f6nnyen be\u00e1ll\u00edthat\u00f3ak.</p>"},{"location":"tudnivalok/github/contributing/#vscode","title":"VSCode","text":"<p>Aj\u00e1nlott extension\u00f6k:</p> <ul> <li><code>yzhang.markdown-all-in-one</code>: MD szinkroniz\u00e1lt live preview</li> <li><code>DavidAnson.vscode-markdownlint</code>: MD form\u00e1z\u00e1s, szab\u00e1lyok stb.</li> <li>Prettier: HTML+CSS form\u00e1z\u00f3</li> <li>Error Lens: Kiemeli a hib\u00e1kat hogy gyorsabben megtal\u00e1ljuk \u0151ket</li> </ul> <p>Az editor be\u00e1ll\u00edt\u00e1s\u00e1hoz nyisd meg a repo-t a gy\u00f6ker\u00e9ben VSCode-al. A VSCode fel fogja aj\u00e1nlani a k\u00e9t markdown extension-t.</p> <p></p> <p>Ha ez megt\u00f6rt\u00e9nt, nyiss meg egy markdown dokumentumot, \u00e9s haszn\u00e1ld a Ctrl+Shift+P shortcutot, a command palette megnyit\u00e1s\u00e1hoz.</p> <p>Tip</p> <p>A command palette a VSCode parancsaihoz ny\u00fajt hozz\u00e1f\u00e9r\u00e9st, autocompleteeli a parancsokat \u00e9s egy minim\u00e1lis GUI-t is biztos\u00edt.</p> <p>A command palette-be keress\u00fck meg a <code>Format Document With...</code> men\u00fcpontot \u00e9s v\u00e1lasszuk ki. Ekkor egy almen\u00fcbe dob az editor \u00e9s kiv\u00e1laszthatjuk hogy melyik form\u00e1z\u00f3val form\u00e1zzuk a MD dokumentumokat. Legalul lesz egy <code>Configure Default Formatter</code>, v\u00e1lasszuk ezt. Ezut\u00e1n v\u00e1lasszuk a <code>markdownlint</code> extensiont, \u00e9s k\u00e9szen vagyunk.</p> <p>Megfelel\u0151 formatter kiv\u00e1laszt\u00e1sa</p> <p>Ne v\u00e1laszd ki a prettiert formatterk\u00e9nt, mert elt\u00f6ri a sz\u00f6vegbubor\u00e9kokat.</p> <p>Ezen fel\u00fcl \u00e9rdemes lehet bekapcsolni a ment\u00e9s el\u0151tti form\u00e1z\u00e1st.</p> <p>A Ctrl+, shortcuttal megnyitjuk a be\u00e1ll\u00edt\u00e1sokat, \u00e9s r\u00e1keres\u00fcnk arra, hogy format on save. Itt kipip\u00e1ljuk a checkboxot \u00e9s k\u00e9szen vagyunk.</p> <p>Ha ehhez nem lenne t\u00fcrelmed, itt a json amit a <code>settings.json</code>-ba illesztve be\u00e1ll\u00edt\u00f3dik minden.</p> <pre><code>{\n\"[markdown]\": {\n\"editor.defaultFormatter\": \"DavidAnson.vscode-markdownlint\",\n\"editor.formatOnSave\": true\n}\n}\n</code></pre>"},{"location":"tudnivalok/github/contributing/#ajanlasok","title":"Aj\u00e1nl\u00e1sok","text":""},{"location":"tudnivalok/github/contributing/#android","title":"Android","text":"<ul> <li>Az androidos Kotlin \u00e9s XML fileokat illetve k\u00f3dr\u00e9szleteket Android Studioban form\u00e1zva \u00e9rdemes hozz\u00e1adni az anyaghoz</li> <li>Ahhoz hogy biztosan form\u00e1zva legyenek a fileok haszn\u00e1ld a Ctrl+Alt+L shortcutot</li> </ul>"},{"location":"tudnivalok/github/contributing/#markdown-fileok","title":"Markdown Fileok","text":"<ul> <li>A markdown fileokat se az Android Studio se a Visual Studio Code nem rendereli alaphelyzetben.   Erre a feladatra a k\u00f6vetkez\u0151 extension\u00f6ket/pluginokat tudom aj\u00e1nlani:</li> <li>VSCode: <code>yzhang.markdown-all-in-one</code></li> <li>Android Studio: Markdown Editor</li> </ul>"}]}